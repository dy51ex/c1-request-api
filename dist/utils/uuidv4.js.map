{"version":3,"file":"uuidv4.js","sourceRoot":"","sources":["../../$/utils/uuidv4.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,kEAA0C;AAE1C;;;GAGG;AACH,kBAAe,GAA0B,EAAE;IACvC,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;QAC9E,sCAAsC;QACtC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QACnC,sCAAsC;QACtC,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC1C,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IACH,OAAO,IAAA,mBAAS,EAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;AAC9C,CAAC,CAAA,CAAC","sourcesContent":["import LogAction from '../base/LogAction';\n\n/**\n * Создает новый UUID\n * @example $.utils.uuidv4()\n */\nexport default async (): Promise<string> => {\n    const logic = () => 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        // eslint-disable-next-line no-bitwise\n        const r = (Math.random() * 16) | 0;\n        // eslint-disable-next-line no-bitwise\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n    return LogAction('$.utils.uuidv4', logic);\n};\n"]}