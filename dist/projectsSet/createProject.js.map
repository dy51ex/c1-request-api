{"version":3,"file":"createProject.js","sourceRoot":"","sources":["../../$/projectsSet/createProject.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,kEAA0C;AAC1C,kEAA0C;AAE1C;;;GAGG;AACH,mBACE,MAA2F;;QAE3F,MAAM,KAAK,GAAG,GAAG,EAAE;YACjB,OAAO,IAAA,mBAAS,EAAgF;gBAC9F,IAAI,EAAE,MAAM;gBACZ,GAAG,EAAE,6BAA6B;gBAClC,IAAI,EAAE,MAAM;aACb,CAAC,CAAC;QACL,CAAC,CAAC;QACF,OAAO,IAAA,mBAAS,EAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;CAAA;AAXD,4BAWC","sourcesContent":["import { components } from '../../types';\r\nimport c1request from '../base/c1request';\r\nimport LogAction from '../base/LogAction';\r\n\r\n/**\r\n * Создает новое дело с основными данными - ответственный, название и тд, для записи в блоки, после создания нужно их получить, используя $.projectsGet.projectById(project, 'allTabs')\r\n * @example $.projectsSet.projectStructure(projectStructure)\r\n */\r\nexport default async function (\r\n  params: components['schemas']['CaseMap.Modules.Projects.App.Projects.CreateProjectRequest'],\r\n): Promise<components['schemas']['CaseMap.Modules.Projects.App.Projects.ProjectSummary']> {\r\n  const logic = () => {\r\n    return c1request<components['schemas']['CaseMap.Modules.Projects.App.Projects.ProjectSummary']>({\r\n      type: 'post',\r\n      url: '/api/Projects/CreateProject',\r\n      body: params,\r\n    });\r\n  };\r\n  return LogAction('$.projectsSet.projectCreate', logic);\r\n}\r\n"]}