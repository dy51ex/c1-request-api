{"version":3,"file":"valueToBlock.js","sourceRoot":"","sources":["../../$/projectsBlocksSet/valueToBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import { components, FieldPath } from '../../types';\r\nimport LogAction from '../base/LogAction';\r\n/**\r\n * Записывает в передаваемый обьект данные по указанному пути, для записи изменений нужно вызвать $.projectsSet.updateProject()\r\n * @example $.projectsBlocksSet.valueToBlock(project, $.projectsBlocksGet.pathsByName(project, { fieldNames: ['Поле 1'], blockName: 'Новый блок' })[0], 'Значение 2')\r\n */\r\nexport default function (\r\n  project: components['schemas']['CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks'],\r\n  fieldPath: FieldPath,\r\n  valueToSave: any\r\n) {\r\n  const logic = () => {\r\n    if (!project.Blocks) throw '$.projectsSet.valueToBlock - no Block found in project';\r\n    const blockIsExist = project.Blocks.find(\r\n      (block) =>\r\n        block.VisualBlockId === fieldPath.blockId &&\r\n        (fieldPath.blockOrder ? fieldPath.blockOrder === block.Order : true)\r\n    );\r\n    const blockIndex = blockIsExist\r\n      ? project.Blocks.map((block) => block.VisualBlockId! + (fieldPath.blockOrder ? block.Order : '')).indexOf(\r\n          fieldPath.blockId + (fieldPath.blockOrder ? fieldPath.blockOrder : '')\r\n        )\r\n      : project.Blocks.push({ VisualBlockId: fieldPath.blockId, Order: fieldPath.blockOrder || 0, Lines: [] }) - 1;\r\n\r\n    const lineIsExist = project.Blocks[blockIndex].Lines!.find(\r\n      (line: any) =>\r\n        line.BlockLineId === fieldPath.lineId &&\r\n        (fieldPath.lineOrder === 0 || fieldPath.lineOrder ? fieldPath.lineOrder === line.Order : true)\r\n    );\r\n    const lineIndex = lineIsExist\r\n      ? project.Blocks[blockIndex]\r\n          .Lines!.map((line: any) => line.BlockLineId! + (fieldPath.lineOrder ? line.Order : ''))\r\n          .indexOf(fieldPath.lineId + (fieldPath.lineOrder ? fieldPath.lineOrder : ''))\r\n      : project.Blocks[blockIndex].Lines!.push({\r\n          BlockLineId: fieldPath.lineId,\r\n          Order: fieldPath.lineOrder || 0,\r\n          Values: [],\r\n        }) - 1;\r\n\r\n    const fieldIsExist = project.Blocks[blockIndex].Lines![lineIndex].Values!.find(\r\n      (value: any) => value.VisualBlockProjectFieldId === fieldPath.fieldId\r\n    );\r\n    const fieldIndex = fieldIsExist\r\n      ? project.Blocks[blockIndex]\r\n          .Lines![lineIndex].Values!.map((value: any) => value.VisualBlockProjectFieldId)\r\n          .indexOf(fieldPath.fieldId)\r\n      : project.Blocks[blockIndex].Lines![lineIndex].Values!.push({\r\n          VisualBlockProjectFieldId: fieldPath.fieldId,\r\n        }) - 1;\r\n    project.Blocks[blockIndex].Lines![lineIndex].Values![fieldIndex].Value = valueToSave; //eslint-disable-line\r\n    return project;\r\n  };\r\n  return LogAction('$.projectsBlocksSet.valueToBlock', logic);\r\n}\r\n"]}