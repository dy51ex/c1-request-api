{"version":3,"file":"pathsByName.js","sourceRoot":"","sources":["../../$/clientsFormsGet/pathsByName.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,kEAA0C;AAC1C,sEAA8C;AAE9C;;;;;;;GAOG;AACH,kBAAe,CACX,IAAiG,EACjG,MAGC,EACmB,EAAE;IACtB,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,IAAA,qBAAW,EAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC9C,OAAO,IAAA,mBAAS,EAAc,2BAA2B,EAAE,KAAK,CAAC,CAAC;AACtE,CAAC,CAAA,CAAC","sourcesContent":["import { components, FieldPath } from '../../types';\nimport LogAction from '../base/LogAction';\nimport pathsByName from '../base/pathsByName';\n\n/**\n * Осуществляет поиск поля по его названию в MetadataOfBlocks,\n * если поле не найдено - вызывет ошибку. Для получения значения поля\n * лучше использовать $.clientForms.valuesByName\n * @method $.clientForms.pathsByName\n * @example $.clientForms.pathsByName(form, { fieldNames:\n * ['Поле 1', 'Поле 2'], blockName: 'Новый блок' })\n */\nexport default async (\n    form: components['schemas']['CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto'],\n    params: {\n        fieldNames: string[];\n        blockName?: string;\n    },\n): Promise<FieldPath[]> => {\n    const logic = () => pathsByName(form, params);\n    return LogAction<FieldPath[]>('$.clientForms.pathsByName', logic);\n};\n"]}