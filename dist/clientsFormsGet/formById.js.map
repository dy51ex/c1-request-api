{"version":3,"file":"formById.js","sourceRoot":"","sources":["../../$/clientsFormsGet/formById.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,kEAA0C;AAC1C,kEAA0C;AAE1C;;;GAGG;AAEH,kBAAe,CACX,MAAc,EACsF,EAAE;IACtG,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,IAAA,mBAAS,EAA8F;QACvH,IAAI,EAAE,KAAK;QACX,GAAG,EAAE,8BAA8B,MAAM,EAAE;KAC9C,CAAC,CAAC;IACH,OAAO,IAAA,mBAAS,EAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;AACtD,CAAC,CAAA,CAAC","sourcesContent":["import { components } from '../../types';\nimport c1request from '../base/c1request';\nimport LogAction from '../base/LogAction';\n\n/**\n * Возвращает структуру клиентского запроса по указанному Id формы\n * @example $.clientForms.formById(id)\n */\n\nexport default async (\n    formId: string,\n): Promise<components['schemas']['CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto']> => {\n    const logic = () => c1request<components['schemas']['CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto']>({\n        type: 'get',\n        url: `/api/IntakeObjects/Get/?Id=${formId}`,\n    });\n    return LogAction('$.clientForms.formById', logic);\n};\n"]}