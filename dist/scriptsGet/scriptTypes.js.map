{"version":3,"file":"scriptTypes.js","sourceRoot":"","sources":["../../$/scriptsGet/scriptTypes.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,kEAA0C;AAC1C,kEAA0C;AAE1C;;;GAGG;AACH,kBAAe,GAA6G,EAAE;IAC1H,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,IAAA,mBAAS,EAA4F;QACrH,IAAI,EAAE,MAAM;QACZ,GAAG,EAAE,oCAAoC;QACzC,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE,sBAAsB,EAAE;KAC9D,CAAC,CAAC;IACH,OAAO,IAAA,mBAAS,EAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;AACxD,CAAC,CAAA,CAAC","sourcesContent":["import { components } from '../../types';\nimport c1request from '../base/c1request';\nimport LogAction from '../base/LogAction';\n\n/**\n * Возвращает системные типы сценариев\n * @example $.scriptsGet.scriptTypes()\n */\nexport default async (): Promise<components['schemas']['CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary'][]> => {\n    const logic = () => c1request<components['schemas']['CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary'][]>({\n        type: 'post',\n        url: '/api/dictionary/getdictionaryitems',\n        body: { PageSize: 999, SystemName: 'AutomationScriptType' },\n    });\n    return LogAction('$.scriptsGet.scriptTypes', logic);\n};\n"]}