{"version":3,"file":"projectBlocksTypes.js","sourceRoot":"","sources":["../../$/projectsGet/projectBlocksTypes.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,kEAA0C;AAC1C,kEAA0C;AAE1C;;;GAGG;AACH;;QACE,MAAM,KAAK,GAAG,GAAG,EAAE;YACjB,OAAO,IAAA,mBAAS,EAAuG;gBACrH,IAAI,EAAE,MAAM;gBACZ,GAAG,EAAE,yCAAyC;gBAC9C,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE;aACxB,CAAC,CAAC;QACL,CAAC,CAAC;QACF,OAAO,IAAA,mBAAS,EAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;IAC9D,CAAC;CAAA;AATD,4BASC","sourcesContent":["import { components } from '../../types';\r\nimport c1request from '../base/c1request';\r\nimport LogAction from '../base/LogAction';\r\n\r\n/**\r\n * Получает все блоки созданные в конструкторе обьектов\r\n * @example $.projectsGet.projectBlocksTypes(projectId)\r\n */\r\nexport default async function (): Promise<components['schemas']['CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse'][]> {\r\n  const logic = () => {\r\n    return c1request<components['schemas']['CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse'][]>({\r\n      type: 'post',\r\n      url: '/api/VisualBlocks/GetCustomVisualBlocks',\r\n      body: { PageSize: 999 },\r\n    });\r\n  };\r\n  return LogAction('$.projectsGet.projectBlocksTypes', logic);\r\n}\r\n"]}