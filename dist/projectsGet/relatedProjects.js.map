{"version":3,"file":"relatedProjects.js","sourceRoot":"","sources":["../../$/projectsGet/relatedProjects.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,kEAA0C;AAC1C,kEAA0C;AAE1C;;;GAGG;AACH,mBACE,SAAiB;;QAEjB,MAAM,KAAK,GAAG,GAAG,EAAE;YACjB,OAAO,IAAA,mBAAS,EAAqG;gBACnH,IAAI,EAAE,KAAK;gBACX,GAAG,EAAE,uFAAuF,SAAS,EAAE;aACxG,CAAC,CAAC;QACL,CAAC,CAAC;QACF,OAAO,IAAA,mBAAS,EAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;CAAA;AAVD,4BAUC","sourcesContent":["import { components } from '../../types';\r\nimport c1request from '../base/c1request';\r\nimport LogAction from '../base/LogAction';\r\n\r\n/**\r\n * Отдает связанные дела, связанными считаются дела проставленные в блок ссылки или добавленные как обьект в конструкторе\r\n * @example $.projectsGet.relatedProjects(projectId)\r\n */\r\nexport default async function (\r\n  projectId: string\r\n): Promise<components['schemas']['CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto'][]> {\r\n  const logic = () => {\r\n    return c1request<components['schemas']['CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto'][]>({\r\n      type: 'get',\r\n      url: `/api/RelatedObjects/GetRelatedObjects?criterion.type=ProjectToProjects&criterion.id=${projectId}`,\r\n    });\r\n  };\r\n  return LogAction('$.projectsGet.relatedProjects', logic);\r\n}\r\n"]}