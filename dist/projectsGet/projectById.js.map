{"version":3,"file":"projectById.js","sourceRoot":"","sources":["../../$/projectsGet/projectById.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,kEAA0C;AAC1C,kEAA0C;AAqB1C,SAAe,WAAW,CAAC,SAAiB,EAAE,OAAkD,QAAQ;;QACtG,MAAM,KAAK,GAAG,GAAS,EAAE;YACvB,MAAM,OAAO,GAAG,MAAM,IAAA,mBAAS,EAAgF;gBAC7G,IAAI,EAAE,KAAK;gBACX,GAAG,EAAE,sCAAsC,SAAS,EAAE;aACvD,CAAC,CAAC;YACH,IAAI,IAAI,KAAK,QAAQ;gBAAE,OAAO,OAAO,CAAC;YACtC,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,MAAM,OAAO,GAAG,MAAM,IAAA,mBAAS,EAC7B;oBACE,IAAI,EAAE,KAAK;oBACX,GAAG,EAAE,0DAA0D,SAAS,EAAE;iBAC3E,CACF,CAAC;gBACF,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aACxC;YACD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,MAAM,OAAO,GAAG,IAAA,mBAAS,EACvB;oBACE,IAAI,EAAE,KAAK;oBACX,GAAG,EAAE,iEAAiE,SAAS,EAAE;iBAClF,CACF,CAAC;gBACF,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aACxC;YACD,MAAM,GAAG,GAAG,OAAQ,CAAC,WAAY,CAAC,IAAK,CAAC,IAAI,CAAC,CAAC,OAAY,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;YACtF,MAAM,QAAQ,GAAG,IAAA,mBAAS,EACxB;gBACE,IAAI,EAAE,KAAK;gBACX,GAAG,EAAE,sDAAsD,OAAO,CAAC,EAAE,6BAA6B,GAAI,CAAC,EAAE,EAAE;aAC5G,CACF,CAAC;YACF,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC1C,CAAC,CAAA,CAAC;QAEF,OAAO,IAAA,mBAAS,EAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;CAAA;AACD,kBAAe,WAAW,CAAC","sourcesContent":["import { components } from '../../types';\r\nimport c1request from '../base/c1request';\r\nimport LogAction from '../base/LogAction';\r\n\r\n/**\r\n * Получение дела, с блоками или без, в зависимости от переданных параметров\r\n * @example $.projectsGet.projectById(projectId, 'allTabs')\r\n */\r\n\r\nasync function projectById(\r\n  projectId: string,\r\n  tabs: 'noTabs'\r\n): Promise<components['schemas']['CaseMap.Modules.Projects.App.Projects.ProjectSummary']>;\r\nasync function projectById(\r\n  projectId: string,\r\n  tabs: 'mainTab' | 'allTabs'\r\n): Promise<components['schemas']['CaseMap.Modules.Projects.App.Projects.ProjectSummary'] &\r\n  components['schemas']['CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse']>;\r\nasync function projectById(\r\n  projectId: string,\r\n  tabs: string\r\n): Promise<components['schemas']['CaseMap.Modules.Projects.App.Projects.ProjectSummary'] &\r\n  components['schemas']['CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectTabBaseResponse']>;\r\nasync function projectById(projectId: string, tabs: 'noTabs' | 'mainTab' | 'allTabs' | string = 'noTabs') {\r\n  const logic = async () => {\r\n    const project = await c1request<components['schemas']['CaseMap.Modules.Projects.App.Projects.ProjectSummary']>({\r\n      type: 'get',\r\n      url: `/api/projects/GetProject?projectId=${projectId}`,\r\n    });\r\n    if (tabs === 'noTabs') return project;\r\n    if (tabs === 'mainTab') {\r\n      const mainTab = await c1request<components['schemas']['CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse']>(\r\n        {\r\n          type: 'get',\r\n          url: `/api/ProjectCustomValues/GetProjectSummary/?request.id=${projectId}`,\r\n        }\r\n      );\r\n      return Object.assign(project, mainTab);\r\n    }\r\n    if (tabs === 'allTabs') {\r\n      const allTabs = c1request<components['schemas']['CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse']>(\r\n        {\r\n          type: 'get',\r\n          url: `/api/ProjectCustomValues/GetAllVisualBlocks?request.projectId=${projectId}`,\r\n        }\r\n      );\r\n      return Object.assign(project, allTabs);\r\n    }\r\n    const tab = project!.ProjectType!.Tabs!.find((tabData: any) => tabData.Name === tabs);\r\n    const response = c1request<components['schemas']['CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectTabBaseResponse']>(\r\n      {\r\n        type: 'get',\r\n        url: `/api/ProjectCustomValues/GetProjectTab/?request.id=${project.Id}&request.projectTypeTabId=${tab!.Id}`,\r\n      }\r\n    );\r\n    return Object.assign(project, response);\r\n  };\r\n\r\n  return LogAction('$.projectsGet.projectById', logic);\r\n}\r\nexport default projectById;\r\n"]}