{"version":3,"file":"pathsByName.js","sourceRoot":"","sources":["../../$/projectsBlocksGet/pathsByName.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,kEAA0C;AAC1C,sEAA8C;AAE9C;;;;;GAKG;AACH,kBAAe,CACX,OAAgH,EAChH,MAGC,EACmB,EAAE;IACtB,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,IAAA,qBAAW,EAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IACjD,OAAO,IAAA,mBAAS,EAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC/D,CAAC,CAAA,CAAC","sourcesContent":["import { components, FieldPath } from '../../types';\nimport LogAction from '../base/LogAction';\nimport pathsByName from '../base/pathsByName';\n\n/**\n * Получает путь до значения поля по имени поля, возвращая массив путей\n * @example $.projectsBlocksGet.pathsByName(\n *  project, { fieldNames: ['Поле 1', 'Поле 2'], blockName: 'Новый блок' }\n * )\n */\nexport default async (\n    project: components['schemas']['CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse'],\n    params: {\n        fieldNames: string[];\n        blockName?: string;\n    },\n): Promise<FieldPath[]> => {\n    const logic = () => pathsByName(project, params);\n    return LogAction('$.projectsBlocksGet.pathsByName', logic);\n};\n"]}