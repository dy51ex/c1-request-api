/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/AccountActions/ResetPassword": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LogonResponseModel"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LogonResponseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ResetPasswordViewModel"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ResetPasswordViewModel"];
        };
      };
    };
  };
  "/api/AccountActions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LogonResponseModel"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LogonResponseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ResetPasswordViewModel"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ResetPasswordViewModel"];
        };
      };
    };
  };
  "/api/AccountActions/GenerateAccessToken": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.GenerateAccessTokenRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.GenerateAccessTokenRequest"];
        };
      };
    };
  };
  "/Authentication/Account/Token": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            grant_type?: string;
            password?: string;
            username?: string;
          };
        };
      };
    };
  };
  "/api/Accounts/GetAccount": {
    get: {
      parameters: {
        query: {
          accountId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
          };
        };
      };
    };
  };
  "/api/Accounts": {
    get: {
      parameters: {
        query: {
          accountId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountUpdate"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountUpdate"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountWithBalanceDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountWithBalanceDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountsListRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountsListRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          accountId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Accounts/GetAllAccounts": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountWithBalanceDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountWithBalanceDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountsListRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountsListRequest"];
        };
      };
    };
  };
  "/api/Accounts/GetAllAccountsBySuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.AccountSuggestDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.AccountSuggestDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountsSuggestRequest"];
        };
      };
    };
  };
  "/api/Accounts/Create": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountCreate"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountCreate"];
        };
      };
    };
  };
  "/api/Accounts/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountUpdate"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountUpdate"];
        };
      };
    };
  };
  "/api/Accounts/Delete": {
    delete: {
      parameters: {
        query: {
          accountId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Accounts/BatchSave": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountBatchSave"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountBatchSave"];
        };
      };
    };
  };
  "/api/Accounts/GetClientsList": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountClientDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountClientDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountClientsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountClientsRequest"];
        };
      };
    };
  };
  "/api/Accounts/GetClientAccounts": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.AccountWithBalance>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.AccountWithBalance>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.ClientsAccountBalanceRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.ClientsAccountBalanceRequest"];
        };
      };
    };
  };
  "/api/Activate/Activate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"];
        };
      };
    };
  };
  "/api/Activate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"];
        };
      };
    };
  };
  "/api/Activate/ActivatePackages": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"][];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"][];
        };
      };
    };
  };
  "/api/ActivityTagsSuggest/GetActivityTags": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ActivityTagsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ActivityTagsSuggest/GetFeedActivityTags": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/AiAssistant/HasUnreadUpdates": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
          };
        };
      };
    };
  };
  "/api/AiAssistant": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
          };
        };
      };
    };
  };
  "/api/AirCall/AttachUser": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplication>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplication>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.AirCall.Commands.AttachUser"];
          "text/json": components["schemas"]["CaseMap.Modules.AirCall.Commands.AttachUser"];
        };
      };
    };
  };
  "/api/AirCall/CallEvents": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.AirCall.Models.WebhookPayload<CaseMap.Modules.AirCall.Models.Call>"];
          "text/json": components["schemas"]["CaseMap.Modules.AirCall.Models.WebhookPayload<CaseMap.Modules.AirCall.Models.Call>"];
        };
      };
    };
  };
  "/api/AirCall/Authorize": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/AirCall/AuthFinish": {
    get: {
      parameters: {
        query: {
          state?: string;
          code?: string;
          error?: string;
          error_description?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptCompareTypes/Get": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.FieldTypeWithCompareTypes>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.FieldTypeWithCompareTypes>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptCompareTypes": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.FieldTypeWithCompareTypes>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.FieldTypeWithCompareTypes>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptDestinationEntityFields/Get": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary>>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptDestinationEntityFields": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary>>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptDestinationFields/Get": {
    get: {
      parameters: {
        query: {
          rootViewSysName?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary>>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptDestinationFields": {
    get: {
      parameters: {
        query: {
          rootViewSysName?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary>>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptFilterFields/Get": {
    get: {
      parameters: {
        query: {
          RootViewName?: string;
          RootGroupId?: string;
          Name?: string;
          Ids?: string[];
          IgnoreIds?: string[];
          ParentId?: string;
          ParentTempId?: string;
          Page?: number;
          PageSize?: number;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptFilterFields": {
    get: {
      parameters: {
        query: {
          RootViewName?: string;
          RootGroupId?: string;
          Name?: string;
          Ids?: string[];
          IgnoreIds?: string[];
          ParentId?: string;
          ParentTempId?: string;
          Page?: number;
          PageSize?: number;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptFilterValues/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptFilterValuesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptFilterValuesRequest"];
        };
      };
    };
  };
  "/api/AutomationScriptFilterValues": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptFilterValuesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptFilterValuesRequest"];
        };
      };
    };
  };
  "/api/AutomationScriptManualSuggest/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.GetManualScripts"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.GetManualScripts"];
        };
      };
    };
  };
  "/api/AutomationScriptManualSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.GetManualScripts"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.GetManualScripts"];
        };
      };
    };
  };
  "/api/AutomationScriptRecipientFields/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.FindRecipientFieldSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.FindRecipientFieldSuggestByFilter"];
        };
      };
    };
  };
  "/api/AutomationScriptRecipientFields": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.FindRecipientFieldSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.FindRecipientFieldSuggestByFilter"];
        };
      };
    };
  };
  "/api/AutomationScriptRestrictionFields/Get": {
    get: {
      parameters: {
        query: {
          Name?: string;
          Ids?: string[];
          IgnoreIds?: string[];
          ParentId?: string;
          ParentTempId?: string;
          Page?: number;
          PageSize?: number;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptRestrictionFields": {
    get: {
      parameters: {
        query: {
          Name?: string;
          Ids?: string[];
          IgnoreIds?: string[];
          ParentId?: string;
          ParentTempId?: string;
          Page?: number;
          PageSize?: number;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptRestrictionFieldValue/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptRestrictionFieldValueRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptRestrictionFieldValueRequest"];
        };
      };
    };
  };
  "/api/AutomationScriptRestrictionFieldValue": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptRestrictionFieldValueRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptRestrictionFieldValueRequest"];
        };
      };
    };
  };
  "/api/AutomationScripts/GetAutomationScript/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
    };
  };
  "/api/AutomationScripts/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/AutomationScripts": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.AutomationScriptUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.AutomationScriptUpdateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.GetAutomationScriptsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.GetAutomationScriptsRequest"];
        };
      };
    };
  };
  "/api/AutomationScripts/GetAutomationScripts": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.GetAutomationScriptsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.GetAutomationScriptsRequest"];
        };
      };
    };
  };
  "/api/AutomationScripts/CreateOrUpdate": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.AutomationScriptUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.AutomationScriptUpdateRequest"];
        };
      };
    };
  };
  "/api/AutomationScripts/Run": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.RunManualScript"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.RunManualScript"];
        };
      };
    };
  };
  "/api/AutomationScripts/RunBulkProject": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.RunManualScriptBulkProject"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.RunManualScriptBulkProject"];
        };
      };
    };
  };
  "/api/AutomationScripts/CloneAutomationScript": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.CloneAutomationScript"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.CloneAutomationScript"];
        };
      };
    };
  };
  "/api/AutomationScripts/Delete/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/AutomationScripts/GetDependencies": {
    get: {
      parameters: {
        query: {
          AutomationScriptId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject[]>"];
          };
        };
      };
    };
  };
  "/api/AutomationScripts/CreateFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.CreateAutomationScriptFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.CreateAutomationScriptFolder"];
        };
      };
    };
  };
  "/api/AutomationScripts/GetFolder/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
    };
  };
  "/api/AutomationScripts/GetDestinationFoldersForMove": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Interfaces.Responses.DestinationFolderDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Interfaces.Responses.DestinationFolderDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.GetDestinationFoldersForMove"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.GetDestinationFoldersForMove"];
        };
      };
    };
  };
  "/api/AutomationScripts/MoveItems": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.MoveAutomationScriptItems"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.MoveAutomationScriptItems"];
        };
      };
    };
  };
  "/api/AutomationScripts/RenameFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.RenameAutomationScriptFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.RenameAutomationScriptFolder"];
        };
      };
    };
  };
  "/api/AutomationScripts/DeleteFolder/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptScheme/Get/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptScheme/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptScheme": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.CreateOrUpdateAutomationScript"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.CreateOrUpdateAutomationScript"];
        };
      };
    };
  };
  "/api/AutomationScriptScheme/CreateOrUpdate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.CreateOrUpdateAutomationScript"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.CreateOrUpdateAutomationScript"];
        };
      };
    };
  };
  "/api/AutomationScriptScheme/TestScript": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TestScriptResult>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TestScriptResult>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.TestScriptCommand"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.TestScriptCommand"];
        };
      };
    };
  };
  "/api/AutomationScriptSourceFields/Get": {
    get: {
      parameters: {
        query: {
          ForDateTime: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RootSourceFields>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RootSourceFields>>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptSourceFields": {
    get: {
      parameters: {
        query: {
          ForDateTime: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RootSourceFields>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RootSourceFields>>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptsSuggest/GetAutomationScripts": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.AutomationScriptsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.AutomationScriptsSuggestRequest"];
        };
      };
    };
  };
  "/api/AutomationScriptsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.AutomationScriptsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.AutomationScriptsSuggestRequest"];
        };
      };
    };
  };
  "/api/AutomationScriptTriggerFields/Get": {
    get: {
      parameters: {
        query: {
          eventSysName: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TriggerFieldSummary>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TriggerFieldSummary>>"];
          };
        };
      };
    };
  };
  "/api/AutomationScriptTriggerFields": {
    get: {
      parameters: {
        query: {
          eventSysName: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TriggerFieldSummary>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TriggerFieldSummary>>"];
          };
        };
      };
    };
  };
  "/api/BilledTimeCalculator/CalculateTimeLogSum": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Nullable<decimal>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Nullable<decimal>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Controllers.Bills.BilledTimes.CalculateTimeLogSum"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Controllers.Bills.BilledTimes.CalculateTimeLogSum"];
        };
      };
    };
  };
  "/api/BilledTimeCalculator": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Nullable<decimal>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Nullable<decimal>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Controllers.Bills.BilledTimes.CalculateTimeLogSum"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Controllers.Bills.BilledTimes.CalculateTimeLogSum"];
        };
      };
    };
  };
  "/api/BilledTimes/GetBilledTimes": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimesRequest"];
        };
      };
    };
  };
  "/api/BilledTimes": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimeUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimeUpdateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimesRequest"];
        };
      };
    };
  };
  "/api/BilledTimes/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimeUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimeUpdateRequest"];
        };
      };
    };
  };
  "/api/BillGroupActions/UpdateBillsStatus": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsUpdateStatusRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsUpdateStatusRequest"];
        };
      };
    };
  };
  "/api/BillGroupActions": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsUpdateStatusRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsUpdateStatusRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsBatchCreateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsBatchCreateRequest"];
        };
      };
    };
  };
  "/api/BillGroupActions/CreateBills": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsBatchCreateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsBatchCreateRequest"];
        };
      };
    };
  };
  "/api/BillGroupActions/Delete": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsDeleteRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsDeleteRequest"];
        };
      };
    };
  };
  "/api/BillGroupActions/BatchPrint": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/BillGroupActions/PrintPreviews": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsBatchPrintRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsBatchPrintRequest"];
        };
      };
    };
  };
  "/Invoices/PrintPreview/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/BillGroupActions/Download": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/BillingRules/GetBillingRule": {
    get: {
      parameters: {
        query: {
          billingRuleId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>"];
          };
        };
      };
    };
  };
  "/api/BillingRules": {
    get: {
      parameters: {
        query: {
          billingRuleId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>"];
          };
        };
      };
    };
  };
  "/api/BillingRules/GetBillingRules": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>"];
          };
        };
      };
    };
  };
  "/api/BillingSettings/GetSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse>"];
          };
        };
      };
    };
  };
  "/api/BillingSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingUpdateRequest"];
        };
      };
    };
  };
  "/api/BillingSettings/UpdateSettings": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingUpdateRequest"];
        };
      };
    };
  };
  "/api/Bills/GetBillGroups": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillGroupResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillGroupResponse[]>"];
          };
        };
      };
    };
  };
  "/api/Bills": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.Dictionary<string, string[]>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.Dictionary<string, string[]>>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillCreateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillCreateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillGroupResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillGroupResponse[]>"];
          };
        };
      };
    };
  };
  "/api/Bills/GetBillableClients": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillableClientResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillableClientResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
        };
      };
    };
  };
  "/api/Bills/GetBill": {
    get: {
      parameters: {
        query: {
          billId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
          };
        };
      };
    };
  };
  "/api/Bills/GetBills": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientBillsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientBillsResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillsRequest"];
        };
      };
    };
  };
  "/api/Bills/GetBillCases": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.DAL.Data.DTO.ProjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.DAL.Data.DTO.ProjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillCasesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillCasesRequest"];
        };
      };
    };
  };
  "/api/Bills/Create": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillCreateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillCreateRequest"];
        };
      };
    };
  };
  "/api/Bills/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillUpdateRequest"];
        };
      };
    };
  };
  "/api/Bills/Rebuild": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.RebuildRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.RebuildRequest"];
        };
      };
    };
  };
  "/api/Bills/UpdateStatus": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillStatusUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillStatusUpdateRequest"];
        };
      };
    };
  };
  "/api/Bills/GetBillTotal": {
    get: {
      parameters: {
        query: {
          billId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillTotalResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillTotalResponse>"];
          };
        };
      };
    };
  };
  "/api/Bills/Preview": {
    get: {
      parameters: {
        query: {
          billId?: string;
          templateId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Bills/Download": {
    get: {
      parameters: {
        query: {
          billId?: string;
          templateId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Bills/UpdateBillTemplate": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillTemplateUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillTemplateUpdateRequest"];
        };
      };
    };
  };
  "/api/Bills/GetBillsByCase": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillListItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillListItemResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.GetBillsByCaseRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.GetBillsByCaseRequest"];
        };
      };
    };
  };
  "/api/Bills/GenerateEmailTemplate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Requests.V43.SendEmailRequest>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Requests.V43.SendEmailRequest>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillEmailTemplateGenerationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillEmailTemplateGenerationRequest"];
        };
      };
    };
  };
  "/api/Bills/GetParticipantsByBills": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsBillsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsBillsResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.ClientsBillsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.ClientsBillsRequest"];
        };
      };
    };
  };
  "/api/Bills/SendBillsToClients": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsSendEmailsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsSendEmailsResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.ClientsSendEmailsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.ClientsSendEmailsRequest"];
        };
      };
    };
  };
  "/api/Bills/CreateRetainerBill": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.RetainerBillCreateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.RetainerBillCreateRequest"];
        };
      };
    };
  };
  "/api/Bills/Summary": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillsSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillsSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.SummaryRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.SummaryRequest"];
        };
      };
    };
  };
  "/api/Bills/GetTransitionsMatrixBetweenStatuses": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.Dictionary<string, string[]>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.Dictionary<string, string[]>>"];
          };
        };
      };
    };
  };
  "/api/BillsSuggest/GetBills": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/BillsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/BillsSuggest/GetBillStatuses": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.SysIdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.SysIdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/Bootstrap/GetBootstrap": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: any };
            "text/json": { [key: string]: any };
          };
        };
      };
    };
  };
  "/api/Bootstrap": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: any };
            "text/json": { [key: string]: any };
          };
        };
      };
    };
  };
  "/api/Bootstrap/GetShellBootstrap": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: any };
            "text/json": { [key: string]: any };
          };
        };
      };
    };
  };
  "/api/Cache/InvalidateAllCache": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Cache": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Calculation/GetInputData": {
    get: {
      parameters: {
        query: {
          EntityId: string;
          CalculationFormulaId: string;
          ProjectLineId: string;
          ProjectVisualBlockId: string;
          VisualBlockId: string;
          BlockLineId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationDataResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationDataResponse>"];
          };
        };
      };
    };
  };
  "/api/Calculation": {
    get: {
      parameters: {
        query: {
          EntityId: string;
          CalculationFormulaId: string;
          ProjectLineId: string;
          ProjectVisualBlockId: string;
          VisualBlockId: string;
          BlockLineId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationDataResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationDataResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary"];
        };
      };
    };
  };
  "/api/Calculation/UpdateResult": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary"];
        };
      };
    };
  };
  "/api/Calculation/Calculate": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.Calculation.ViewModels.CalculatedField>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.Calculation.ViewModels.CalculatedField>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Calculation.Commands.CalculateFormulas"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Calculation.Commands.CalculateFormulas"];
        };
      };
    };
  };
  "/api/CalculationFormulas/CreateCalculationFormula": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequestBase"];
        };
      };
    };
  };
  "/api/CalculationFormulas": {
    get: {
      parameters: {
        query: {
          calculationFormulaId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequestBase"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          calculationFormulaId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
          };
        };
      };
    };
  };
  "/api/CalculationFormulas/UpdateCalculationFormula": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequest"];
        };
      };
    };
  };
  "/api/CalculationFormulas/DeleteCalculationFormula": {
    delete: {
      parameters: {
        query: {
          calculationFormulaId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
          };
        };
      };
    };
  };
  "/api/CalculationFormulas/CheckFormulaIsUsed": {
    get: {
      parameters: {
        query: {
          calculationFormulaId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
          };
        };
      };
    };
  };
  "/api/CalculationFormulas/GetCalculationFormulas": {
    get: {
      parameters: {
        query: {
          Page?: number;
          PageSize?: number;
          Name?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
          };
        };
      };
    };
  };
  "/api/CalculationFormulasSuggest/GetCalculationFormulas": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/CalculationFormulasSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/CalculationTypes/Get": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName[]>"];
          };
        };
      };
    };
  };
  "/api/CalculationTypes": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName[]>"];
          };
        };
      };
    };
  };
  "/api/Calendar/GetCalendarEvents": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calendar.BusinessDAL.Dto.CalendarEventShortDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calendar.BusinessDAL.Dto.CalendarEventShortDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarEventsSearchRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarEventsSearchRequest"];
        };
      };
    };
  };
  "/api/Calendar": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarEventSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarEventSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarEventUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarEventUpdateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calendar.BusinessDAL.Dto.CalendarEventShortDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calendar.BusinessDAL.Dto.CalendarEventShortDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarEventsSearchRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarEventsSearchRequest"];
        };
      };
    };
  };
  "/api/Calendar/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
          };
        };
      };
    };
  };
  "/api/Calendar/GetGroupedCalendarEvents": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calendar.Models.Responses.GroupedCalendarEvents>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calendar.Models.Responses.GroupedCalendarEvents>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.GroupedCalendarEventsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.GroupedCalendarEventsRequest"];
        };
      };
    };
  };
  "/api/Calendar/PutEvent": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarEventSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarEventSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarEventUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarEventUpdateRequest"];
        };
      };
    };
  };
  "/api/Calendar/PutTask": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarTaskSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarTaskSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarTaskUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarTaskUpdateRequest"];
        };
      };
    };
  };
  "/api/Calendar/GetCalendars": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarSuggestRequest"];
        };
      };
    };
  };
  "/api/Calendar/GetEventCalendars": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Common.Requests.SuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Common.Requests.SuggestRequest"];
        };
      };
    };
  };
  "/api/Calendar/GetCalendar/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
          };
        };
      };
    };
  };
  "/api/Calendar/PutCalendar": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarUpdateRequest"];
        };
      };
    };
  };
  "/api/Calendar/CheckCalendar": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarCheckRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarCheckRequest"];
        };
      };
    };
  };
  "/api/Calendar/DeleteCalendar/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>"];
          };
        };
      };
    };
  };
  "/api/Calendar/ExportLink": {
    get: {
      parameters: {
        query: {
          calendarId?: string;
          userId?: string;
          authToken?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Calendar/GetExportLink": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarExportLinkResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarExportLinkResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarLinkRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarLinkRequest"];
        };
      };
    };
  };
  "/api/Calendar/SynchronizeCalendar": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarLinkRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarLinkRequest"];
        };
      };
    };
  };
  "/api/Calendar/UnsynchronizeCalendar": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarLinkRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Calendar.Models.Requests.CalendarLinkRequest"];
        };
      };
    };
  };
  "/api/Calendar/GetModules": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarModuleResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarModuleResponse[]>"];
          };
        };
      };
    };
  };
  "/api/Calls/GetCalls": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calls.Commands.GetCalls"];
          "text/json": components["schemas"]["CaseMap.Modules.Calls.Commands.GetCalls"];
        };
      };
    };
  };
  "/api/Calls": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calls.Commands.UpdateCall"];
          "text/json": components["schemas"]["CaseMap.Modules.Calls.Commands.UpdateCall"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calls.Commands.GetCalls"];
          "text/json": components["schemas"]["CaseMap.Modules.Calls.Commands.GetCalls"];
        };
      };
    };
  };
  "/api/Calls/GetCall": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
          };
        };
      };
    };
  };
  "/api/Calls/UpdateCall": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calls.Models.CallDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calls.Commands.UpdateCall"];
          "text/json": components["schemas"]["CaseMap.Modules.Calls.Commands.UpdateCall"];
        };
      };
    };
  };
  "/api/Calls/AttachUser": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplication>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplication>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calls.Commands.AttachUser"];
          "text/json": components["schemas"]["CaseMap.Modules.Calls.Commands.AttachUser"];
        };
      };
    };
  };
  "/api/Casebook/CheckCasebookFoldersAsync": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Casebook/CheckCasebookFolders": {
    get: {
      parameters: {
        query: {
          dateTo?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Casebook/GetFoldersSyncState": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Services.SyncState>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Services.SyncState>"];
          };
        };
      };
    };
  };
  "/api/Casebook": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Services.SyncState>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Services.SyncState>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProject"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProject"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectCasebookItem[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectCasebookItem[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindCasebookProjectByAuthorId"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindCasebookProjectByAuthorId"];
        };
      };
    };
  };
  "/api/Casebook/CheckCasebookCase": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProject"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProject"];
        };
      };
    };
  };
  "/api/Casebook/GetCasebokProjectsByAuthorId": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectCasebookItem[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectCasebookItem[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindCasebookProjectByAuthorId"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindCasebookProjectByAuthorId"];
        };
      };
    };
  };
  "/api/Casebook/SyncCases": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProjectBatch"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProjectBatch"];
        };
      };
    };
  };
  "/api/Casebook/GetLockedCases": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.GetLockedCasesResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.GetLockedCasesResponse>"];
          };
        };
      };
    };
  };
  "/api/Casebook/EnableSyncCase": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProject"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProject"];
        };
      };
    };
  };
  "/api/Casebook/DisableSyncCase": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProject"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProject"];
        };
      };
    };
  };
  "/api/Casebook/CreateNewCaseFeedEntry": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.CasebookApiRequests.NewCaseFeedEntryWrapper>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.CasebookApiRequests.NewCaseFeedEntryWrapper>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.CasebookApiRequests.NewCaseFeedEntryWrapper"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.CasebookApiRequests.NewCaseFeedEntryWrapper"];
        };
      };
    };
  };
  "/api/CasebookSuggest/CourtSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameTagObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameTagObject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/CasebookSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameTagObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameTagObject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/CasebookSuggest/JudgeSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/CasebookSuggest/SidesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/CasebookSuggest/ParticipantSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.Responses.ParticipantSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.Responses.ParticipantSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.ParticipantSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.ParticipantSuggestRequest"];
        };
      };
    };
  };
  "/api/CaseproEntityEvents/GetCaseProEntityEvents": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/CaseproEntityEvents": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/CasesBills/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.CasesBillFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.CasesBillFiltersRequest"];
        };
      };
    };
  };
  "/api/CasesBills": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.CasesBillFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.CasesBillFiltersRequest"];
        };
      };
    };
  };
  "/api/CasesBills/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/CasesBills/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.CasesBillFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.CasesBillFiltersRequest"];
        };
      };
    };
  };
  "/api/CasesBills/GetScheduleData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.CasesBillScheduleResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.CasesBillScheduleResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.CasesBillFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.CasesBillFiltersRequest"];
        };
      };
    };
  };
  "/api/CasesBills/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/CasesBills/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/CheckTimers/Check": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/CheckTimers": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/api/ClientIntakeObjects/Find": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ClientIntakeObjectItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ClientIntakeObjectItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.FindClientIntakeObjectsPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.FindClientIntakeObjectsPaged"];
        };
      };
    };
  };
  "/api/ClientIntakeObjects": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.SendIntakeObject"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.SendIntakeObject"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IReadOnlyCollection<CaseDotStar.ServicePackages.Common.IdNameObject>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IReadOnlyCollection<CaseDotStar.ServicePackages.Common.IdNameObject>>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ClientIntakeObjects/FindActiveForms": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IReadOnlyCollection<CaseDotStar.ServicePackages.Common.IdNameObject>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IReadOnlyCollection<CaseDotStar.ServicePackages.Common.IdNameObject>>"];
          };
        };
      };
    };
  };
  "/api/ClientIntakeObjects/Get": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
          };
        };
      };
    };
  };
  "/api/ClientIntakeObjects/Send": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.SendIntakeObject"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.SendIntakeObject"];
        };
      };
    };
  };
  "/api/ClientIntakeObjects/ReSend": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.ReSendIntakeObject"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.ReSendIntakeObject"];
        };
      };
    };
  };
  "/api/ClientIntakeObjects/Delete": {
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ClientIntakeObjects/GetMetadata": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
          };
        };
      };
    };
  };
  "/api/ClientsBills/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsBillsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsBillsFilterRequest"];
        };
      };
    };
  };
  "/api/ClientsBills": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsBillsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsBillsFilterRequest"];
        };
      };
    };
  };
  "/api/ClientsBills/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/ClientsBills/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsBillsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsBillsFilterRequest"];
        };
      };
    };
  };
  "/api/ClientsBills/GetScheduleData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.ClientsBillsScheduleResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.ClientsBillsScheduleResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsBillsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsBillsFilterRequest"];
        };
      };
    };
  };
  "/api/ClientsBills/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ClientsBills/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ClientsCaseTypes/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsCaseTypeFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsCaseTypeFiltersRequest"];
        };
      };
    };
  };
  "/api/ClientsCaseTypes": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsCaseTypeFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsCaseTypeFiltersRequest"];
        };
      };
    };
  };
  "/api/ClientsCaseTypes/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/ClientsCaseTypes/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsCaseTypeFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsCaseTypeFiltersRequest"];
        };
      };
    };
  };
  "/api/ClientsCaseTypes/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ClientsCaseTypes/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ClientsPayments/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsPaymentFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsPaymentFilterRequest"];
        };
      };
    };
  };
  "/api/ClientsPayments": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsPaymentFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsPaymentFilterRequest"];
        };
      };
    };
  };
  "/api/ClientsPayments/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/ClientsPayments/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsPaymentFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsPaymentFilterRequest"];
        };
      };
    };
  };
  "/api/ClientsPayments/GetScheduleData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.ClientsPaymentScheduleResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.ClientsPaymentScheduleResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsPaymentFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ClientsPaymentFilterRequest"];
        };
      };
    };
  };
  "/api/ClientsPayments/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ClientsPayments/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/Comments/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Comments.Requests.GetCommentsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Comments.Requests.GetCommentsRequest"];
        };
      };
    };
  };
  "/api/Comments": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Comments.Requests.GetCommentsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Comments.Requests.GetCommentsRequest"];
        };
      };
    };
  };
  "/api/Comments/Add": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Comments.Requests.AddCommentRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Comments.Requests.AddCommentRequest"];
        };
      };
    };
  };
  "/api/Comments/AddCommentToField": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Comments.Requests.AddCommentToFieldRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Comments.Requests.AddCommentToFieldRequest"];
        };
      };
    };
  };
  "/api/Comments/SendReaction": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.TotalReactionsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.TotalReactionsDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Comments.Requests.SendReactionRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Comments.Requests.SendReactionRequest"];
        };
      };
    };
  };
  "/api/CompanyUsersSuggest/GetUsers": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindUserSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindUserSuggestByFilter"];
        };
      };
    };
  };
  "/api/CompanyUsersSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindUserSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindUserSuggestByFilter"];
        };
      };
    };
  };
  "/api/ContentTypesSuggest/GetContentTypes": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ContentTypesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/CountriesSuggest/GetCountries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameNameEnObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameNameEnObject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/CountriesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameNameEnObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameNameEnObject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/CourtsJudgesSuggest/GetJudges": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.ShortJudgeSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.ShortJudgeSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.Suggest.JudgeSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.Suggest.JudgeSuggestRequest"];
        };
      };
    };
  };
  "/api/CourtsJudgesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.ShortJudgeSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.ShortJudgeSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.Suggest.JudgeSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.Suggest.JudgeSuggestRequest"];
        };
      };
    };
  };
  "/api/CourtsJudgesSuggest/GetCourts": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.ShortCourtSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.ShortCourtSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.Suggest.CourtSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.Suggest.CourtSuggestRequest"];
        };
      };
    };
  };
  "/api/Currencies/GetCurrency/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
          };
        };
      };
    };
  };
  "/api/Currencies/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Currencies": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Extensions.Requests.Currencies.CurrencyCreateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Extensions.Requests.Currencies.CurrencyCreateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.ListRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.ListRequest"];
        };
      };
    };
  };
  "/api/Currencies/GetCurrencies": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.ListRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.ListRequest"];
        };
      };
    };
  };
  "/api/Currencies/Create": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Extensions.Requests.Currencies.CurrencyCreateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Extensions.Requests.Currencies.CurrencyCreateRequest"];
        };
      };
    };
  };
  "/api/Currencies/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Extensions.Requests.Currencies.CurrencyUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Extensions.Requests.Currencies.CurrencyUpdateRequest"];
        };
      };
    };
  };
  "/api/Currencies/Delete/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/DataFieldAttributes/Get": {
    get: {
      parameters: {
        query: {
          ParentFormat: string;
          Name?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FieldSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FieldSummary>"];
          };
        };
      };
    };
  };
  "/api/DataFieldAttributes": {
    get: {
      parameters: {
        query: {
          ParentFormat: string;
          Name?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FieldSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FieldSummary>"];
          };
        };
      };
    };
  };
  "/api/DataFieldValues/Get": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DataFieldValues.DataFieldValueSummary>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DataFieldValues.DataFieldValueSummary>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.DataFieldValues.GetDataFieldValues"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.DataFieldValues.GetDataFieldValues"];
        };
      };
    };
  };
  "/api/DataFieldValues": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DataFieldValues.DataFieldValueSummary>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DataFieldValues.DataFieldValueSummary>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.DataFieldValues.GetDataFieldValues"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.DataFieldValues.GetDataFieldValues"];
        };
      };
    };
  };
  "/api/DaysOfWeek/GetDaysOfWeek": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Responses.DayOfWeekResponse"][];
            "text/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Responses.DayOfWeekResponse"][];
          };
        };
      };
    };
  };
  "/api/DaysOfWeek": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Responses.DayOfWeekResponse"][];
            "text/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Responses.DayOfWeekResponse"][];
          };
        };
      };
    };
  };
  "/api/Deactivate/Deactivate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"];
        };
      };
    };
  };
  "/api/Deactivate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"];
        };
      };
    };
  };
  "/api/Deactivate/DeactivatePackages": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"][];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"][];
        };
      };
    };
  };
  "/api/Debug/GetThreadPoolInfo": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.Debug.ThreadPoolInfo"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.Debug.ThreadPoolInfo"];
          };
        };
      };
    };
  };
  "/api/Debug": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.Debug.ThreadPoolInfo"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.Debug.ThreadPoolInfo"];
          };
        };
      };
    };
  };
  "/api/DependentFields/Get": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DependentFields.ViewModels.DependentField>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DependentFields.ViewModels.DependentField>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.DependentFields.Commands.GetDependentFields"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.DependentFields.Commands.GetDependentFields"];
        };
      };
    };
  };
  "/api/DependentFields": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DependentFields.ViewModels.DependentField>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DependentFields.ViewModels.DependentField>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.DependentFields.Commands.GetDependentFields"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.DependentFields.Commands.GetDependentFields"];
        };
      };
    };
  };
  "/api/Dictionary/GetDictionaryList": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.ListRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.ListRequest"];
        };
      };
    };
  };
  "/api/Dictionary": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.SaveDictionaryItemRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.SaveDictionaryItemRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.ListRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.ListRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          dictionaryId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
          };
        };
      };
    };
  };
  "/api/Dictionary/GetDictionary": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.GetDictionaryRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.GetDictionaryRequest"];
        };
      };
    };
  };
  "/api/Dictionary/SaveDictionaryItem": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.SaveDictionaryItemRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.SaveDictionaryItemRequest"];
        };
      };
    };
  };
  "/api/Dictionary/SaveDictionaryItems": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary"];
        };
      };
    };
  };
  "/api/Dictionary/DeleteSubLevel": {
    delete: {
      parameters: {
        query: {
          SystemName?: string;
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Dictionary/RemoveDictionaryItems": {
    delete: {
      parameters: {
        query: {
          SystemName?: string;
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
          };
        };
      };
    };
  };
  "/api/Dictionary/{dictionarySysName}/getdictionaryitems": {
    post: {
      parameters: {
        path: {
          dictionarySysName: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/Dictionary/GetDictionaryItems": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.GetDictionaryItemsRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.GetDictionaryItemsRequest"];
        };
      };
    };
  };
  "/api/Dictionary/SaveDictionaryMetadata": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.SaveDictionaryMetadataRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.SaveDictionaryMetadataRequest"];
        };
      };
    };
  };
  "/api/Dictionary/CreateDictionary": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.Requests.V42.CreateUserDefinedDictionaryRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.Requests.V42.CreateUserDefinedDictionaryRequest"];
        };
      };
    };
  };
  "/api/Dictionary/DeleteDictionary": {
    delete: {
      parameters: {
        query: {
          dictionaryId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>"];
          };
        };
      };
    };
  };
  "/api/DocPreview/Preview": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/DocPreview": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/DocumentFolderAccessSettings/GetAccessSettings": {
    get: {
      parameters: {
        query: {
          folderId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings>"];
          };
        };
      };
    };
  };
  "/api/DocumentFolderAccessSettings": {
    get: {
      parameters: {
        query: {
          folderId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.SaveDocumentFolderAccessSettings"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.SaveDocumentFolderAccessSettings"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.GetUsersSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.GetUsersSuggestRequest"];
        };
      };
    };
  };
  "/api/DocumentFolderAccessSettings/SaveAccessSettings": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.SaveDocumentFolderAccessSettings"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.SaveDocumentFolderAccessSettings"];
        };
      };
    };
  };
  "/api/DocumentFolderAccessSettings/GetAvailablePermissions": {
    get: {
      parameters: {
        query: {
          FolderId?: string;
          UserId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission[]>"];
          };
        };
      };
    };
  };
  "/api/DocumentFolderAccessSettings/GetUsersSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.GetUsersSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.GetUsersSuggestRequest"];
        };
      };
    };
  };
  "/api/DocumentFolderAccessSettings/GetClientSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.ClientInfo>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.ClientInfo>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.GetClientsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.GetClientsSuggestRequest"];
        };
      };
    };
  };
  "/api/DocumentFolders/CreateDocumentFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Interfaces.Implementation.DocumentFolderUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Interfaces.Implementation.DocumentFolderUpdateRequest"];
        };
      };
    };
  };
  "/api/DocumentFolders": {
    get: {
      parameters: {
        query: {
          folderId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Interfaces.Implementation.DocumentFolderUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Interfaces.Implementation.DocumentFolderUpdateRequest"];
        };
      };
    };
  };
  "/api/DocumentFolders/GetDocumentFolder": {
    get: {
      parameters: {
        query: {
          folderId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
          };
        };
      };
    };
  };
  "/api/DocumentFolders/GetFullDocumentFolder": {
    get: {
      parameters: {
        query: {
          FolderId: string;
          ParentTopLevelFolderId?: string;
          ExternalStorage?: string;
          ProjectId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>"];
          };
        };
      };
    };
  };
  "/api/Documents/GetDocuments": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.Models.DocumentSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.Models.DocumentSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Models.DocumentsSearchRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Models.DocumentsSearchRequest"];
        };
      };
    };
  };
  "/api/Documents": {
    get: {
      parameters: {
        query: {
          documentId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Models.DocumentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Models.DocumentDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Models.DocumentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Models.DocumentDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Interfaces.Implementation.DocumentWithCustomBlockRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Interfaces.Implementation.DocumentWithCustomBlockRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.Models.DocumentSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.Models.DocumentSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Models.DocumentsSearchRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Models.DocumentsSearchRequest"];
        };
      };
    };
  };
  "/api/Documents/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Documents/GetDocument": {
    get: {
      parameters: {
        query: {
          documentId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Models.DocumentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Models.DocumentDto>"];
          };
        };
      };
    };
  };
  "/api/Documents/PutDocument": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Models.DocumentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Models.DocumentDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Interfaces.Implementation.DocumentWithCustomBlockRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Interfaces.Implementation.DocumentWithCustomBlockRequest"];
        };
      };
    };
  };
  "/api/Documents/BulkCreate": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.DocumentUpdateRequest"][];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.DocumentUpdateRequest"][];
        };
      };
    };
  };
  "/api/Documents/Delete/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/DocumentSuggest/Suggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.DocumentSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.DocumentSuggestRequest"];
        };
      };
    };
  };
  "/api/DocumentSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.DocumentSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.DocumentSuggestRequest"];
        };
      };
    };
  };
  "/api/DocumentTemplates/PostDocumentTemplate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.DocumentTemplateRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.DocumentTemplateRequestBase"];
        };
      };
    };
  };
  "/api/DocumentTemplates": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.DocumentTemplateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.DocumentTemplateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.DocumentTemplateRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.DocumentTemplateRequestBase"];
        };
      };
    };
  };
  "/api/DocumentTemplates/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
          };
        };
      };
    };
  };
  "/api/DocumentTemplates/PutDocumentTemplate": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.DocumentTemplateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.DocumentTemplateRequest"];
        };
      };
    };
  };
  "/api/DocumentTemplates/DeleteDocumentTemplate/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
          };
        };
      };
    };
  };
  "/api/DocumentTemplates/GetDocumentTemplate/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
          };
        };
      };
    };
  };
  "/api/DocumentTemplates/GetDocumentTemplates": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.DocumentTemplatesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.DocumentTemplatesRequest"];
        };
      };
    };
  };
  "/api/DocumentTemplates/FillTemplate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.FillTemplateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.FillTemplateRequest"];
        };
      };
    };
  };
  "/api/Download": {
    get: {
      parameters: {
        query: {
          FolderId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Download/Download": {
    get: {
      parameters: {
        query: {
          Id: string;
          Width: number;
          Height: number;
          ExternalStorage: string;
          From: string;
          FromId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Download/PublicDownload": {
    get: {
      parameters: {
        query: {
          Id: string;
          Width: number;
          Height: number;
          ExternalStorage: string;
          From: string;
          FromId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Download/DownloadDocumentsFromFolderAsZip": {
    get: {
      parameters: {
        query: {
          FolderId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Dropbox/Authorize": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Dropbox": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Dropbox/AuthFinish": {
    get: {
      parameters: {
        query: {
          state: string;
          code?: string;
          error?: string;
          error_description?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Dropbox/Activate": {
    get: {
      parameters: {
        query: {
          state: string;
          code?: string;
          error?: string;
          error_description?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
    };
  };
  "/api/Email/GetEmail": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
    };
  };
  "/api/Email": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Requests.V43.SendEmailRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Requests.V43.SendEmailRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          messageId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
    };
  };
  "/api/Email/GetEmailsByProject": {
    get: {
      parameters: {
        query: {
          projectId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse[]>"];
          };
        };
      };
    };
  };
  "/api/Email/SendEmail": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Requests.V43.SendEmailRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Requests.V43.SendEmailRequest"];
        };
      };
    };
  };
  "/api/Email/SendIndividualEmail": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Requests.V43.SendEmailRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Requests.V43.SendEmailRequest"];
        };
      };
    };
  };
  "/api/Email/SendWithoutSave": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Requests.V43.SendEmailRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Requests.V43.SendEmailRequest"];
        };
      };
    };
  };
  "/api/Email/BatchImport": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Requests.ImportEmailBatchRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Requests.ImportEmailBatchRequest"];
        };
      };
    };
  };
  "/api/Email/Import": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Requests.ImportEmailFromApplicationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Requests.ImportEmailFromApplicationRequest"];
        };
      };
    };
  };
  "/api/Email/DeleteMessage": {
    delete: {
      parameters: {
        query: {
          messageId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
    };
  };
  "/api/Email/GetModules": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.ModulesResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.ModulesResponse>"];
          };
        };
      };
    };
  };
  "/api/Email/GenerateEmailFromTemplate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailFromTemplate>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailFromTemplate>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Requests.GenerateEmailFromTemplateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Requests.GenerateEmailFromTemplateRequest"];
        };
      };
    };
  };
  "/api/Email/ImportEmailsToProjects": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Requests.ImportEmailsToProjectsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Requests.ImportEmailsToProjectsRequest"];
        };
      };
    };
  };
  "/api/EmailAttachments/Upload": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/EmailAttachments": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/EmailTemplates/Put": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.EmailTemplatePutRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.EmailTemplatePutRequest"];
        };
      };
    };
  };
  "/api/EmailTemplates": {
    get: {
      parameters: {
        query: {
          templateId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.EmailTemplatePutRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.EmailTemplatePutRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.GetEmailTemplatesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.GetEmailTemplatesRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          templateId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/EmailTemplates/Get": {
    get: {
      parameters: {
        query: {
          templateId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse>"];
          };
        };
      };
    };
  };
  "/api/EmailTemplates/Delete": {
    delete: {
      parameters: {
        query: {
          templateId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/EmailTemplates/GetTemplates": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.GetEmailTemplatesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.GetEmailTemplatesRequest"];
        };
      };
    };
  };
  "/api/EmailTemplates/SuggestTags": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateTagSuggest>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateTagSuggest>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.EmailTemplateTagSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.EmailTemplates.Requests.EmailTemplateTagSuggestRequest"];
        };
      };
    };
  };
  "/api/EmbeddedReport/Get/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
          };
        };
      };
    };
  };
  "/api/EmbeddedReport/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
          };
        };
      };
    };
  };
  "/api/EmbeddedReport": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateEmbeddedReportRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateEmbeddedReportRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateEmbeddedReportRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateEmbeddedReportRequest"];
        };
      };
    };
  };
  "/api/EmbeddedReport/Post": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateEmbeddedReportRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateEmbeddedReportRequest"];
        };
      };
    };
  };
  "/api/EmbeddedReport/Put": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateEmbeddedReportRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateEmbeddedReportRequest"];
        };
      };
    };
  };
  "/api/EntityCustomValues/GetValuesBySystemTag": {
    get: {
      parameters: {
        query: {
          entityId?: string;
          systemTag?: string;
          entityTypeSysName?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary[]>"];
          };
        };
      };
    };
  };
  "/api/EntityCustomValues": {
    get: {
      parameters: {
        query: {
          entityId?: string;
          entityTypeSysName?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse[]>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.VisualBlocks.EntityFieldValueWithSystemTagSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.VisualBlocks.EntityFieldValueWithSystemTagSummary"];
        };
      };
    };
  };
  "/api/EntityCustomValues/SetValue": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.VisualBlocks.EntityFieldValueWithSystemTagSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.VisualBlocks.EntityFieldValueWithSystemTagSummary"];
        };
      };
    };
  };
  "/api/EntityCustomValues/GetEntityCustomVisuals": {
    get: {
      parameters: {
        query: {
          entityId?: string;
          entityTypeSysName?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse[]>"];
          };
        };
      };
    };
  };
  "/api/EntityCustomValues/UpdateEntityCustomVisuals": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.EntityVisualBlockValuesUpdateResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.EntityVisualBlockValuesUpdateResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.EntityVisualBlockValuesUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.EntityVisualBlockValuesUpdateRequest"];
        };
      };
    };
  };
  "/api/EntityDependencies/ProjectField": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.EntityDependencyDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.EntityDependencyDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.ProjectFileds.GetEntityDependenciesByProjectFieldId"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.ProjectFileds.GetEntityDependenciesByProjectFieldId"];
        };
      };
    };
  };
  "/api/EntityDependencies": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.EntityDependencyDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.EntityDependencyDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.ProjectFileds.GetEntityDependenciesByProjectFieldId"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.ProjectFileds.GetEntityDependenciesByProjectFieldId"];
        };
      };
    };
  };
  "/api/EntityDependencies/Dictionary": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.EntityDependencyDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.EntityDependencyDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.ProjectFileds.GetEntityDependenciesByDictionaryId"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.ProjectFileds.GetEntityDependenciesByDictionaryId"];
        };
      };
    };
  };
  "/api/EntityVisualBlocks/GetEntityVisualBlocks": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.EntityCustomValues.V41.Commands.GetEntityTypeVisualBlocks"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.EntityCustomValues.V41.Commands.GetEntityTypeVisualBlocks"];
        };
      };
    };
  };
  "/api/EntityVisualBlocks": {
    get: {
      parameters: {
        query: {
          EntityTypeId: string;
          EntityId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.EntityCustomValues.V41.Commands.GetEntityTypeVisualBlocks"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.EntityCustomValues.V41.Commands.GetEntityTypeVisualBlocks"];
        };
      };
    };
  };
  "/api/EntityVisualBlocks/GetEntityVisualBlock": {
    get: {
      parameters: {
        query: {
          EntityTypeId: string;
          EntityId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse>"];
          };
        };
      };
    };
  };
  "/api/EntityVisualBlocks/CreateOrUpdate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.EntityCustomValues.V41.Commands.CreateOrUpdateEntityTypeVisualBlock"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.EntityCustomValues.V41.Commands.CreateOrUpdateEntityTypeVisualBlock"];
        };
      };
    };
  };
  "/api/EntityVisualBlocks/GetEntityCardVisualBlock": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityCardVisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityCardVisualBlockResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.GetEntityCardVisualBlocksRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.GetEntityCardVisualBlocksRequest"];
        };
      };
    };
  };
  "/api/EventCreation/CreateEvent": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.EventCreationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.EventCreationRequest"];
        };
      };
    };
  };
  "/api/EventCreation": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.EventCreationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.EventCreationRequest"];
        };
      };
    };
  };
  "/api/EventCreationSettings/GetEventTypes": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventTypeSummary[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventTypeSummary[]>"];
          };
        };
      };
    };
  };
  "/api/EventCreationSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventTypeSummary[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventTypeSummary[]>"];
          };
        };
      };
    };
  };
  "/api/Events/PutEvent": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Events.Models.EventsUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Events.Models.EventsUpdateRequest"];
        };
      };
    };
  };
  "/api/Events": {
    get: {
      parameters: {
        query: {
          eventId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventSummary>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Events.Models.EventsUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Events.Models.EventsUpdateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Events.Interfaces.AttendeeSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Events.Interfaces.AttendeeSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Events.Models.AttendeesEmailSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Events.Models.AttendeesEmailSuggestRequest"];
        };
      };
    };
  };
  "/api/Events/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Events/DeleteEvent/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Events/GetEvent": {
    get: {
      parameters: {
        query: {
          eventId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventSummary>"];
          };
        };
      };
    };
  };
  "/api/Events/GetAttendeesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Events.Interfaces.AttendeeSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Events.Interfaces.AttendeeSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Events.Models.AttendeesEmailSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Events.Models.AttendeesEmailSuggestRequest"];
        };
      };
    };
  };
  "/api/Exchange/Authorize": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Exchange.Requests.ExchangeAuthorizeRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Exchange.Requests.ExchangeAuthorizeRequest"];
        };
      };
    };
  };
  "/api/Exchange": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Email.Exchange.Requests.ExchangeAuthorizeRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Email.Exchange.Requests.ExchangeAuthorizeRequest"];
        };
      };
    };
  };
  "/api/ExecutionScriptConditionFields/Get": {
    get: {
      parameters: {
        query: {
          EntitySysName: string;
          TypeId: string;
          OnlyEditableFields: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.Models.Conditions.EntityField.AutomationScriptFieldResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.Models.Conditions.EntityField.AutomationScriptFieldResponse>>"];
          };
        };
      };
    };
  };
  "/api/ExecutionScriptConditionFields": {
    get: {
      parameters: {
        query: {
          EntitySysName: string;
          TypeId: string;
          OnlyEditableFields: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.Models.Conditions.EntityField.AutomationScriptFieldResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.Models.Conditions.EntityField.AutomationScriptFieldResponse>>"];
          };
        };
      };
    };
  };
  "/api/Expenses/GetExpense": {
    get: {
      parameters: {
        query: {
          expenseId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
          };
        };
      };
    };
  };
  "/api/Expenses": {
    get: {
      parameters: {
        query: {
          expenseId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseCreateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseCreateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseListItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseListItemResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpensesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpensesRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          expenseId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Expenses/GetExpenses": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseListItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseListItemResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpensesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpensesRequest"];
        };
      };
    };
  };
  "/api/Expenses/GetExpenseSummary": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.DAL.Repositories.GetExpenseSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.DAL.Repositories.GetExpenseSummary"];
        };
      };
    };
  };
  "/api/Expenses/Create": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseCreateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseCreateRequest"];
        };
      };
    };
  };
  "/api/Expenses/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseUpdateRequest"];
        };
      };
    };
  };
  "/api/Expenses/Delete": {
    delete: {
      parameters: {
        query: {
          expenseId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ExpensesByClients/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ExpensesByClientsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ExpensesByClientsFilterRequest"];
        };
      };
    };
  };
  "/api/ExpensesByClients": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ExpensesByClientsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ExpensesByClientsFilterRequest"];
        };
      };
    };
  };
  "/api/ExpensesByClients/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/ExpensesByClients/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ExpensesByClientsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ExpensesByClientsFilterRequest"];
        };
      };
    };
  };
  "/api/ExpensesByClients/GetScheduleData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.ExpensesByClientScheduleResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.ExpensesByClientScheduleResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ExpensesByClientsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.ExpensesByClientsFilterRequest"];
        };
      };
    };
  };
  "/api/ExpensesByClients/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ExpensesByClients/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ExpensesSuggest/GetExpenses": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ExpensesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ExportFixedReports/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ExportFixedReports": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ExportHistory/ExportAllHistoryToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            OperationTypeIds: string[];
            UserIds: string[];
            StartDate: string;
            EndDate: string;
            LastDaysDate: number;
            EntityId: string;
            EntityName: string;
            SearchString: string;
            Page: number;
            PageSize: number;
          };
        };
      };
    };
  };
  "/api/ExportHistory": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            OperationTypeIds: string[];
            UserIds: string[];
            StartDate: string;
            EndDate: string;
            LastDaysDate: number;
            EntityId: string;
            EntityName: string;
            SearchString: string;
            Page: number;
            PageSize: number;
          };
        };
      };
    };
  };
  "/api/ExportHistory/ExportAllHistoryToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            OperationTypeIds: string[];
            UserIds: string[];
            StartDate: string;
            EndDate: string;
            LastDaysDate: number;
            EntityId: string;
            EntityName: string;
            SearchString: string;
            Page: number;
            PageSize: number;
          };
        };
      };
    };
  };
  "/api/ExportHistory/GetLimitCorrect": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            OperationTypeIds: string[];
            UserIds: string[];
            StartDate: string;
            EndDate: string;
            LastDaysDate: number;
            EntityId: string;
            EntityName: string;
            SearchString: string;
            Page: number;
            PageSize: number;
          };
        };
      };
    };
  };
  "/api/ExportReports/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ExportReports": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ExportReports/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/ExternalFolders/AttachFolder": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.ExternalFolder>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.ExternalFolder>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.AttachExternalFolderRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.AttachExternalFolderRequest"];
        };
      };
    };
  };
  "/api/ExternalFolders": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.ExternalFolder>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.ExternalFolder>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.AttachExternalFolderRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.AttachExternalFolderRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Documents.DAL.Data.ExternalFolderListItem>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Documents.DAL.Data.ExternalFolderListItem>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.ExternalFoldersListRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.ExternalFoldersListRequest"];
        };
      };
    };
  };
  "/api/ExternalFolders/GetFoldersList": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Documents.DAL.Data.ExternalFolderListItem>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Documents.DAL.Data.ExternalFolderListItem>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.ExternalFoldersListRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.ExternalFoldersListRequest"];
        };
      };
    };
  };
  "/api/ExternalLinkReport/View": {
    get: {
      parameters: {
        query: {
          id?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/ExternalLinkReport/Get/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
    };
  };
  "/api/ExternalLinkReport/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
    };
  };
  "/api/ExternalLinkReport": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateExternalLinkReportRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateExternalLinkReportRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateExternalLinkReportRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateExternalLinkReportRequest"];
        };
      };
    };
  };
  "/api/ExternalLinkReport/Post": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateExternalLinkReportRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateExternalLinkReportRequest"];
        };
      };
    };
  };
  "/api/ExternalLinkReport/Put": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateExternalLinkReportRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateExternalLinkReportRequest"];
        };
      };
    };
  };
  "/api/Feed/Groups": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.YearFeedSummaries>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.YearFeedSummaries>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Activities.Request.FeedPagedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Activities.Request.FeedPagedRequest"];
        };
      };
    };
  };
  "/api/Feed": {
    get: {
      parameters: {
        query: {
          ActivityId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.ProjectChangeDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.ProjectChangeDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Activities.Request.FavoriteFeedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Activities.Request.FavoriteFeedRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.YearFeedSummaries>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.YearFeedSummaries>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Activities.Request.FeedPagedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Activities.Request.FeedPagedRequest"];
        };
      };
    };
  };
  "/api/feed": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.FeedSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.FeedSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Activities.Request.FeedPagedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Activities.Request.FeedPagedRequest"];
        };
      };
    };
  };
  "/api/feed/GetFeed": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.FeedSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.FeedSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Activities.Request.FeedPagedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Activities.Request.FeedPagedRequest"];
        };
      };
    };
  };
  "/api/Feed/SetFavoriteFeed": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Activities.Request.FavoriteFeedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Activities.Request.FavoriteFeedRequest"];
        };
      };
    };
  };
  "/api/Feed/EntityGroups": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.YearEntityFeedSummaries>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.YearEntityFeedSummaries>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Activities.Request.EntityFeedPagedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Activities.Request.EntityFeedPagedRequest"];
        };
      };
    };
  };
  "/api/Feed/Changes": {
    get: {
      parameters: {
        query: {
          ActivityId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.ProjectChangeDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.ProjectChangeDto>"];
          };
        };
      };
    };
  };
  "/api/Feed/EntityChanges": {
    get: {
      parameters: {
        query: {
          ActivityId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.ProjectChangeDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.ProjectChangeDto>"];
          };
        };
      };
    };
  };
  "/api/Folder/GetSides": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.FindFolderSides"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.FindFolderSides"];
        };
      };
    };
  };
  "/api/Folder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.FindFolderSides"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.FindFolderSides"];
        };
      };
    };
  };
  "/api/Folder/AddSide": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.AddSideToFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.AddSideToFolder"];
        };
      };
    };
  };
  "/api/Folder/RemoveSides": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.RemoveSidesFromFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.RemoveSidesFromFolder"];
        };
      };
    };
  };
  "/api/Folder/ImportSidesToFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.ImportSidesToFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.CasebookEndpoint.ImportSidesToFolder"];
        };
      };
    };
  };
  "/api/FormatSettings/GetFormatSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto[]>"];
          };
        };
      };
    };
  };
  "/api/FormatSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto[]>"];
          };
        };
      };
    };
  };
  "/api/GeneralSettings/GetGeneralSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
          };
        };
      };
    };
  };
  "/api/GeneralSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.V42.GeneralSettingModel"];
          "text/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.V42.GeneralSettingModel"];
        };
      };
    };
  };
  "/api/GeneralSettings/SaveGeneralSettings": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.V42.GeneralSettingModel"];
          "text/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.V42.GeneralSettingModel"];
        };
      };
    };
  };
  "/api/Gmail/AuthFinish": {
    get: {
      parameters: {
        query: {
          state: string;
          code?: string;
          error?: string;
          error_description?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
    };
  };
  "/api/Gmail": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Gmail/Authorize": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Gmail/RedirectToAuthFinish": {
    get: {
      parameters: {
        query: {
          state: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/GoogleCalendar/Authorize": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/GoogleCalendar": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/GoogleCalendar/RedirectToAuthFinish": {
    get: {
      parameters: {
        query: {
          state: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/GoogleCalendar/AuthFinish": {
    get: {
      parameters: {
        query: {
          state: string;
          code?: string;
          error?: string;
          error_description?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
    };
  };
  "/api/GoogleDrive/Authorize": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/GoogleDrive": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/GoogleDrive/RedirectToAuthFinish": {
    get: {
      parameters: {
        query: {
          state: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/GoogleDrive/AuthFinish": {
    get: {
      parameters: {
        query: {
          state: string;
          code?: string;
          error?: string;
          error_description?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
    };
  };
  "/api/GroupAccess/GetProjectGroupsPermissions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.GroupAccessRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.GroupAccessRequest"];
        };
      };
    };
  };
  "/api/GroupAccess": {
    get: {
      parameters: {
        query: {
          GroupId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.GroupAccessRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.GroupAccessRequest"];
        };
      };
    };
  };
  "/api/GroupAccess/GetProjectsPermissions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.GroupAccessRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.GroupAccessRequest"];
        };
      };
    };
  };
  "/api/GroupAccess/GetProjectGroupsPermissionsCount": {
    get: {
      parameters: {
        query: {
          GroupId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
          };
        };
      };
    };
  };
  "/api/GroupAccess/GetProjectsPermissionsCount": {
    get: {
      parameters: {
        query: {
          GroupId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
          };
        };
      };
    };
  };
  "/api/GroupFilterAttributesSuggest/Suggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAttributeSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAttributeSuggestRequest"];
        };
      };
    };
  };
  "/api/GroupFilterAttributesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAttributeSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAttributeSuggestRequest"];
        };
      };
    };
  };
  "/api/Groups/GetGroups": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/Groups": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SingleGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SingleGroupResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupSaveRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupSaveRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          groupId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Groups/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupResponse>"];
          };
        };
      };
    };
  };
  "/api/Groups/GetUserGroups": {
    get: {
      parameters: {
        query: {
          userId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.GroupsForUserModel"][];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.GroupsForUserModel"][];
          };
        };
      };
    };
  };
  "/api/Groups/GetGroup/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupResponse>"];
          };
        };
      };
    };
  };
  "/api/Groups/Delete": {
    delete: {
      parameters: {
        query: {
          groupId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Groups/Put": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SingleGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SingleGroupResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupSaveRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupSaveRequest"];
        };
      };
    };
  };
  "/api/Groups/UnLink": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.GroupLinkCommandModel"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.GroupLinkCommandModel"];
        };
      };
    };
  };
  "/api/Groups/Link": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.GroupModel>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.GroupModel>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.GroupLinkCommandModel"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.GroupLinkCommandModel"];
        };
      };
    };
  };
  "/api/Groups/Save": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupSaveRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupSaveRequest"];
        };
      };
    };
  };
  "/api/GroupsAndUsersSuggest/GetUsersOrGroups": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.UserOrGroupsSuggestRequestAll"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.UserOrGroupsSuggestRequestAll"];
        };
      };
    };
  };
  "/api/GroupsAndUsersSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.UserOrGroupsSuggestRequestAll"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.UserOrGroupsSuggestRequestAll"];
        };
      };
    };
  };
  "/api/History/GetAllHistory": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.History.Data.IGroupedChangeDataRecord>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.History.Data.IGroupedChangeDataRecord>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.HistoryRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.HistoryRequest"];
        };
      };
    };
  };
  "/api/History": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.History.Data.IGroupedChangeDataRecord>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.History.Data.IGroupedChangeDataRecord>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.HistoryRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.HistoryRequest"];
        };
      };
    };
  };
  "/api/History/GetDetailHistory": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.History.Response.ChangeDataRecordResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.History.Response.ChangeDataRecordResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.DetailHistoryRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.DetailHistoryRequest"];
        };
      };
    };
  };
  "/api/Install/GetList": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel[]>"];
          };
        };
      };
    };
  };
  "/api/Install": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel[]>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplication>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplication>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Commands.DeactivateUserApplication"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Commands.DeactivateUserApplication"];
        };
      };
    };
  };
  "/api/Install/GetGroups": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Database.Data.ModuleGroup>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Database.Data.ModuleGroup>>"];
          };
        };
      };
    };
  };
  "/api/Install/GetUserApplications": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplicationGroup>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplicationGroup>"];
          };
        };
      };
    };
  };
  "/api/Install/DeactivateUserApplication": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplication>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplication>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Commands.DeactivateUserApplication"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Commands.DeactivateUserApplication"];
        };
      };
    };
  };
  "/api/module/InstallParams": {
    get: {
      parameters: {
        query: {
          id?: string;
          version?: string;
          isForEdit?: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.GroupedListResponseModel<CaseDotStar.Shell.Areas.Module.Models.InstallParam>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.GroupedListResponseModel<CaseDotStar.Shell.Areas.Module.Models.InstallParam>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.InstallParam"][];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.InstallParam"][];
        };
      };
    };
  };
  "/api/module/InstallParams/GetList": {
    get: {
      parameters: {
        query: {
          id?: string;
          version?: string;
          isForEdit?: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.GroupedListResponseModel<CaseDotStar.Shell.Areas.Module.Models.InstallParam>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.GroupedListResponseModel<CaseDotStar.Shell.Areas.Module.Models.InstallParam>"];
          };
        };
      };
    };
  };
  "/api/module/InstallParams/Save": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.InstallParam"][];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.InstallParam"][];
        };
      };
    };
  };
  "/api/IntakeForms/Find": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Criteria.FindIntakeFormsPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Criteria.FindIntakeFormsPaged"];
        };
      };
    };
  };
  "/api/IntakeForms": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.CreateOrUpdateIntakeForm"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.CreateOrUpdateIntakeForm"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Criteria.FindIntakeFormsPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Criteria.FindIntakeFormsPaged"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/IntakeForms/Get": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
          };
        };
      };
    };
  };
  "/api/IntakeForms/CreateOrUpdate": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.CreateOrUpdateIntakeForm"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.CreateOrUpdateIntakeForm"];
        };
      };
    };
  };
  "/api/IntakeForms/UpdateItem": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.UpdateIntakeFormItem"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.UpdateIntakeFormItem"];
        };
      };
    };
  };
  "/api/IntakeForms/Delete": {
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/IntakeForms/Clone": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.CloneIntakeForm"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.CloneIntakeForm"];
        };
      };
    };
  };
  "/api/IntakeObjectAssigneeUsers/GetUsersSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.Responses.AssigneeUserSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.Responses.AssigneeUserSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.AssigneeUserSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.AssigneeUserSuggestRequest"];
        };
      };
    };
  };
  "/api/IntakeObjectAssigneeUsers": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.Responses.AssigneeUserSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.Responses.AssigneeUserSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.AssigneeUserSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.AssigneeUserSuggestRequest"];
        };
      };
    };
  };
  "/api/IntakeObjects/Find": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.FindIntakeObjectsPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.FindIntakeObjectsPaged"];
        };
      };
    };
  };
  "/api/IntakeObjects": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.UpdateIntakeObjectRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.UpdateIntakeObjectRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.FindIntakeObjectsPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.FindIntakeObjectsPaged"];
        };
      };
    };
  };
  "/api/IntakeObjects/FindAllForms": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Criteria.FindAllIntakeFormsPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Criteria.FindAllIntakeFormsPaged"];
        };
      };
    };
  };
  "/api/IntakeObjects/Get": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto>"];
          };
        };
      };
    };
  };
  "/api/IntakeObjects/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.UpdateIntakeObjectRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.UpdateIntakeObjectRequest"];
        };
      };
    };
  };
  "/api/IntakeObjects/ChangeStatus": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.ChangeStatus"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.ChangeStatus"];
        };
      };
    };
  };
  "/api/IntakeObjects/GetNewObjectsCount": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
          };
        };
      };
    };
  };
  "/api/IntakeObjects/BulkDelete": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.BulkDeleteIntakeObjects"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Commands.BulkDeleteIntakeObjects"];
        };
      };
    };
  };
  "/api/IntakeObjects/BulkChangeStatus": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.BulkChangeStatusRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.BulkChangeStatusRequest"];
        };
      };
    };
  };
  "/api/IntakeObjects/BulkAssignee": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.BulkAssigneeRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.BulkAssigneeRequest"];
        };
      };
    };
  };
  "/api/IntakeObjectUsers/GetUsersSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.UserSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.UserSuggestRequest"];
        };
      };
    };
  };
  "/api/IntakeObjectUsers": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.UserSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Requests.UserSuggestRequest"];
        };
      };
    };
  };
  "/api/IntakeStatuses/Find": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Criteria.FindIntakeStatuses"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Criteria.FindIntakeStatuses"];
        };
      };
    };
  };
  "/api/IntakeStatuses": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Criteria.FindIntakeStatuses"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Criteria.FindIntakeStatuses"];
        };
      };
    };
  };
  "/api/Interests/List": {
    get: {
      parameters: {
        query: {
          BillId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Timing.App.Interests.ViewModels.InterestDto>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Timing.App.Interests.ViewModels.InterestDto>>"];
          };
        };
      };
    };
  };
  "/api/Interests": {
    get: {
      parameters: {
        query: {
          BillId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Timing.App.Interests.ViewModels.InterestDto>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Timing.App.Interests.ViewModels.InterestDto>>"];
          };
        };
      };
    };
  };
  "/api/Invitation/RegenerateLink": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string>"];
          };
        };
      };
    };
  };
  "/api/Invitation": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string>"];
          };
        };
      };
    };
  };
  "/api/LawPay/Authorize": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/LawPay": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/LawPay/AuthFinish": {
    get: {
      parameters: {
        query: {
          account: string;
          code?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/LawPay/Activate": {
    get: {
      parameters: {
        query: {
          code?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
    };
  };
  "/api/LawPayPayment/Charge": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.LawPay.Models.ChargeInfo"];
          "text/json": components["schemas"]["CaseMap.Modules.LawPay.Models.ChargeInfo"];
        };
      };
    };
  };
  "/api/LawPayPayment": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountSettings>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountSettings>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.LawPay.Models.ChargeInfo"];
          "text/json": components["schemas"]["CaseMap.Modules.LawPay.Models.ChargeInfo"];
        };
      };
    };
  };
  "/api/LawPayPayment/GetAccountSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountSettings>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountSettings>"];
          };
        };
      };
    };
  };
  "/api/LawPaySettings/GetSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPaySettings>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPaySettings>"];
          };
        };
      };
    };
  };
  "/api/LawPaySettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPaySettings>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPaySettings>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto"];
          "text/json": components["schemas"]["CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto"];
        };
      };
    };
  };
  "/api/LawPaySettings/SaveAssociation": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto"];
          "text/json": components["schemas"]["CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto"];
        };
      };
    };
  };
  "/api/LEDES/GetSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto>"];
          };
        };
      };
    };
  };
  "/api/LEDES": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Commands.SaveSettings"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Commands.SaveSettings"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.TimekeeperClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.TimekeeperClassDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Criteria.TimekeeperClassificationSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Criteria.TimekeeperClassificationSuggestRequest"];
        };
      };
    };
  };
  "/api/LEDES/SaveSettings": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Commands.SaveSettings"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Commands.SaveSettings"];
        };
      };
    };
  };
  "/api/LEDES/GetTimekeeperClassification": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.TimekeeperClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.TimekeeperClassDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Criteria.TimekeeperClassificationSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Criteria.TimekeeperClassificationSuggestRequest"];
        };
      };
    };
  };
  "/api/LEDES/DownloadBill": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.Data.DownloadBillResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.Data.DownloadBillResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Criteria.DownloadBillRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Criteria.DownloadBillRequest"];
        };
      };
    };
  };
  "/api/Localization/{language}": {
    get: {
      parameters: {
        path: {
          language: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": string;
            "text/json": string;
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          language: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
          };
        };
      };
    };
  };
  "/api/Localization/app": {
    get: {
      parameters: {
        query: {
          FileName: string;
          Language: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/MangoOffice/Activate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calls.MangoOffice.MangoOfficeActivate"];
          "text/json": components["schemas"]["CaseMap.Modules.Calls.MangoOffice.MangoOfficeActivate"];
        };
      };
    };
  };
  "/api/MangoOffice": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Calls.MangoOffice.MangoOfficeActivate"];
          "text/json": components["schemas"]["CaseMap.Modules.Calls.MangoOffice.MangoOfficeActivate"];
        };
      };
    };
  };
  "/api/MethodOfFillings/GetMethodOfFillings": {
    get: {
      parameters: {
        query: {
          RootViewSysName?: string;
          FieldId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/MethodOfFillings": {
    get: {
      parameters: {
        query: {
          RootViewSysName?: string;
          FieldId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/MyArbitr/Authorize": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/MyArbitr": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.MyArbitr.App.AccountRecourses.LinkRecource"];
          "text/json": components["schemas"]["CaseMap.Modules.MyArbitr.App.AccountRecourses.LinkRecource"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/MyArbitr/AuthFinish": {
    get: {
      parameters: {
        query: {
          token?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/MyArbitr/Logout": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/MyArbitr/GetArbitrAccount": {
    get: {
      parameters: {
        query: {
          criterion: components["schemas"]["CaseMap.Modules.MyArbitr.App.Accounts.FindArbitrAccount"];
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.Accounts.ArbitrAccountDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.Accounts.ArbitrAccountDto>"];
          };
        };
      };
    };
  };
  "/api/MyArbitr/GetRecource": {
    get: {
      parameters: {
        query: {
          Id: string;
          Page: number;
          PageSize: number;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>"];
          };
        };
      };
    };
  };
  "/api/MyArbitr/GetRecources": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.MyArbitr.App.AccountRecourses.FindRecourcesByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.MyArbitr.App.AccountRecourses.FindRecourcesByFilter"];
        };
      };
    };
  };
  "/api/MyArbitr/LinkRecource": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.MyArbitr.App.AccountRecourses.LinkRecource"];
          "text/json": components["schemas"]["CaseMap.Modules.MyArbitr.App.AccountRecourses.LinkRecource"];
        };
      };
    };
  };
  "/api/MyArbitr/SyncAllAccounts": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Notes/Create": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Notes.Requests.CreateNoteRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Notes.Requests.CreateNoteRequest"];
        };
      };
    };
  };
  "/api/Notes": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Notes.Requests.UpdateNoteRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Notes.Requests.UpdateNoteRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Notes.Requests.CreateNoteRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Notes.Requests.CreateNoteRequest"];
        };
      };
    };
  };
  "/api/Notes/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
          };
        };
      };
    };
  };
  "/api/Notes/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Notes.Requests.UpdateNoteRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Notes.Requests.UpdateNoteRequest"];
        };
      };
    };
  };
  "/api/Notes/GetNotes": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Notes.Requests.NotesPagedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Notes.Requests.NotesPagedRequest"];
        };
      };
    };
  };
  "/api/Notes/Get/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>"];
          };
        };
      };
    };
  };
  "/api/Notes/Delete/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/NotificationCreation/CreateNotification": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.NotificationCreationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.NotificationCreationRequest"];
        };
      };
    };
  };
  "/api/NotificationCreation": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.NotificationCreationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.NotificationCreationRequest"];
        };
      };
    };
  };
  "/api/NotificationPeriod/GetNotificationPeriods": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/NotificationPeriod": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/NotificationTypesSuggest/GetNotificationTypes": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.Notifications.NotificationTypesSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.Notifications.NotificationTypesSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.Notifications.Criteria.GetNotificationTypesSuggest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.Notifications.Criteria.GetNotificationTypesSuggest"];
        };
      };
    };
  };
  "/api/NotificationTypesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.Notifications.NotificationTypesSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.Notifications.NotificationTypesSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.App.Notifications.Criteria.GetNotificationTypesSuggest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.App.Notifications.Criteria.GetNotificationTypesSuggest"];
        };
      };
    };
  };
  "/api/NotifySingleUser/NotifySingleUser": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters"];
        };
      };
    };
  };
  "/api/NotifySingleUser": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters"];
        };
      };
    };
  };
  "/api/ObjectClasses/GetObjectClasses": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
          };
        };
      };
    };
  };
  "/api/ObjectClasses": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.UpdateObjectClass"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.UpdateObjectClass"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.CreateObjectClass"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.CreateObjectClass"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
          };
        };
      };
    };
  };
  "/api/ObjectClasses/GetObjectClass": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
          };
        };
      };
    };
  };
  "/api/ObjectClasses/CreateObjectClass": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.CreateObjectClass"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.CreateObjectClass"];
        };
      };
    };
  };
  "/api/ObjectClasses/UpdateObjectClass": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.UpdateObjectClass"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.UpdateObjectClass"];
        };
      };
    };
  };
  "/api/ObjectClasses/DeleteObjectClass": {
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>"];
          };
        };
      };
    };
  };
  "/api/OneDrive/Authorize": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/OneDrive": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/OneDrive/AuthFinish": {
    get: {
      parameters: {
        query: {
          state?: string;
          code?: string;
          error?: string;
          error_description?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Outlook/AuthFinish": {
    get: {
      parameters: {
        query: {
          state: string;
          code?: string;
          error?: string;
          error_description?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
    };
  };
  "/api/Outlook": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Outlook/Authorize": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Outlook/RedirectToAuthFinish": {
    get: {
      parameters: {
        query: {
          state: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/ParticipantGroupActions/Merge": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.ParticipantsMergeRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.ParticipantsMergeRequest"];
        };
      };
    };
  };
  "/api/ParticipantGroupActions": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.ParticipantsMergeRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.ParticipantsMergeRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantsDeleteRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantsDeleteRequest"];
        };
      };
    };
  };
  "/api/ParticipantGroupActions/ExcludeFromProject": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Requests.ExcludeParticipantsFromProjectRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Requests.ExcludeParticipantsFromProjectRequest"];
        };
      };
    };
  };
  "/api/ParticipantGroupActions/Delete": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantsDeleteRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantsDeleteRequest"];
        };
      };
    };
  };
  "/api/Participants/GetParticipants": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantsSearchRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantsSearchRequest"];
        };
      };
    };
  };
  "/api/Participants": {
    get: {
      parameters: {
        query: {
          participantId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantWithCustomFields>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantWithCustomFields>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantWithCustomFields>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantWithCustomFields>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantsUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantsUpdateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantsSearchRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantsSearchRequest"];
        };
      };
    };
  };
  "/api/Participants/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Participants/GetRolledParticipants": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummaryByRole>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummaryByRole>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantsSearchRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantsSearchRequest"];
        };
      };
    };
  };
  "/api/Participants/GetParticipant": {
    get: {
      parameters: {
        query: {
          participantId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantWithCustomFields>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantWithCustomFields>"];
          };
        };
      };
    };
  };
  "/api/Participants/GetParticipantProjects": {
    get: {
      parameters: {
        query: {
          participantId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.DAL.Response.ParticipantProjectsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.DAL.Response.ParticipantProjectsResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Participants.DAL.Response.ParticipantProjectsResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Participants.DAL.Response.ParticipantProjectsResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.GetParticipantProjectsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.GetParticipantProjectsRequest"];
        };
      };
    };
  };
  "/api/Participants/PutParticipant": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantWithCustomFields>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantWithCustomFields>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantsUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantsUpdateRequest"];
        };
      };
    };
  };
  "/api/Participants/PutParticipantProjectRole": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantRoleSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantRoleSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantProjectRoleUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantProjectRoleUpdateRequest"];
        };
      };
    };
  };
  "/api/Participants/AddParticipantToProject": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.AddParticipantToProjectRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.AddParticipantToProjectRequest"];
        };
      };
    };
  };
  "/api/Participants/DeleteParticipant/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Participants/ExcludeParticipantFromProject": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Requests.ExcludeParticipantFromProjectRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Requests.ExcludeParticipantFromProjectRequest"];
        };
      };
    };
  };
  "/api/Participants/GetEmployees": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.EmployeesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.EmployeesRequest"];
        };
      };
    };
  };
  "/api/Participants/SaveParticipantsEmails": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Requests.SaveParticipantsEmailsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Requests.SaveParticipantsEmailsRequest"];
        };
      };
    };
  };
  "/api/ParticipantsSuggest/GetOrganizations": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.TwoLineSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.TwoLineSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ParticipantsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.TwoLineSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.TwoLineSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ParticipantsSuggest/GetIndividuals": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.TwoLineSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.TwoLineSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.IndividualsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.IndividualsSuggestRequest"];
        };
      };
    };
  };
  "/api/ParticipantsSuggest/GetParticipants": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.DAL.View.ParticipantFilterItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.DAL.View.ParticipantFilterItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantsSuggestRequest"];
        };
      };
    };
  };
  "/api/ParticipantsSuggest/GetFullParticipants": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.FullParticipantsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.FullParticipantsSuggestRequest"];
        };
      };
    };
  };
  "/api/ParticipantsSuggest/GetParticipantEmails": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.TwoLineSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.TwoLineSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.ParticipantEmailsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Participants.Models.Requests.ParticipantEmailsSuggestRequest"];
        };
      };
    };
  };
  "/api/Payments/GetPayment": {
    get: {
      parameters: {
        query: {
          paymentId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
          };
        };
      };
    };
  };
  "/api/Payments": {
    get: {
      parameters: {
        query: {
          paymentId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Commands.PaymentUpdate"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Commands.PaymentUpdate"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Criteria.GetAllPaymentsByBillId"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Criteria.GetAllPaymentsByBillId"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          paymentId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Payments/GetAllPaymentsByBillId": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Criteria.GetAllPaymentsByBillId"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Criteria.GetAllPaymentsByBillId"];
        };
      };
    };
  };
  "/api/Payments/GetTotalsByBillId": {
    get: {
      parameters: {
        query: {
          billId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentTotalsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentTotalsDto>"];
          };
        };
      };
    };
  };
  "/api/Payments/GetPaymentsDueByProjects": {
    get: {
      parameters: {
        query: {
          billId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.ProjectTotalDueDto[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.ProjectTotalDueDto[]>"];
          };
        };
      };
    };
  };
  "/api/Payments/Create": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Commands.PaymentCreate"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Commands.PaymentCreate"];
        };
      };
    };
  };
  "/api/Payments/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Commands.PaymentUpdate"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Commands.PaymentUpdate"];
        };
      };
    };
  };
  "/api/Payments/Delete": {
    delete: {
      parameters: {
        query: {
          paymentId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Payments/SaveParticipantTrustPayments": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentsResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Commands.SaveTrustPayments"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Payments.Commands.SaveTrustPayments"];
        };
      };
    };
  };
  "/api/Payments/GetParticipantTrustPayments": {
    get: {
      parameters: {
        query: {
          participantId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentsResponse>"];
          };
        };
      };
    };
  };
  "/api/PaymentSources/SuggestPaymentAndAccountSources": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentSourceSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentSourceSuggestRequest"];
        };
      };
    };
  };
  "/api/PaymentSources": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentSourceSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentSourceSuggestRequest"];
        };
      };
    };
  };
  "/api/Ping/Ping": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Ping": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Poller/PollThis": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Poller": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Preview/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": string;
            "text/json": string;
          };
        };
      };
    };
  };
  "/api/Preview/Preview/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": string;
            "text/json": string;
          };
        };
      };
    };
  };
  "/api/Preview": {
    get: {
      parameters: {
        query: {
          fileId?: string;
          externalStorage?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Preview/Preview": {
    get: {
      parameters: {
        query: {
          fileId?: string;
          externalStorage?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/ProfileNotificationSettings/Get": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingGroupResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingGroupResponse[]>"];
          };
        };
      };
    };
  };
  "/api/ProfileNotificationSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingGroupResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingGroupResponse[]>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingRequest"];
        };
      };
    };
  };
  "/api/ProfileNotificationSettings/Put": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingRequest"];
        };
      };
    };
  };
  "/api/ProjectAccessRequests/CreateProjectAccessRequest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestRequest"];
        };
      };
    };
  };
  "/api/ProjectAccessRequests": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestUpdateReuest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestUpdateReuest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestRequest"];
        };
      };
    };
  };
  "/api/ProjectAccessRequests/ApproveProjectAccessRequest": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestUpdateReuest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestUpdateReuest"];
        };
      };
    };
  };
  "/api/ProjectAccessRequests/DisapproveProjectAccessRequest": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestUpdateRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectAccessRequestUpdateRequestBase"];
        };
      };
    };
  };
  "/api/ProjectAccessRequests/GetProjectAccessRequest": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectAction/Merge": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MergeProjectRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MergeProjectRequest"];
        };
      };
    };
  };
  "/api/ProjectAction": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MergeProjectRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MergeProjectRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MoveToProjectGroupRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MoveToProjectGroupRequest"];
        };
      };
    };
  };
  "/api/ProjectAction/MoveToProjectGroup": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MoveToProjectGroupRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MoveToProjectGroupRequest"];
        };
      };
    };
  };
  "/api/ProjectAction/MoveToProjectFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MoveCaseToProjectFolderRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.MoveCaseToProjectFolderRequest"];
        };
      };
    };
  };
  "/api/ProjectAction/SetResponsibleBulkProject": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.SetResponsibleBulkProjectRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.SetResponsibleBulkProjectRequest"];
        };
      };
    };
  };
  "/api/projects/archive": {
    put: {
      parameters: {
        query: {
          id?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectAction/ArchiveBulkProject": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.BulkProjectOperationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.BulkProjectOperationRequest"];
        };
      };
    };
  };
  "/api/ProjectAction/RestoreBulkProject": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.BulkProjectOperationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.BulkProjectOperationRequest"];
        };
      };
    };
  };
  "/api/projects/restore": {
    put: {
      parameters: {
        query: {
          id?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectAuthorsFilterSuggest/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindProjectAuthorSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindProjectAuthorSuggestByFilter"];
        };
      };
    };
  };
  "/api/ProjectAuthorsFilterSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindProjectAuthorSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindProjectAuthorSuggestByFilter"];
        };
      };
    };
  };
  "/api/ProjectAwards/Get": {
    get: {
      parameters: {
        query: {
          projectId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectAwards": {
    get: {
      parameters: {
        query: {
          projectId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardSaveRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardSaveRequest"];
        };
      };
    };
  };
  "/api/ProjectAwards/Save": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardSaveRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardSaveRequest"];
        };
      };
    };
  };
  "/api/ProjectClients/ResendInvite": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ResendInviteProjectClientRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ResendInviteProjectClientRequest"];
        };
      };
    };
  };
  "/api/ProjectClients": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ResendInviteProjectClientRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ResendInviteProjectClientRequest"];
        };
      };
    };
  };
  "/api/ProjectClients/Verify": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CreateProjectClientRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CreateProjectClientRequest"];
        };
      };
    };
  };
  "/api/ProjectClientsSuggest/GetProjectClients": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectClientSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectClientSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectClientSuggestRequestAll"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectClientSuggestRequestAll"];
        };
      };
    };
  };
  "/api/ProjectClientsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectClientSuggestResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectClientSuggestResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectClientSuggestRequestAll"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectClientSuggestRequestAll"];
        };
      };
    };
  };
  "/api/ProjectCopy/Copy": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Guid>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Guid>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.CopyProject"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.CopyProject"];
        };
      };
    };
  };
  "/api/ProjectCopy": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Guid>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Guid>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.CopyProject"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.CopyProject"];
        };
      };
    };
  };
  "/api/ProjectCustomValues/GetAllVisualBlocks": {
    get: {
      parameters: {
        query: {
          ProjectId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectCustomValues": {
    get: {
      parameters: {
        query: {
          ProjectId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectCustomValues/GetProjectSummary": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectCustomValues/GetProjectTab": {
    get: {
      parameters: {
        query: {
          Id: string;
          ProjectTypeTabId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectTabBaseResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectTabBaseResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectFieldFilterFields/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterFieldsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterFieldsRequest"];
        };
      };
    };
  };
  "/api/ProjectFieldFilterFields": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterFieldsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterFieldsRequest"];
        };
      };
    };
  };
  "/api/ProjectFieldFilterValues/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterValuesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterValuesRequest"];
        };
      };
    };
  };
  "/api/ProjectFieldFilterValues": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterValuesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterValuesRequest"];
        };
      };
    };
  };
  "/api/ProjectFieldFormats/GetList": {
    get: {
      parameters: {
        query: {
          EntityType: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Enums.ProjectFieldsRequestEntityType"];
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedProjectFieldFormat>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedProjectFieldFormat>>"];
          };
        };
      };
    };
  };
  "/api/ProjectFieldFormats": {
    get: {
      parameters: {
        query: {
          EntityType: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Enums.ProjectFieldsRequestEntityType"];
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedProjectFieldFormat>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedProjectFieldFormat>>"];
          };
        };
      };
    };
  };
  "/api/ProjectFields/CreateProjectField": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectFileds.ProjectFieldRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectFileds.ProjectFieldRequestBase"];
        };
      };
    };
  };
  "/api/ProjectFields": {
    get: {
      parameters: {
        query: {
          EntityType: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Enums.ProjectFieldsRequestEntityType"];
          Name?: string;
          Page?: number;
          PageSize?: number;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectFileds.ProjectFieldRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectFileds.ProjectFieldRequestBase"];
        };
      };
    };
  };
  "/api/ProjectFields/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectFields/DeleteProjectField/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectFields/GetProjectFields": {
    get: {
      parameters: {
        query: {
          EntityType: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Enums.ProjectFieldsRequestEntityType"];
          Name?: string;
          Page?: number;
          PageSize?: number;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectFieldsSuggest/Suggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Requests.ShortProjectFieldRequest>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Requests.ShortProjectFieldRequest>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectFieldsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Requests.ShortProjectFieldRequest>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Requests.ShortProjectFieldRequest>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectFieldSuggest/GetProjectFields": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectFieldSuggestResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectFieldSuggestResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.Suggests.ProjectFieldsSuggestPagedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.Suggests.ProjectFieldsSuggestPagedRequest"];
        };
      };
    };
  };
  "/api/ProjectFieldSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectFieldSuggestResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectFieldSuggestResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.Suggests.ProjectFieldsSuggestPagedRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.Suggests.ProjectFieldsSuggestPagedRequest"];
        };
      };
    };
  };
  "/api/ProjectFilling/FillProject": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.ProjectFillingRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.ProjectFillingRequest"];
        };
      };
    };
  };
  "/api/ProjectFilling": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.ProjectFillingRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.ProjectFillingRequest"];
        };
      };
    };
  };
  "/api/ProjectFilter/GetFilters": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectFilter": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectFilterFieldResponse"][];
            "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectFilterFieldResponse"][];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectFilter/GetDefaultFilters": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectFilterFieldResponse"][];
            "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectFilterFieldResponse"][];
          };
        };
      };
    };
  };
  "/api/ProjectFilter/GetFilterSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Projects.Interfaces.Responses.Filter.FilterSuggestResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Projects.Interfaces.Responses.Filter.FilterSuggestResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Filter.FilterSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Filter.FilterSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectFolderManualPermissions/SetSharedUsersAndGroups": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.GroupProject.DataUpdateSharedUsersAndGroupsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.GroupProject.DataUpdateSharedUsersAndGroupsRequest"];
        };
      };
    };
  };
  "/api/ProjectFolderManualPermissions": {
    get: {
      parameters: {
        query: {
          projectFolderId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.GroupProject.DataUpdateSharedUsersAndGroupsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.GroupProject.DataUpdateSharedUsersAndGroupsRequest"];
        };
      };
    };
  };
  "/api/ProjectFolderManualPermissions/GetSharedUsersAndGroups": {
    get: {
      parameters: {
        query: {
          projectFolderId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectFolders/GetProjectFolder": {
    get: {
      parameters: {
        query: {
          Id?: string;
          IsFromObjectFolder?: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
          };
        };
      };
    };
  };
  "/api/ProjectFolders": {
    get: {
      parameters: {
        query: {
          Id?: string;
          IsFromObjectFolder?: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.RenameProjectFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.RenameProjectFolder"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.FindProjectFolderAllByPermission"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.FindProjectFolderAllByPermission"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          FolderId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectFolders/GetProjectFolders": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.FindProjectFolderAllByPermission"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.FindProjectFolderAllByPermission"];
        };
      };
    };
  };
  "/api/ProjectFolders/GetProjectFoldersForEdit": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.FindProjectFolderAllByPermission"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.FindProjectFolderAllByPermission"];
        };
      };
    };
  };
  "/api/ProjectFolders/InsertProjectFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.CreateProjectFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.CreateProjectFolder"];
        };
      };
    };
  };
  "/api/ProjectFolders/UpdateProjectFolder": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.RenameProjectFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.RenameProjectFolder"];
        };
      };
    };
  };
  "/api/ProjectFolders/DeleteProjectFolder": {
    delete: {
      parameters: {
        query: {
          FolderId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectFolderSuggest/GetProjectFolders": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderSuggestDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderSuggestDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.Criteria.SuggestProjectFolders"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.Criteria.SuggestProjectFolders"];
        };
      };
    };
  };
  "/api/ProjectFolderSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderSuggestDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderSuggestDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.Criteria.SuggestProjectFolders"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.Criteria.SuggestProjectFolders"];
        };
      };
    };
  };
  "/api/ProjectGroupAction/MoveToProjectFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.MoveProjectGroup"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.MoveProjectGroup"];
        };
      };
    };
  };
  "/api/ProjectGroupAction": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.MoveProjectGroup"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.MoveProjectGroup"];
        };
      };
    };
  };
  "/api/ProjectGroups/Archive": {
    put: {
      parameters: {
        query: {
          id?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectGroups/Restore": {
    put: {
      parameters: {
        query: {
          id?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectGroupManualPermissions/SetSharedUsersAndGroups": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.GroupProject.DataUpdateSharedUsersAndGroupsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.GroupProject.DataUpdateSharedUsersAndGroupsRequest"];
        };
      };
    };
  };
  "/api/ProjectGroupManualPermissions": {
    get: {
      parameters: {
        query: {
          projectGroupId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.GroupProject.DataUpdateSharedUsersAndGroupsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.GroupProject.DataUpdateSharedUsersAndGroupsRequest"];
        };
      };
    };
  };
  "/api/ProjectGroupManualPermissions/GetSharedUsersAndGroups": {
    get: {
      parameters: {
        query: {
          projectGroupId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectGroupPermissionsSuggest/GetProjectGroupPermissions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.PermissionsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.PermissionsSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectGroupPermissionsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.PermissionsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.PermissionsSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectGroups/PostProjectGroups": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupAll"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupAll"];
        };
      };
    };
  };
  "/api/ProjectGroups": {
    get: {
      parameters: {
        query: {
          ProjectGroupId: string;
          ObjectClassId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.CreateOrUpdateProjectGroup"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.CreateOrUpdateProjectGroup"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupAll"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupAll"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectGroups/GetProjectGroup": {
    get: {
      parameters: {
        query: {
          ProjectGroupId: string;
          ObjectClassId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
          };
        };
      };
    };
  };
  "/api/ProjectGroups/PutProjectGroup": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.CreateOrUpdateProjectGroup"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.CreateOrUpdateProjectGroup"];
        };
      };
    };
  };
  "/api/ProjectGroups/DeleteProjectGroup": {
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectGroupSuggest/GetProjectGroups": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupByFilter"];
        };
      };
    };
  };
  "/api/ProjectGroupSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupByFilter"];
        };
      };
    };
  };
  "/api/ProjectGroupSuggest/GetProjectGroupsByFolderSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Handlers.GetProjectGroupsSuggest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Handlers.GetProjectGroupsSuggest"];
        };
      };
    };
  };
  "/api/ProjectParticipantsFilterSuggest/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectParticipantsFilterSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectPrint/Print": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            ProjectId: string;
          };
        };
      };
    };
  };
  "/api/ProjectPrint": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            ProjectId: string;
          };
        };
      };
    };
  };
  "/api/ProjectResponsiblesSuggest/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindUserSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindUserSuggestByFilter"];
        };
      };
    };
  };
  "/api/ProjectResponsiblesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindUserSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindUserSuggestByFilter"];
        };
      };
    };
  };
  "/api/Projects/GetGroupedProjects": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.GroupedProjectResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.GroupedProjectResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.GetProjectsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.GetProjectsRequest"];
        };
      };
    };
  };
  "/api/Projects": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProjectWithBlocks"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProjectWithBlocks"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.GroupedProjectResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.GroupedProjectResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.GetProjectsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.GetProjectsRequest"];
        };
      };
    };
  };
  "/api/Projects/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Projects/GetSubscribeProjects": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
        };
      };
    };
  };
  "/api/Projects/GetProject/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
          };
        };
      };
    };
  };
  "/api/projects/GetProject": {
    get: {
      parameters: {
        query: {
          projectId?: string;
          id?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
          };
        };
      };
    };
  };
  "/api/Projects/CreateProject": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.CreateProjectRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.CreateProjectRequest"];
        };
      };
    };
  };
  "/api/projects": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProject"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProject"];
        };
      };
    };
  };
  "/api/projects/putproject": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProject"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProject"];
        };
      };
    };
  };
  "/api/Projects/UpdateProjectWithBlocks": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProjectWithBlocks"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProjectWithBlocks"];
        };
      };
    };
  };
  "/api/Projects/UpdateProjectSummary": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProjectWithBlocks"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.UpdateProjectWithBlocks"];
        };
      };
    };
  };
  "/api/Projects/UpdateProjectTab": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.CustomTabResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.CustomTabResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.Commands.UpdateCustomProjectTab"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.Commands.UpdateCustomProjectTab"];
        };
      };
    };
  };
  "/api/Projects/DeleteProject/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Projects/Subscribe": {
    get: {
      parameters: {
        query: {
          projectId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Projects/Unsubscribe": {
    get: {
      parameters: {
        query: {
          projectId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ProjectSettings/GetSettings": {
    get: {
      parameters: {
        query: {
          projectId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectSettings": {
    get: {
      parameters: {
        query: {
          projectId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectSettingsSaveRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectSettingsSaveRequest"];
        };
      };
    };
  };
  "/api/ProjectSettings/SaveSettings": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectSettingsSaveRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectSettingsSaveRequest"];
        };
      };
    };
  };
  "/api/ProjectSharedUsersAndGroups/GetProjectSharedUsers": {
    get: {
      parameters: {
        query: {
          projectId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse[]>"];
          };
        };
      };
    };
  };
  "/api/ProjectSharedUsersAndGroups": {
    get: {
      parameters: {
        query: {
          projectId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse[]>"];
          };
        };
      };
    };
  };
  "/api/ProjectsSuggest/GetProjects": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindProjectSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindProjectSuggestByFilter"];
        };
      };
    };
  };
  "/api/ProjectsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindProjectSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindProjectSuggestByFilter"];
        };
      };
    };
  };
  "/api/ProjectsSuggest/GetAdminNoArchiveProjects": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindProjectSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindProjectSuggestByFilter"];
        };
      };
    };
  };
  "/api/ProjectsSuggest/GetEditNoArchiveProjects": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindProjectSuggestByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindProjectSuggestByFilter"];
        };
      };
    };
  };
  "/api/ProjectsSuggest/GetProjectsWithBalance": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.ProjectWithBalanceDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.ProjectWithBalanceDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.Suggest.ProjectWithBalanceSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.Suggest.ProjectWithBalanceSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectsSuggest/GetProjectLinkObjects": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.Criteria.GetProjectLinkObjectsSuggest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.Criteria.GetProjectLinkObjectsSuggest"];
        };
      };
    };
  };
  "/api/ProjectTypes/GetProjectType": {
    get: {
      parameters: {
        query: {
          projectTypeId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectTypes": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeRequestBase"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          idProjectType?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Projects.ProjectType>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Projects.ProjectType>"];
          };
        };
      };
    };
  };
  "/api/ProjectTypes/PostProjectType": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeRequestBase"];
        };
      };
    };
  };
  "/api/ProjectTypes/PutProjectTypeWithBlocks": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeRequest"];
        };
      };
    };
  };
  "/api/ProjectTypes/GetProjectTypes": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectTypes/DeleteProjectType": {
    delete: {
      parameters: {
        query: {
          idProjectType?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Projects.ProjectType>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Projects.ProjectType>"];
          };
        };
      };
    };
  };
  "/api/ProjectTypes/GetNewProjectTypeDraft": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
          };
        };
      };
    };
  };
  "/api/ProjectTypes/CloneObjectType": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.Criteria.CloneObjectType"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.Criteria.CloneObjectType"];
        };
      };
    };
  };
  "/api/ProjectTypesSuggest/GetProjectTypes": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectTypesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypeSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectTypesSuggest/FindSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.FindProjectTypeSuggest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.FindProjectTypeSuggest"];
        };
      };
    };
  };
  "/api/ProjectTypesSuggest/FindSuggestByParentId": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.FindProjectTypeSuggestByParentId"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.FindProjectTypeSuggestByParentId"];
        };
      };
    };
  };
  "/api/ProjectUsersAndClientsSuggest/GetUsersAndClients": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectUsersAndClientsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectUsersAndClientsSuggestRequest"];
        };
      };
    };
  };
  "/api/ProjectUsersAndClientsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectUsersAndClientsSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectUsersAndClientsSuggestRequest"];
        };
      };
    };
  };
  "/api/RegisterObjects/CreateOrUpdate": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.RegisterObjectSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.RegisterObjectSummary"];
        };
      };
    };
  };
  "/api/RegisterObjects": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Models.RegisterObjectSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Models.RegisterObjectSummary"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/RegisterObjects/Get": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata>"];
          };
        };
      };
    };
  };
  "/api/RegisterObjects/GetList": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.RegisterObjects.RegisterObjectItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.RegisterObjects.RegisterObjectItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.RegisterObjects.GetListOfRegisterObjectsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.RegisterObjects.GetListOfRegisterObjectsRequest"];
        };
      };
    };
  };
  "/api/RegisterObjects/Delete": {
    delete: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Registers/Find": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegistersPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegistersPaged"];
        };
      };
    };
  };
  "/api/Registers": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTableFieldsMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTableFieldsMetadata>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegistersPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegistersPaged"];
        };
      };
    };
  };
  "/api/Registers/Get": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTableFieldsMetadata>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTableFieldsMetadata>"];
          };
        };
      };
    };
  };
  "/api/RegisterTemplates/Find": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegisterTemplatesPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegisterTemplatesPaged"];
        };
      };
    };
  };
  "/api/RegisterTemplates": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.CreateOrUpdateRegisterTemplate"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.CreateOrUpdateRegisterTemplate"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegisterTemplatesPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegisterTemplatesPaged"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/RegisterTemplates/Get": {
    get: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
          };
        };
      };
    };
  };
  "/api/RegisterTemplates/CreateOrUpdate": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.CreateOrUpdateRegisterTemplate"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.CreateOrUpdateRegisterTemplate"];
        };
      };
    };
  };
  "/api/RegisterTemplates/Delete": {
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/RelatedObjects/SaveRelatedObjects": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.SaveRelatedObjects"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.SaveRelatedObjects"];
        };
      };
    };
  };
  "/api/RelatedObjects": {
    get: {
      parameters: {
        query: {
          Id: string;
          Type: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.RelationType"];
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto[]>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.SaveRelatedObjects"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.SaveRelatedObjects"];
        };
      };
    };
  };
  "/api/RelatedObjects/GetRelatedObjects": {
    get: {
      parameters: {
        query: {
          Id: string;
          Type: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.RelationType"];
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto[]>"];
          };
        };
      };
    };
  };
  "/api/ReportCatalog/CreateFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Commands.CreateReportFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Commands.CreateReportFolder"];
        };
      };
    };
  };
  "/api/ReportCatalog": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Commands.CreateReportFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Commands.CreateReportFolder"];
        };
      };
    };
  };
  "/api/ReportCatalog/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
    };
  };
  "/api/ReportCatalog/GetFolder/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
    };
  };
  "/api/ReportCatalog/GetContent": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Criteria.GetReportFolderContent"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Criteria.GetReportFolderContent"];
        };
      };
    };
  };
  "/api/ReportCatalog/BulkDelete": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Controllers.ReportCatalogItemToAction"][];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Controllers.ReportCatalogItemToAction"][];
        };
      };
    };
  };
  "/api/ReportCatalog/GetDestinationFoldersForMove": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Controllers.MoveDestinationReportFolderDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Controllers.MoveDestinationReportFolderDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Controllers.FindDestinationReportFolders"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Controllers.FindDestinationReportFolders"];
        };
      };
    };
  };
  "/api/ReportCatalog/MoveCatalogItems": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Commands.MoveReportCatalogItems"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Commands.MoveReportCatalogItems"];
        };
      };
    };
  };
  "/api/ReportCatalog/RenameFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Commands.RenameReportFolder"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.Commands.RenameReportFolder"];
        };
      };
    };
  };
  "/api/ReportPermissions/GetPermissions": {
    get: {
      parameters: {
        query: {
          ReportItemId?: string;
          EntityType?: components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.ReportListEntityTypeEnum"];
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem>>"];
          };
        };
      };
    };
  };
  "/api/ReportPermissions": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.Commands.SaveReportPermissionsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.Commands.SaveReportPermissionsRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.Commands.UsersAndGroupsInReportsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.Commands.UsersAndGroupsInReportsRequest"];
        };
      };
    };
  };
  "/api/ReportPermissions/SavePermissions": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.Commands.SaveReportPermissionsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.Commands.SaveReportPermissionsRequest"];
        };
      };
    };
  };
  "/api/ReportPermissions/GetAvailablePermissions": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>>"];
          };
        };
      };
    };
  };
  "/api/ReportPermissions/GetUsersAndGroupsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.Commands.UsersAndGroupsInReportsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.Commands.UsersAndGroupsInReportsRequest"];
        };
      };
    };
  };
  "/api/ReportQuery/GetQueryText": {
    get: {
      parameters: {
        query: {
          reportMetadataId: string;
          isSummary?: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Net.Http.HttpResponseMessage"];
            "text/json": components["schemas"]["System.Net.Http.HttpResponseMessage"];
          };
        };
      };
    };
  };
  "/api/ReportQuery": {
    get: {
      parameters: {
        query: {
          reportMetadataId: string;
          isSummary?: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Net.Http.HttpResponseMessage"];
            "text/json": components["schemas"]["System.Net.Http.HttpResponseMessage"];
          };
        };
      };
    };
  };
  "/api/Reports/GetReportFields": {
    get: {
      parameters: {
        query: {
          RootGroupId: string;
          Name: string;
          Ids: string[];
          IgnoreIds: string[];
          ParentId: string;
          ParentTempId: string;
          Page: number;
          PageSize: number;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>"];
          };
        };
      };
    };
  };
  "/api/Reports": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportMetadataUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportMetadataUpdateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportMetadataRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportMetadataRequestBase"];
        };
      };
    };
  };
  "/api/Reports/GetAllReportFields": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>"];
          };
        };
      };
    };
  };
  "/api/Reports/PostReportMetadata": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportMetadataRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportMetadataRequestBase"];
        };
      };
    };
  };
  "/api/Reports/PutReportMetadata": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportMetadataUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportMetadataUpdateRequest"];
        };
      };
    };
  };
  "/api/Reports/GetReportMetadata": {
    get: {
      parameters: {
        query: {
          reportMetadataId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>"];
          };
        };
      };
    };
  };
  "/api/Reports/Clone": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.Reports.Commands.CloneReportMetadata"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.Reports.Commands.CloneReportMetadata"];
        };
      };
    };
  };
  "/api/Reports/Run": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportRunRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.ReportRunRequest"];
        };
      };
    };
  };
  "/api/Reports/GetFilteredData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.SortedReportRunRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.SortedReportRunRequest"];
        };
      };
    };
  };
  "/api/Reports/GetFixedReportData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.App.SystemReports.Commands.RunSystemReport"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.App.SystemReports.Commands.RunSystemReport"];
        };
      };
    };
  };
  "/api/Reports/ReportFieldSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportFieldSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.ReportFieldSuggestRequest"];
        };
      };
    };
  };
  "/api/Reports/SendNewReportRequest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.NewReportRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.NewReportRequest"];
        };
      };
    };
  };
  "/api/Reports/GetReportFieldFormats": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.Response.ColumnFormatResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.Response.ColumnFormatResponse>>"];
          };
        };
      };
    };
  };
  "/api/ReportSummary/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.FilteredReportRunRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.FilteredReportRunRequest"];
        };
      };
    };
  };
  "/api/ReportSummary": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.FilteredReportRunRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.FilteredReportRunRequest"];
        };
      };
    };
  };
  "/api/ResolutionGroups/GetResolutionGroups": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupsResponse"];
            "text/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupsResponse"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
        };
      };
    };
  };
  "/api/ResolutionGroups": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupUpdateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupsResponse"];
            "text/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupsResponse"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
        };
      };
    };
  };
  "/api/ResolutionGroups/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary>"];
          };
        };
      };
    };
  };
  "/api/ResolutionGroups/PutResolutionGroup": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupUpdateRequest"];
        };
      };
    };
  };
  "/api/ResolutionGroups/DeleteResolutionGroup/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary>"];
          };
        };
      };
    };
  };
  "/api/Resolutions/GetResolution": {
    get: {
      parameters: {
        query: {
          resolutionId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
          };
        };
      };
    };
  };
  "/api/Resolutions": {
    get: {
      parameters: {
        query: {
          resolutionId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionUpdateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionsRequest"];
        };
      };
    };
  };
  "/api/Resolutions/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Resolutions/GetResolutions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionsRequest"];
        };
      };
    };
  };
  "/api/Resolutions/PutResolution": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionUpdateRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionUpdateRequest"];
        };
      };
    };
  };
  "/api/Resolutions/ChangeResolutionGroup": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ChangeResolutionGroupRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ChangeResolutionGroupRequest"];
        };
      };
    };
  };
  "/api/Resolutions/DeleteResolution/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/UserManagment/RolePermissions": {
    get: {
      parameters: {
        query: {
          roleId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse>>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionUpdateRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionUpdateRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionInsertRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionInsertRequest"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
          };
        };
      };
    };
  };
  "/api/UserManagment/RolePermissions/CreateRolePermission": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionInsertRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionInsertRequest"];
        };
      };
    };
  };
  "/api/RolePermissions/CreateRolePermission": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionInsertRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionInsertRequest"];
        };
      };
    };
  };
  "/api/UserManagment/RolePermissions/UpdateRolePermission": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionUpdateRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionUpdateRequest"];
        };
      };
    };
  };
  "/api/RolePermissions/UpdateRolePermission": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionUpdateRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionUpdateRequest"];
        };
      };
    };
  };
  "/api/UserManagment/RolePermissions/DeleteRolePermission": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
          };
        };
      };
    };
  };
  "/api/RolePermissions/DeleteRolePermission/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>"];
          };
        };
      };
    };
  };
  "/api/UserManagment/RolePermissions/GetRolePermissions": {
    get: {
      parameters: {
        query: {
          roleId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse>>"];
          };
        };
      };
    };
  };
  "/api/RolePermissions/GetRolePermissions": {
    get: {
      parameters: {
        query: {
          roleId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse>>"];
          };
        };
      };
    };
  };
  "/api/Roles/CreateRole": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequestBase"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequestBase"];
        };
      };
    };
  };
  "/api/Roles": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequestBase"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequestBase"];
        };
      };
    };
  };
  "/api/Roles/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
          };
        };
      };
    };
  };
  "/api/Roles/UpdateRole": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequest"];
        };
      };
    };
  };
  "/api/Roles/GetRole/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
          };
        };
      };
    };
  };
  "/api/Roles/GetRoles": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
        };
      };
    };
  };
  "/api/Roles/DeleteRole/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>"];
          };
        };
      };
    };
  };
  "/api/RolesSuggest/GetRoles": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/RolesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/ScheduledInvoicesGenerationRules/Create": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel"];
        };
      };
    };
  };
  "/api/ScheduledInvoicesGenerationRules": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel"];
        };
      };
    };
  };
  "/api/ScheduledInvoicesGenerationRules/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ScheduledInvoicesGenerationRules/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel"];
        };
      };
    };
  };
  "/api/ScheduledInvoicesGenerationRules/Get/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>"];
          };
        };
      };
    };
  };
  "/api/ScheduledInvoicesGenerationRules/Delete/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ScheduledInvoicesGenerationRules/List": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleSummaryModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleSummaryModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedRequest"];
        };
      };
    };
  };
  "/api/SchedulerUserRoles/GetSchedulerUserRoles": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/SchedulerUserRoles": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/SchedulerUserRoles/GetEventCreateSchedulerUserRoles": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary>>"];
          };
        };
      };
    };
  };
  "/api/SchedulerUserRoles/GetTaskCreateSchedulerUserRoles": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/SecuritySettings/Upload": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/SecuritySettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/SecuritySettings/Download": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Session/Ping": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task"];
          };
        };
      };
    };
  };
  "/api/Session": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task"];
          };
        };
      };
    };
  };
  "/api/Session/CheckSession": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.AuthSessionsState>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.AuthSessionsState>"];
          };
        };
      };
    };
  };
  "/api/Shortcut/GetShortcuts": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.AiAssistant.Responses.ShortcutsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.AiAssistant.Responses.ShortcutsResponse>"];
          };
        };
      };
    };
  };
  "/api/Shortcut": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.AiAssistant.Responses.ShortcutsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.AiAssistant.Responses.ShortcutsResponse>"];
          };
        };
      };
    };
  };
  "/api/Stages/GetProjectType": {
    get: {
      parameters: {
        query: {
          ProjectTypeId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem>"];
          };
        };
      };
    };
  };
  "/api/Stages": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectFilterFieldResponse"][];
            "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectFilterFieldResponse"][];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.Commands.ChangeProjectStage"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.Commands.ChangeProjectStage"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.Criteria.GetProjectTypesWithStages"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.Criteria.GetProjectTypesWithStages"];
        };
      };
    };
  };
  "/api/Stages/GetProjectTypes": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.Criteria.GetProjectTypesWithStages"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.ProjectTypes.Criteria.GetProjectTypesWithStages"];
        };
      };
    };
  };
  "/api/Stages/GetGroupedProjects": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.Responses.GroupedProjectsByStage>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.Responses.GroupedProjectsByStage>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.Criteria.GetGroupedProjectsByStages"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.Criteria.GetGroupedProjectsByStages"];
        };
      };
    };
  };
  "/api/Stages/GetDefaultFilters": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectFilterFieldResponse"][];
            "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectFilterFieldResponse"][];
          };
        };
      };
    };
  };
  "/api/Stages/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.Commands.ChangeProjectStage"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.App.Projects.Commands.ChangeProjectStage"];
        };
      };
    };
  };
  "/api/StageSystemFieldsSuggest/Get": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName[]>"];
          };
        };
      };
    };
  };
  "/api/StageSystemFieldsSuggest": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName[]>"];
          };
        };
      };
    };
  };
  "/api/webhooks/incoming/stripe": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": string;
          "text/json": string;
        };
      };
    };
  };
  "/api/Subscription/GetPlans": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlansOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlansOverview>"];
          };
        };
      };
    };
  };
  "/api/Subscription": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlansOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlansOverview>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.ChangeCardRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.ChangeCardRequest"];
        };
      };
    };
  };
  "/api/Subscription/GetProration": {
    get: {
      parameters: {
        query: {
          newPlanId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.PlanChangingOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.PlanChangingOverview>"];
          };
        };
      };
    };
  };
  "/api/Subscription/ChangeCard": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.ChangeCardRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.ChangeCardRequest"];
        };
      };
    };
  };
  "/api/Subscription/ChangePlan": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.ChangePlanRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.ChangePlanRequest"];
        };
      };
    };
  };
  "/api/Subscription/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.SubscriptionUpdateRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.SubscriptionUpdateRequest"];
        };
      };
    };
  };
  "/api/Subscription/Disable": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Subscription/Enable": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Subscription/Usages": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Response.SubscriptionUsages>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Response.SubscriptionUsages>"];
          };
        };
      };
    };
  };
  "/api/Subscription/AdminLogin": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<string>"];
          };
        };
      };
    };
  };
  "/api/TaskAuthorsSuggest/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskUsers.FindTaskAuthorUsersPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskUsers.FindTaskAuthorUsersPaged"];
        };
      };
    };
  };
  "/api/TaskAuthorsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskUsers.UserDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskUsers.UserDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskUsers.FindTaskAuthorUsersPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskUsers.FindTaskAuthorUsersPaged"];
        };
      };
    };
  };
  "/api/TaskCreation/CreateTask": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.TaskCreationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.TaskCreationRequest"];
        };
      };
    };
  };
  "/api/TaskCreation": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.TaskCreationRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.TaskCreationRequest"];
        };
      };
    };
  };
  "/api/TaskNames/GetTaskNames": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskNames.FindTaskNamePaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskNames.FindTaskNamePaged"];
        };
      };
    };
  };
  "/api/TaskNames": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskNames.FindTaskNamePaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskNames.FindTaskNamePaged"];
        };
      };
    };
  };
  "/api/TaskResponsiblesSuggest/Get": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskUsers.FindTaskResponseUsersPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskUsers.FindTaskResponseUsersPaged"];
        };
      };
    };
  };
  "/api/TaskResponsiblesSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskUsers.FindTaskResponseUsersPaged"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.TaskUsers.FindTaskResponseUsersPaged"];
        };
      };
    };
  };
  "/api/Tasks/GetGroupedTasks": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.Tasks.GroupedTaskList>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.Tasks.GroupedTaskList>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.FindTaskDtoListByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.FindTaskDtoListByFilter"];
        };
      };
    };
  };
  "/api/Tasks": {
    get: {
      parameters: {
        query: {
          TaskId: string;
          ShortTask: boolean;
          FillMetadata: boolean;
          FillBlocks: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.CreateOrUpdateTask"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.CreateOrUpdateTask"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.Tasks.GroupedTaskList>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.Tasks.GroupedTaskList>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.FindTaskDtoListByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.FindTaskDtoListByFilter"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Tasks/GetNotGroupedTasks": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.FindTaskDtoListByFilter"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.FindTaskDtoListByFilter"];
        };
      };
    };
  };
  "/api/Tasks/GetTask": {
    get: {
      parameters: {
        query: {
          TaskId: string;
          ShortTask: boolean;
          FillMetadata: boolean;
          FillBlocks: boolean;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
          };
        };
      };
    };
  };
  "/api/Tasks/PutTask": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.CreateOrUpdateTask"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.CreateOrUpdateTask"];
        };
      };
    };
  };
  "/api/Tasks/PutListTask": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.UpdateShortTask"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.UpdateShortTask"];
        };
      };
    };
  };
  "/api/Tasks/DeleteTask": {
    delete: {
      parameters: {
        query: {
          Id: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Tasks/GetAllHistory": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.History.Data.IGroupedChangeDataRecord>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.History.Data.IGroupedChangeDataRecord>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.HistoryRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.HistoryRequest"];
        };
      };
    };
  };
  "/api/Tasks/GetDetailHistory": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.History.Response.ChangeDataRecordResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.History.Response.ChangeDataRecordResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.DetailHistoryRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.DetailHistoryRequest"];
        };
      };
    };
  };
  "/api/Tasks/Reorder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.ReorderTasks"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.ReorderTasks"];
        };
      };
    };
  };
  "/api/Tasks/OpenTask": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.ViewTask"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.ViewTask"];
        };
      };
    };
  };
  "/api/Tasks/GetTaskInfoByEventId": {
    get: {
      parameters: {
        query: {
          EventId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskBaseDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskBaseDto>"];
          };
        };
      };
    };
  };
  "/api/Tasks/SetResponsible": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.SetTasksResponsibleSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.SetTasksResponsibleSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.Commands.SetTasksResponsible"];
          "text/json": components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.Commands.SetTasksResponsible"];
        };
      };
    };
  };
  "/api/TaskUsersAndGroupsSuggest/GetTaskUsersAndGroups": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Users.UserOrGroupWithName>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Users.UserOrGroupWithName>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.Suggests.TaskUsersSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.Suggests.TaskUsersSuggestRequest"];
        };
      };
    };
  };
  "/api/TaskUsersAndGroupsSuggest": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Users.UserOrGroupWithName>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Users.UserOrGroupWithName>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.Suggests.TaskUsersSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.Suggests.TaskUsersSuggestRequest"];
        };
      };
    };
  };
  "/api/TemplateNumbers/Get/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
          };
        };
      };
    };
  };
  "/api/TemplateNumbers/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
          };
        };
      };
    };
  };
  "/api/TemplateNumbers": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.TemplateNumberRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.TemplateNumberRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Controllers.AutoNumbering.SetNumberRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Controllers.AutoNumbering.SetNumberRequest"];
        };
      };
    };
  };
  "/api/TemplateNumbers/GetUsedProjectFields": {
    get: {
      parameters: {
        query: {
          templateNumberId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.IdNameObject>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.IdNameObject>>"];
          };
        };
      };
    };
  };
  "/api/TemplateNumbers/Put": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.TemplateNumberRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.TemplateNumberRequest"];
        };
      };
    };
  };
  "/api/TemplateNumbers/SetNumber": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Controllers.AutoNumbering.SetNumberRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Controllers.AutoNumbering.SetNumberRequest"];
        };
      };
    };
  };
  "/api/TemplateNumbers/Delete/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
          };
        };
      };
    };
  };
  "/api/TemplateNumbers/GetList": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
          "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest"];
        };
      };
    };
  };
  "/api/TemplateUpload": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/ThirdPartyAuth/Login": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ThirdPartyLogonResponseModel"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ThirdPartyLogonResponseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LoginModel"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LoginModel"];
        };
      };
    };
  };
  "/api/ThirdPartyAuth": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
    };
  };
  "/api/ThirdPartyAuth/CheckValidationCode": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ThirdPartyLogonResponseModel"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ThirdPartyLogonResponseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.CheckValidationCodeRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.CheckValidationCodeRequest"];
        };
      };
    };
  };
  "/api/ThirdPartyAuth/ResendCode": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Responses.SendCodeResponse"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Responses.SendCodeResponse"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.ResendValidationCodeRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.ResendValidationCodeRequest"];
        };
      };
    };
  };
  "/api/ThirdPartyAuth/CheckPhoneConfirmationCode": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ThirdPartyLogonResponseModel"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ThirdPartyLogonResponseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.CheckValidationCodeRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.CheckValidationCodeRequest"];
        };
      };
    };
  };
  "/api/ThirdPartyAuth/ResendPhoneConfirmationCode": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Responses.ChangePhoneReqestResponse"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Responses.ChangePhoneReqestResponse"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.ResendValidationCodeRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.ResendValidationCodeRequest"];
        };
      };
    };
  };
  "/api/ThirdPartyAuth/ChangePhone": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Responses.ChangePhoneReqestResponse"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Responses.ChangePhoneReqestResponse"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.ChangePhoneRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Requests.ChangePhoneRequest"];
        };
      };
    };
  };
  "/api/ThirdPartyAuth/Logout": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
            "text/json": components["schemas"]["System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>"];
          };
        };
      };
    };
  };
  "/api/TimeLogs/GetById/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
          };
        };
      };
    };
  };
  "/api/TimeLogs/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
          };
        };
      };
    };
  };
  "/api/TimeLogs": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummary"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummary"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          timeLogId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/TimeLogs/GetByEntity": {
    get: {
      parameters: {
        query: {
          EntityId: string;
          TagSysName: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummary[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummary[]>"];
          };
        };
      };
    };
  };
  "/api/TimeLogs/Add": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummary"];
        };
      };
    };
  };
  "/api/TimeLogs/Update": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummary"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummary"];
        };
      };
    };
  };
  "/api/TimeLogs/GetPresets": {
    get: {
      parameters: {
        query: {
          tagSysName?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.PresetSummary[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.PresetSummary[]>"];
          };
        };
      };
    };
  };
  "/api/TimeLogs/Delete": {
    delete: {
      parameters: {
        query: {
          timeLogId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/TimeSettings/GetTimeSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/TimeSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>"];
          };
        };
      };
    };
  };
  "/api/TimeZones/GetTimeZones": {
    get: {
      parameters: {
        query: {
          name?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TimeZoneModel"][];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TimeZoneModel"][];
          };
        };
      };
    };
  };
  "/api/TimeZones": {
    get: {
      parameters: {
        query: {
          name?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TimeZoneModel"][];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TimeZoneModel"][];
          };
        };
      };
    };
  };
  "/api/Timing/GetTimings": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.EntityTimeLogResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.EntityTimeLogResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimingRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimingRequest"];
        };
      };
    };
  };
  "/api/Timing": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.EntityTimeLogResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.EntityTimeLogResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimingRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimingRequest"];
        };
      };
    };
  };
  "/api/Timing/GetTimingsSummary": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimeLogsSummary>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimeLogsSummary>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimingRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimingRequest"];
        };
      };
    };
  };
  "/api/Transactions/Save": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransactionSaveRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransactionSaveRequest"];
        };
      };
    };
  };
  "/api/Transactions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransactionSaveRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransactionSaveRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          paymentId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Transactions/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto>"];
          };
        };
      };
    };
  };
  "/api/Transactions/Get/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto>"];
          };
        };
      };
    };
  };
  "/api/Transactions/Summary": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionsSummaryDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionsSummaryDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransactionsSummaryRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransactionsSummaryRequest"];
        };
      };
    };
  };
  "/api/Transactions/List": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionListDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionListDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransactionsListRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransactionsListRequest"];
        };
      };
    };
  };
  "/api/Transactions/Delete": {
    delete: {
      parameters: {
        query: {
          paymentId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Transactions/SaveTransfer": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransferDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransferDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransferSaveRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Commands.TransferSaveRequest"];
        };
      };
    };
  };
  "/api/Transactions/GetTransfer": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransferDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransferDto>"];
          };
        };
      };
    };
  };
  "/api/Transactions/GetPayment": {
    get: {
      parameters: {
        query: {
          transactionId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionPaymentDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionPaymentDto>"];
          };
        };
      };
    };
  };
  "/api/TrustLedger/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TrustLedgerRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TrustLedgerRequest"];
        };
      };
    };
  };
  "/api/TrustLedger": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TrustLedgerRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TrustLedgerRequest"];
        };
      };
    };
  };
  "/api/TrustLedger/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/TrustLedger/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TrustLedgerRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TrustLedgerRequest"];
        };
      };
    };
  };
  "/api/TrustLedger/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/TrustLedger/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/TypeCaseCounts/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TypeCaseCountsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TypeCaseCountsFilterRequest"];
        };
      };
    };
  };
  "/api/TypeCaseCounts": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TypeCaseCountsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TypeCaseCountsFilterRequest"];
        };
      };
    };
  };
  "/api/TypeCaseCounts/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/TypeCaseCounts/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TypeCaseCountsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TypeCaseCountsFilterRequest"];
        };
      };
    };
  };
  "/api/TypeCaseCounts/GetScheduleData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.TypeCaseCountsScheduleResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.TypeCaseCountsScheduleResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TypeCaseCountsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.TypeCaseCountsFilterRequest"];
        };
      };
    };
  };
  "/api/TypeCaseCounts/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/TypeCaseCounts/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UnbilledTimes/GetList": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimesRequest"];
        };
      };
    };
  };
  "/api/UnbilledTimes": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.AddToBillRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.AddToBillRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimesRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimesRequest"];
        };
      };
    };
  };
  "/api/UnbilledTimes/GetTotal": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimesTotalResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimesTotalResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.UnbilledTotalRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.UnbilledTotalRequest"];
        };
      };
    };
  };
  "/api/UnbilledTimes/AddToBill": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.AddToBillRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.AddToBillRequest"];
        };
      };
    };
  };
  "/api/UnbilledTimes/RemoveFromBill": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.RemoveFromBillRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.RemoveFromBillRequest"];
        };
      };
    };
  };
  "/api/Upload": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/Upload/PublicUpload": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/UserAccess/GetProjectGroupsPermissions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.UserAccessRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.UserAccessRequest"];
        };
      };
    };
  };
  "/api/UserAccess": {
    get: {
      parameters: {
        query: {
          UserId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.UserAccessRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.UserAccessRequest"];
        };
      };
    };
  };
  "/api/UserAccess/GetProjectPermissions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListPagedResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListPagedResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.UserAccessRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.UserAccessRequest"];
        };
      };
    };
  };
  "/api/UserAccess/GetEntityPermissions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.UserAccessRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.UserAccessRequest"];
        };
      };
    };
  };
  "/api/UserAccess/GetProjectGroupsPermissionsCount": {
    get: {
      parameters: {
        query: {
          UserId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
          };
        };
      };
    };
  };
  "/api/UserAccess/GetProjectPermissionsCount": {
    get: {
      parameters: {
        query: {
          UserId: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>"];
          };
        };
      };
    };
  };
  "/api/UserNotifications/Get": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>"];
          };
        };
      };
    };
  };
  "/api/UserNotifications": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.UniversalNotifications.Requests.UserNotificationDeleteRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.UniversalNotifications.Requests.UserNotificationDeleteRequest"];
        };
      };
    };
  };
  "/api/UserNotifications/Delete": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.UniversalNotifications.Requests.UserNotificationDeleteRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.UniversalNotifications.Requests.UserNotificationDeleteRequest"];
        };
      };
    };
  };
  "/api/UserManagment/UserProfiles": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Users.UserProfileRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Users.UserProfileRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.PhoneConfirmationRequestResendResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.PhoneConfirmationRequestResendResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.ResendPhoneConfirmationCodeRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.ResendPhoneConfirmationCodeRequest"];
        };
      };
    };
  };
  "/api/UserProfiles/Get": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
          };
        };
      };
    };
  };
  "/api/UserProfiles/GetId": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.UserIdModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.UserIdModel>"];
          };
        };
      };
    };
  };
  "/api/UserManagment/UserProfiles/Put": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Users.UserProfileRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Users.UserProfileRequest"];
        };
      };
    };
  };
  "/api/UserProfiles/Put": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Users.UserProfileRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.Users.UserProfileRequest"];
        };
      };
    };
  };
  "/api/UserManagment/UserProfiles/ResendPhoneConfirmationCode": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.PhoneConfirmationRequestResendResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.PhoneConfirmationRequestResendResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.ResendPhoneConfirmationCodeRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.ResendPhoneConfirmationCodeRequest"];
        };
      };
    };
  };
  "/api/UserProfiles/ResendPhoneConfirmationCode": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.PhoneConfirmationRequestResendResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.PhoneConfirmationRequestResendResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.ResendPhoneConfirmationCodeRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.ResendPhoneConfirmationCodeRequest"];
        };
      };
    };
  };
  "/api/UserManagment/UserProfiles/ConfirmPhone": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.PhoneConfirmationRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.PhoneConfirmationRequest"];
        };
      };
    };
  };
  "/api/UserProfiles/ConfirmPhone": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.PhoneConfirmationRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.PhoneConfirmationRequest"];
        };
      };
    };
  };
  "/api/UserProjectTypes/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UserProjectTypeFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UserProjectTypeFiltersRequest"];
        };
      };
    };
  };
  "/api/UserProjectTypes": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UserProjectTypeFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UserProjectTypeFiltersRequest"];
        };
      };
    };
  };
  "/api/UserProjectTypes/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/UserProjectTypes/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UserProjectTypeFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UserProjectTypeFiltersRequest"];
        };
      };
    };
  };
  "/api/UserProjectTypes/GetScheduleData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.UserProjectTypeScheduleResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.UserProjectTypeScheduleResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UserProjectTypeFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UserProjectTypeFiltersRequest"];
        };
      };
    };
  };
  "/api/UserProjectTypes/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UserProjectTypes/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UserRoles/CreateUserRole": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.UserRoleCreateRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.UserRoleCreateRequest"];
        };
      };
    };
  };
  "/api/UserRoles": {
    get: {
      parameters: {
        query: {
          userId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse[]>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.UserRoleCreateRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.UserRoleCreateRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          userRoleId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse>"];
          };
        };
      };
    };
  };
  "/api/UserRoles/GetUserRoles": {
    get: {
      parameters: {
        query: {
          userId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse[]>"];
          };
        };
      };
    };
  };
  "/api/UserRoles/DeleteUserRole": {
    delete: {
      parameters: {
        query: {
          userRoleId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse>"];
          };
        };
      };
    };
  };
  "/api/Users/GetUser/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
          };
        };
      };
    };
  };
  "/api/Users/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
          };
        };
      };
    };
  };
  "/api/Users": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserWithCustomFieldRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserWithCustomFieldRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.UsersResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.UsersResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UsersRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UsersRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          UserId: string;
          CopyPermissionsUserId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Users/GetUsers": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.UsersResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.UsersResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UsersRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UsersRequest"];
        };
      };
    };
  };
  "/api/Users/GetUserList": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.UserListRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Requests.UserListRequest"];
        };
      };
    };
  };
  "/api/Users/Put": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserWithCustomFieldRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserWithCustomFieldRequest"];
        };
      };
    };
  };
  "/api/Users/LockUsers": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.LockUsesRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.LockUsesRequest"];
        };
      };
    };
  };
  "/api/Users/ResendInvite": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ResendInviteRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ResendInviteRequest"];
        };
      };
    };
  };
  "/api/Users/UnLockUsers": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.LockUsesRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.LockUsesRequest"];
        };
      };
    };
  };
  "/api/Users/CreateWithPassword": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserWithCustomFieldRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserWithCustomFieldRequest"];
        };
      };
    };
  };
  "/api/Users/Delete": {
    delete: {
      parameters: {
        query: {
          UserId: string;
          CopyPermissionsUserId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Users/RegisterByInvite": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LogonResponseModelAdapter"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LogonResponseModelAdapter"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.InvitedUserRegisterRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.InvitedUserRegisterRequest"];
        };
      };
    };
  };
  "/api/Users/ConfirmRegisterByInvite": {
    get: {
      parameters: {
        query: {
          token: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/Users/SetWorkingStatus": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SetWorkingStatusResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SetWorkingStatusResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.SetWorkingStatusRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.SetWorkingStatusRequest"];
        };
      };
    };
  };
  "/api/UsersCasesLoad/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersCasesLoadFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersCasesLoadFiltersRequest"];
        };
      };
    };
  };
  "/api/UsersCasesLoad": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersCasesLoadFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersCasesLoadFiltersRequest"];
        };
      };
    };
  };
  "/api/UsersCasesLoad/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/UsersCasesLoad/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersCasesLoadFiltersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersCasesLoadFiltersRequest"];
        };
      };
    };
  };
  "/api/UsersCasesLoad/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UsersCasesLoad/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UsersTasksLoad/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTasksLoadFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTasksLoadFilterRequest"];
        };
      };
    };
  };
  "/api/UsersTasksLoad": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTasksLoadFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTasksLoadFilterRequest"];
        };
      };
    };
  };
  "/api/UsersTasksLoad/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/UsersTasksLoad/GetSummaries": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryWithFormatResponse>>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryWithFormatResponse>>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTasksLoadFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTasksLoadFilterRequest"];
        };
      };
    };
  };
  "/api/UsersTasksLoad/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UsersTasksLoad/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UsersTimeSpent/GetReport": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.UsersTimeSpentResponse"];
            "text/json": components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.UsersTimeSpentResponse"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentFilterRequest"];
        };
      };
    };
  };
  "/api/UsersTimeSpent": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.UsersTimeSpentResponse"];
            "text/json": components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.UsersTimeSpentResponse"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentFilterRequest"];
        };
      };
    };
  };
  "/api/UsersTimeSpent/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UsersTimeSpent/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UsersTimeSpentDetails/GetData": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentDetailsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentDetailsFilterRequest"];
        };
      };
    };
  };
  "/api/UsersTimeSpentDetails": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentDetailsFilterRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentDetailsFilterRequest"];
        };
      };
    };
  };
  "/api/UsersTimeSpentDetails/GetMetadata": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>"];
          };
        };
      };
    };
  };
  "/api/UsersTimeSpentDetails/ExportToExcel": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UsersTimeSpentDetails/ExportToCsv": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            Body: string;
          };
        };
      };
    };
  };
  "/api/UserTiming/GetUserEventTimeLogs": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogsRequest"];
        };
      };
    };
  };
  "/api/UserTiming": {
    get: {
      parameters: {
        query: {
          timerId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogsRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogsRequest"];
        };
      };
    };
  };
  "/api/UserTiming/GetUserEventTimeLog": {
    get: {
      parameters: {
        query: {
          timerId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
          };
        };
      };
    };
  };
  "/api/UserTiming/Start": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.StartTimerRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.StartTimerRequest"];
        };
      };
    };
  };
  "/api/UserTiming/Stop": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>"];
          };
        };
      };
    };
  };
  "/api/UTBMSCodes/GetSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel>"];
          };
        };
      };
    };
  };
  "/api/UTBMSCodes": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.TaskCodeDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.TaskCodeDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.Criteria.TaskCodesSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.Criteria.TaskCodesSuggestRequest"];
        };
      };
    };
  };
  "/api/UTBMSCodes/SaveSettings": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel"];
        };
      };
    };
  };
  "/api/UTBMSCodes/GetTaskCodes": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.TaskCodeDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.TaskCodeDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.Criteria.TaskCodesSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.Criteria.TaskCodesSuggestRequest"];
        };
      };
    };
  };
  "/api/Version/GetVersionInfo": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Models.VersionInfo"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Models.VersionInfo"];
          };
        };
      };
    };
  };
  "/api/Version": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.Shell.Models.VersionInfo"];
            "text/json": components["schemas"]["CaseDotStar.Shell.Models.VersionInfo"];
          };
        };
      };
    };
  };
  "/api/VideoMeetings/GetSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.SettingsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.SettingsDto>"];
          };
        };
      };
    };
  };
  "/api/VideoMeetings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.SettingsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.SettingsDto>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.SettingsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.SettingsDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.VideoMeeting.Dto.SettingsDto"];
          "text/json": components["schemas"]["CaseMap.Modules.VideoMeeting.Dto.SettingsDto"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.VideoMeetingDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.VideoMeetingDto>"];
          };
        };
      };
    };
  };
  "/api/VideoMeetings/SaveSettings": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.SettingsDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.SettingsDto>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.VideoMeeting.Dto.SettingsDto"];
          "text/json": components["schemas"]["CaseMap.Modules.VideoMeeting.Dto.SettingsDto"];
        };
      };
    };
  };
  "/api/VideoMeetings/Create": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.VideoMeetingDto>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.VideoMeetingDto>"];
          };
        };
      };
    };
  };
  "/api/ViewSettings/GetSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
          };
        };
      };
    };
  };
  "/api/ViewSettings": {
    get: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
          };
        };
      };
    };
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ViewSettingUpdateRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ViewSettingUpdateRequest"];
        };
      };
    };
    delete: {
      parameters: {
        query: {
          settingsId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ViewSettings/GetSettingsById": {
    get: {
      parameters: {
        query: {
          settingsId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
          };
        };
      };
    };
  };
  "/api/ViewSettings/GetSettingsByKey": {
    get: {
      parameters: {
        query: {
          key?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
          };
        };
      };
    };
  };
  "/api/ViewSettings/SaveSettings": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ViewSettingUpdateRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ViewSettingUpdateRequest"];
        };
      };
    };
  };
  "/api/ViewSettings/SaveSettingsByKey": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ViewSettingUpdateByKeyRequest"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ViewSettingUpdateByKeyRequest"];
        };
      };
    };
  };
  "/api/ViewSettings/Delete": {
    delete: {
      parameters: {
        query: {
          settingsId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ViewSettings/DeleteByKey": {
    delete: {
      parameters: {
        query: {
          settingsKey?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/ViewSettings/GetPresetsList": {
    get: {
      parameters: {
        query: {
          settingKey?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset>"];
          };
        };
      };
    };
  };
  "/api/ViewSettings/CreateOrUpdatePreset": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset"];
          "text/json": components["schemas"]["CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset"];
        };
      };
    };
  };
  "/api/ViewSettings/DeletePreset": {
    delete: {
      parameters: {
        query: {
          presetId?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
    };
  };
  "/api/VirtualCatalog/GetContent": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.VirtualCatalogRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.VirtualCatalogRequest"];
        };
      };
    };
  };
  "/api/VirtualCatalog": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.VirtualCatalogRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.VirtualCatalogRequest"];
        };
      };
    };
  };
  "/api/VirtualCatalog/GetDestinationFoldersForMove": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Data.MoveDestinationFolderDto[]>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Data.MoveDestinationFolderDto[]>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.MoveDestinationFoldersRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.MoveDestinationFoldersRequest"];
        };
      };
    };
  };
  "/api/VirtualCatalog/RenameCatalogItem": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem"];
        };
      };
    };
  };
  "/api/VirtualCatalogActions/MoveVirtualCatalogItem": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.MoveVirtualCatalogRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.MoveVirtualCatalogRequest"];
        };
      };
    };
  };
  "/api/VirtualCatalogActions": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          FileId: string;
          ExternalStorage: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
          };
        };
      };
    };
  };
  "/api/VirtualCatalogActions/BulkDelete": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.DAL.VirtualCatalogs.VirtualCatalogItemBase"][];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.DAL.VirtualCatalogs.VirtualCatalogItemBase"][];
        };
      };
    };
  };
  "/api/VirtualCatalogActions/DeleteExternalFile": {
    delete: {
      parameters: {
        query: {
          FileId: string;
          ExternalStorage: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
          };
        };
      };
    };
  };
  "/api/VirtualCatalogActions/CreateExternalFolder": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Documents.Requests.CreateExternalFolderRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Documents.Requests.CreateExternalFolderRequest"];
        };
      };
    };
  };
  "/api/VirtualCatalogActions/Upload": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>"];
          };
        };
      };
    };
  };
  "/api/VisualBlocks/GetCustomVisualBlocks": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.VisualBlockSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.VisualBlockSuggestRequest"];
        };
      };
    };
  };
  "/api/VisualBlocks": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"];
        };
      };
    };
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.VisualBlockSuggestRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.VisualBlockSuggestRequest"];
        };
      };
    };
  };
  "/api/VisualBlocks/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.DeleteVisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.DeleteVisualBlockResponse>"];
          };
        };
      };
    };
  };
  "/api/VisualBlocks/GetEntitiesVisualBlocks": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.VisualBlocks.GetEntitiesVisualBlocks"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Interfaces.Requests.VisualBlocks.GetEntitiesVisualBlocks"];
        };
      };
    };
  };
  "/api/VisualBlocks/CreateCustomVisualBlock": {
    post: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequestBase"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequestBase"];
        };
      };
    };
  };
  "/api/VisualBlocks/UpdateCustomVisualBlock": {
    put: {
      parameters: {
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"];
          "text/json": components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"];
        };
      };
    };
  };
  "/api/VisualBlocks/DeleteCustomVisualBlock/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.DeleteVisualBlockResponse>"];
            "text/json": components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.DeleteVisualBlockResponse>"];
          };
        };
      };
    };
  };
  "/wopi/files/{fileName}": {
    get: {
      parameters: {
        path: {
          fileName: string;
        };
        query: {
          access_token?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CaseDotStar.FileManager.DAL.WopiFileInfo"];
            "text/json": components["schemas"]["CaseDotStar.FileManager.DAL.WopiFileInfo"];
          };
        };
      };
    };
  };
  "/wopi/files/{fileName}/contents": {
    get: {
      parameters: {
        path: {
          fileName: string;
        };
        query: {
          access_token?: string;
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/wopi/files/{fileId}": {
    get: {
      parameters: {
        path: {
          fileId: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          fileId: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
  "/api/wopi/files/{fileId}/contents": {
    get: {
      parameters: {
        path: {
          fileId: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          fileId: string;
        };
        query: {
          "api-version"?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    "CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ResetPasswordViewModel": {
      Key: string | null;
      NewPassword: string | null;
      ConfirmPassword?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType":
      | "General"
      | "Network"
      | "Database"
      | "FullText"
      | "Security"
      | "Subscription"
      | "CheckUnique"
      | "ConditionFailed"
      | "VisualBlockValidation"
      | "Warning";
    "CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LogonResponseModel": {
      ReturnUrl?: string | null;
      Succeeded?: boolean;
      Errors?: string[] | null;
      ErrorHeader?: string | null;
      Error?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Is2FAActive?: boolean;
      IsPhoneConfirmed?: boolean;
      Phone?: string | null;
      NextAttemptTime?: string | null;
      IsUserError?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Request.GenerateAccessTokenRequest": {
      UserId: string | null;
      AuthToken: string | null;
    };
    "Microsoft.AspNetCore.Mvc.IActionResult": { [key: string]: any };
    "System.Threading.Tasks.TaskStatus":
      | "Created"
      | "WaitingForActivation"
      | "WaitingToRun"
      | "Running"
      | "WaitingForChildrenToComplete"
      | "RanToCompletion"
      | "Canceled"
      | "Faulted";
    "System.Threading.Tasks.TaskCreationOptions":
      | "None"
      | "PreferFairness"
      | "LongRunning"
      | "AttachedToParent"
      | "DenyChildAttach"
      | "HideScheduler"
      | "RunContinuationsAsynchronously";
    "System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>": {
      Result?: components["schemas"]["Microsoft.AspNetCore.Mvc.IActionResult"];
      Id?: number;
      Exception?: string | null;
      Status?: components["schemas"]["System.Threading.Tasks.TaskStatus"];
      IsCanceled?: boolean;
      IsCompleted?: boolean;
      IsCompletedSuccessfully?: boolean;
      CreationOptions?: components["schemas"]["System.Threading.Tasks.TaskCreationOptions"];
      AsyncState?: { [key: string]: any } | null;
      IsFaulted?: boolean;
    };
    "CaseMap.Modules.Timing.App.Accounts.CurrencyDto": {
      Id?: string;
      Name?: string | null;
      Symbol?: string | null;
      LetterCode?: string | null;
      IsCustom?: boolean | null;
    };
    "CaseMap.Modules.Timing.App.AccountTypes.AccountTypeDto": {
      Id?: string | null;
      Name?: string | null;
      SysName?: string | null;
    };
    "CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto": {
      Id?: string;
      Name?: string | null;
      Institution?: string | null;
      Swift?: string | null;
      Number?: string | null;
      Currency?: components["schemas"]["CaseMap.Modules.Timing.App.Accounts.CurrencyDto"];
      AccountType?: components["schemas"]["CaseMap.Modules.Timing.App.AccountTypes.AccountTypeDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType":
      | "TrustAccountInsufficientFunds"
      | "ProjectSettingsClientNotDeletable"
      | "Success"
      | "OperationIsFullСomplete"
      | "OperationIsNotFullСomplete";
    "CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError": {
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      ErrorMessage?: string | null;
      FullInfo?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError": {
      Message?: string | null;
      FieldName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning": {
      Message?: string | null;
      FieldName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Accounts.Commands.AccountsListRequest": {
      AccountTypeSysName?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountWithBalanceDto": {
      Id?: string;
      Name?: string | null;
      Institution?: string | null;
      Swift?: string | null;
      Number?: string | null;
      Currency?: components["schemas"]["CaseMap.Modules.Timing.App.Accounts.CurrencyDto"];
      AccountType?: components["schemas"]["CaseMap.Modules.Timing.App.AccountTypes.AccountTypeDto"];
      Balance?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountWithBalanceDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountWithBalanceDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.IdNameObject": {
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Timing.App.Accounts.Commands.AccountUpdate": {
      Id: string | null;
      Name: string | null;
      Institution?: string | null;
      Swift?: string | null;
      Number?: string | null;
      Currency: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      AccountType: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseBaseModel": {
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Accounts.Commands.AccountsSuggestRequest": {
      AccountTypeSysName?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.App.Accounts.AccountSuggestDto": {
      Id?: string;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.AccountSuggestDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Accounts.AccountSuggestDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Accounts.Commands.AccountCreate": {
      Name: string | null;
      Institution?: string | null;
      Swift?: string | null;
      Number?: string | null;
      Currency: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      AccountType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      OpeningBalance?: number | null;
    };
    "CaseMap.Modules.Timing.App.Accounts.Commands.AccountBatchSaveItem": {
      Id?: string | null;
      Name: string | null;
      Institution?: string | null;
      Swift?: string | null;
      Number?: string | null;
      Currency: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Timing.App.Accounts.Commands.AccountBatchSave": {
      Accounts:
        | components["schemas"]["CaseMap.Modules.Timing.App.Accounts.Commands.AccountBatchSaveItem"][]
        | null;
      AccountType: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Accounts.Commands.AccountClientsRequest": {
      AccountId: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto": {
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountClientDto": {
      BillableClient?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      LastActivityDate?: string;
      TotalFundsIn?: number;
      TotalFundsOut?: number;
      Balance?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountClientDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountClientDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Accounts.Commands.ClientsAccountBalanceRequest": {
      ClientId: string | null;
      HideWithoutBalance?: boolean;
      Name?: string | null;
    };
    "CaseMap.Modules.Timing.App.Transactions.Models.AccountWithBalance": {
      Balance?: number;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.AccountWithBalance>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Models.AccountWithBalance"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.Module.Models.PackageModel": {
      Version?: string | null;
      Active?: boolean;
      Id?: string | null;
      Title?: string | null;
      Description?: string | null;
      IsSystem?: boolean;
      Order?: number;
      LastUpdatingDate?: string;
      AuthorizeUrl?: string | null;
      HasSettings?: boolean;
      IsSetup?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.Module.Models.PackageModel[]>": {
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.PackageModel"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Request.PagedSuggestRequest": {
      Page?: number;
      PageSize?: number;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag": {
      Id?: string;
      Name?: string | null;
      SystemName?: string | null;
      EventTypeId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<bool>": {
      Result?: boolean;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.AirCall.Commands.AttachUser": {
      Email: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Models.UserApplication": {
      Id?: string | null;
      Title?: string | null;
      Description?: string | null;
      Active?: boolean;
      CallUrlTemplate?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplication>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.UserApplication"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.AirCall.Models.CallDirection": "inbound" | "outbound";
    "CaseMap.Modules.AirCall.Models.User": {
      id?: number;
      email?: string | null;
    };
    "CaseMap.Modules.AirCall.Models.Contact": {
      id?: number;
      first_name?: string | null;
      last_name?: string | null;
      company_name?: string | null;
    };
    "CaseMap.Modules.AirCall.Models.CallStatus":
      | "initial"
      | "answered"
      | "done";
    "CaseMap.Modules.AirCall.Models.Call": {
      id?: number;
      direction?: components["schemas"]["CaseMap.Modules.AirCall.Models.CallDirection"];
      missed_call_reason?: string | null;
      started_at?: string;
      answered_at?: string | null;
      duration?: number;
      raw_digits?: string | null;
      user?: components["schemas"]["CaseMap.Modules.AirCall.Models.User"];
      contact?: components["schemas"]["CaseMap.Modules.AirCall.Models.Contact"];
      recording?: string | null;
      status?: components["schemas"]["CaseMap.Modules.AirCall.Models.CallStatus"];
    };
    "CaseMap.Modules.AirCall.Models.WebhookPayload<CaseMap.Modules.AirCall.Models.Call>": {
      event?: string | null;
      token?: string | null;
      data?: components["schemas"]["CaseMap.Modules.AirCall.Models.Call"];
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.CompareTypeSummary": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      IsDefault?: boolean;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.FieldTypeWithCompareTypes": {
      Type?: string | null;
      CompareTypes?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.CompareTypeSummary"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.FieldTypeWithCompareTypes>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.FieldTypeWithCompareTypes"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Common.Responses.DataFields.ReportFieldType":
      | "SysReportField"
      | "ProjectCustomField"
      | "DocumentCustomField"
      | "ParticipantCustomField"
      | "EventCustomField"
      | "TaskCustomField"
      | "CoreProjectField"
      | "ClientRequestField"
      | "RegisterObjectField"
      | "UserCustomField"
      | "ClientCustomField";
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary": {
      DictionarySysName?: string | null;
      FieldFormatSysName?: string | null;
      DictionaryLevel?: number;
      Grouped?: boolean;
      IsMultiSelection?: boolean;
      BlockId?: string | null;
      Name?: string | null;
      Type?: string | null;
      SysName?: string | null;
      RootViewName?: string | null;
      HierarchyNames?: string[] | null;
      Childrens?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary"][]
        | null;
      Id?: string | null;
      ReportFieldType: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
      TempId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.StringFilterMatch": {
      StartIndex?: number;
      Length?: number;
    };
    "CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary": {
      IsTagValueAvailable?: boolean;
      Name?: string | null;
      Type?: string | null;
      SysName?: string | null;
      RootViewName?: string | null;
      HierarchyNames?: string[] | null;
      Childrens?:
        | components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary"][]
        | null;
      ParentId?: string | null;
      IsLeaf?: boolean;
      Opened?: boolean;
      NameFilterMatch?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.StringFilterMatch"];
      Page?: number;
      NextPageExists?: boolean;
      ParentTempId?: string | null;
      Id?: string | null;
      ReportFieldType: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
      TempId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptFilterValuesRequest": {
      RootViewSysName: string | null;
      ReportFieldId: string | null;
      Name?: string | null;
      IgnoreValues?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<string>": {
      NextPageExists?: boolean;
      Result?: string[] | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.GetManualScripts": {
      ProjectId?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary": {
      Id: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Criteria.FindRecipientFieldSuggestByFilter": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName": {
      SysName?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Filters.AutomationScriptRestrictionFieldValueRequest": {
      ReportFieldId: string | null;
      Name?: string | null;
      IgnoreValues?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Scheduler.Interfaces.Enums.AutomationScriptEntityType":
      | "Folder"
      | "AutomationScript";
    "CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary": {
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      IsActive?: boolean | null;
      LastChangeDate?: string | null;
      LastEditor?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Folder?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      EntityType?: components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Enums.AutomationScriptEntityType"];
      Parents?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Requests.GetAutomationScriptsRequest": {
      TypeIds?: string[] | null;
      IsActive?: boolean | null;
      StartLastChangeDate?: string | null;
      EndLastChangeDate?: string | null;
      LastEditorIds?: string[] | null;
      IgnoreIds?: string[] | null;
      FolderId?: string | null;
      EntityType?: components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Enums.AutomationScriptEntityType"];
      Page?: number;
      PageSize?: number;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Models.Responses.AutomationScriptSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary": {
      SysName?: string | null;
      Id: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Requests.AutomationScriptUpdateRequest": {
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      IsActive?: boolean | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      FolderId?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.RunManualScript": {
      AutomationScriptId: string | null;
      ProjectId: string | null;
      NotificationId?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.RunManualScriptBulkProject": {
      AutomationScriptId: string | null;
      NotificationId?: string | null;
      ProjectIds: string[] | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.CloneAutomationScript": {
      Id: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject[]>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Interfaces.Requests.CreateAutomationScriptFolder": {
      Name: string | null;
      FolderId?: string | null;
    };
    "CaseMap.Modules.Scheduler.Interfaces.Requests.GetDestinationFoldersForMove": {
      ExcludeFolders?: string[] | null;
      FolderId?: string | null;
    };
    "CaseMap.Modules.Scheduler.Interfaces.Responses.DestinationFolderDto": {
      HasChildren?: boolean;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Interfaces.Responses.DestinationFolderDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Responses.DestinationFolderDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Interfaces.Requests.MovedAutomationScriptItem": {
      Id: string | null;
      EntityType: components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Enums.AutomationScriptEntityType"];
    };
    "CaseMap.Modules.Scheduler.Interfaces.Requests.MoveAutomationScriptItems": {
      FolderId?: string | null;
      MovedItems:
        | components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Requests.MovedAutomationScriptItem"][]
        | null;
    };
    "CaseMap.Modules.Scheduler.Interfaces.Requests.RenameAutomationScriptFolder": {
      Id: string | null;
      Name: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Scheduler.AutomationBlockType":
      | "Empty"
      | "WaitAction"
      | "Notify"
      | "Event"
      | "Task"
      | "Fill"
      | "Script"
      | "BlockIf"
      | "Conditions"
      | "GoTo"
      | "Insert"
      | "RestrictionConditions"
      | "StackPush"
      | "StackPop"
      | "Default"
      | "FinalChainOperator"
      | "StopScenario";
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.CaseProEventSummary": {
      Id: string | null;
      Name?: string | null;
      SysName?: string | null;
    };
    "CaseMap.Modules.Projects.Models.Fields.FieldItem": {
      Id?: string | null;
      ReportFieldType: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
      TempId?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TriggerFieldSummary": {
      Id: string | null;
      EntityId?: string | null;
      OperationTypeId?: string | null;
      Name?: string | null;
      EntityOrOperationSysName?: string | null;
      HierarchyNames?: string[] | null;
      RootViewName?: string | null;
      Field?: components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FieldItem"];
      FieldSysName?: string | null;
      Childrens?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TriggerFieldSummary"][]
        | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Enums.FilterValueType":
      | "Manual"
      | "ValueFromField";
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ArrayFilterValueSummary": {
      ValueType: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Enums.FilterValueType"];
      TagValue?: string | null;
      Value?: string[] | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.SingleFilterValueSummary": {
      ValueType: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Enums.FilterValueType"];
      TagValue?: string | null;
      Value?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Scheduler.CompareTypeEnum":
      | "IsEmpty"
      | "IsNotEmpty"
      | "TextContains"
      | "TextDoesNotContains"
      | "IncludedInPeriod"
      | "IncludedInInterval"
      | "IsEqual"
      | "IsNotEqual";
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ConditionSummaryExtend": {
      Id?: string | null;
      ReportField: components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary"];
      SearchValues?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ArrayFilterValueSummary"];
      BeginValue?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.SingleFilterValueSummary"];
      EndValue?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.SingleFilterValueSummary"];
      CompareTypeSysName?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Scheduler.CompareTypeEnum"];
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.WaitActionSummary": {
      Event: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.CaseProEventSummary"];
      Field: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TriggerFieldSummary"];
      Conditions:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ConditionSummaryExtend"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName": {
      SysName?: string | null;
      Id: string;
      Name?: string | null;
    };
    "CaseMap.Modules.Projects.Models.Fields.FieldSummary": {
      Name?: string | null;
      Type?: string | null;
      SysName?: string | null;
      RootViewName?: string | null;
      HierarchyNames?: string[] | null;
      Childrens?:
        | components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FieldSummary"][]
        | null;
      ParentId?: string | null;
      IsLeaf?: boolean;
      Opened?: boolean;
      NameFilterMatch?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.StringFilterMatch"];
      Page?: number;
      NextPageExists?: boolean;
      ParentTempId?: string | null;
      Id?: string | null;
      ReportFieldType: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
      TempId?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.SourceFieldSummary": {
      BlockId?: string | null;
      Field: components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FieldSummary"];
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DateSettingSummary": {
      TimeSetting?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      Delay?: number;
      DelayOptions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
      SourceField?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.SourceFieldSummary"];
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.NotificationCreationSummary": {
      Text: string | null;
      RecipientTypeSysName: string | null;
      CustomRecipients?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"][]
        | null;
      RecipientFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      Periodicity: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      Repeats?: number | null;
      DaysOrMonths?: number | null;
      PeriodTime?: number | null;
      CreationDateSetting?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DateSettingSummary"];
    };
    "CaseDotStar.ServicePackages.Common.RequiredIdNameObject": {
      Id: string;
      Name?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DateSettingWithFixedSummary": {
      FixedDate?: string | null;
      TimeSetting?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      Delay?: number;
      DelayOptions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
      SourceField?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.SourceFieldSummary"];
    };
    "CaseMap.Modules.Events.Interfaces.AttendeeSummary": {
      Id?: string | null;
      EntityId?: string | null;
      EntityName?: string | null;
      Name?: string | null;
      Email?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.EventCreationSummary": {
      Name: string | null;
      Description?: string | null;
      Place?: string | null;
      EventType?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Duration: number | null;
      CreationDateSetting: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DateSettingSummary"];
      BeginDateSetting: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DateSettingWithFixedSummary"];
      NotificationTypes:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"][]
        | null;
      Attendees?:
        | components["schemas"]["CaseMap.Modules.Events.Interfaces.AttendeeSummary"][]
        | null;
      AttendeeType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      Files:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"][]
        | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TaskCreationSummary": {
      Name: string | null;
      Description?: string | null;
      Priority: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Responsibles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"][]
        | null;
      ResponsibleUsers?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"][]
        | null;
      Files:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      CreationDateSetting: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DateSettingSummary"];
      DueDateSetting: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DateSettingWithFixedSummary"];
      NotificationTypes:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"][]
        | null;
      ResponsibleType: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ProjectFillingSummary": {
      DestinationField: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.DestinationFieldSummary"];
      MethodOfFilling: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      SourceValue?: { [key: string]: any } | null;
      SourceObject?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.SourceFieldSummary"];
      Delay?: number;
      DelayOptions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
      FillingDateYearOffset?: number;
      FillingDateMonthOffset?: number;
      FillingDateDayOffset?: number;
      DelayDate?: number;
      DelayDateOption?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ScriptBlockSummary": {
      Body?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.BlockIfSummary": {
      Conditions:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ConditionSummaryExtend"][]
        | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.GoToSummary": {
      DestinationBlockId: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.InsertSummary": {
      AutomationScript: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationBlockSummary": {
      Id: string | null;
      Description?: string | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Scheduler.AutomationBlockType"];
      Childs?: string[] | null;
      WaitAction?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.WaitActionSummary"];
      NotificationCreation?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.NotificationCreationSummary"];
      EventCreation?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.EventCreationSummary"];
      TaskCreation?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TaskCreationSummary"];
      ProjectFilling?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ProjectFillingSummary"];
      Script?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ScriptBlockSummary"];
      BlockIf?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.BlockIfSummary"];
      GoTo?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.GoToSummary"];
      Insert?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.InsertSummary"];
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RecurringRuleSummary": {
      Id?: string | null;
      IsActive: boolean | null;
      RepeatMode: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      CustomRepeatMode?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      RepeatInterval: number | null;
      DayOfWeek?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      DayOfMonth?: number | null;
      StartDate?: string | null;
      RunTime: string;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ScriptSummary": {
      Body?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ConditionSummary": {
      Id?: string | null;
      ReportField: components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary"];
      SearchValues?: string[] | null;
      BeginValue?: string | null;
      EndValue?: string | null;
    };
    "CaseMap.Modules.Scheduler.Interfaces.Responses.ConditionSummaryWithEmpty": {
      IsEmpty?: boolean | null;
      Id?: string | null;
      ReportField: components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary"];
      SearchValues?: string[] | null;
      BeginValue?: string | null;
      EndValue?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme": {
      Folder?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      IsActive: boolean | null;
      Scheme?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationBlockSummary"][]
        | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      RecurringRules?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RecurringRuleSummary"][]
        | null;
      Script?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ScriptSummary"];
      Conditions:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ConditionSummary"][]
        | null;
      RestrictionConditions?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Responses.ConditionSummaryWithEmpty"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme>": {
      Result?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationScriptWithScheme"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.CreateOrUpdateAutomationScript": {
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      IsActive: boolean | null;
      Scheme?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.AutomationBlockSummary"][]
        | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      RecurringRules?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RecurringRuleSummary"][]
        | null;
      Script?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ScriptSummary"];
      Conditions:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.ConditionSummary"][]
        | null;
      RestrictionConditions?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Interfaces.Responses.ConditionSummaryWithEmpty"][]
        | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Command.TestScriptCommand": {
      Body?: string | null;
      NotificationId?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TestScriptResult": {
      IsSuccess?: boolean | null;
      Error?: string | null;
      Log?: string[] | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TestScriptResult>": {
      Result?: components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TestScriptResult"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RootSourceFields": {
      SysName?: string | null;
      Fields?:
        | components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FieldSummary"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RootSourceFields>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.RootSourceFields"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Interfaces.Requests.AutomationScriptsSuggestRequest": {
      TypeIds?: string[] | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TriggerFieldSummary>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Scheduler.App.AutomationScriptScheme.Model.TriggerFieldSummary"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Timing.TimeFormatEnum":
      | "InMinutes"
      | "InHours"
      | "InHoursWithZero";
    "CaseDotStar.ServicePackages.Common.TimeSummary": {
      InMinutes?: number | null;
      InHours?: number | null;
      Format: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Timing.TimeFormatEnum"];
    };
    "CaseMap.Modules.Timing.MVC.Models.TimeLogUserSummary": {
      Id?: string;
      LastName?: string | null;
      FirstName?: string | null;
      Initials?: string | null;
      Post?: string | null;
      Email?: string | null;
      Name?: string | null;
      DisplayName?: string | null;
      FileAvatarId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum":
      | "None"
      | "Read"
      | "Insert"
      | "Update"
      | "Delete"
      | "Admin"
      | "Comment"
      | "UpdateOwn"
      | "UpdateAll"
      | "ReadOwn"
      | "ReadAll"
      | "UserReadOwn"
      | "UserReadAll"
      | "UserUpdateOwn"
      | "UserUpdateAll"
      | "UserDeleteOwn"
      | "UserDeleteAll"
      | "DeleteOwn"
      | "DeleteAll"
      | "CaseChangeStage";
    "CaseMap.Modules.Timing.MVC.Models.RateSummary": {
      CalculationType: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      Rate?: number | null;
      Amount?: number | null;
    };
    "CaseMap.Modules.Timing.MVC.Controllers.Bills.BilledTimes.CalculateTimeLogSum": {
      Id?: string;
      LogType?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      LogDate?: string | null;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      EntityId?: string | null;
      EntityName?: string | null;
      Tag?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag"];
      User?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogUserSummary"];
      IsActive?: boolean;
      StartDateTime?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      Description?: string | null;
      UTBMSTaskCode?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IsBillable: boolean;
      Rate?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.RateSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Nullable<decimal>>": {
      Result?: number | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimesRequest": {
      BillId: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Models.ShortUser": {
      Id?: string;
      DisplayName?: string | null;
      Email?: string | null;
      Initials?: string | null;
      FileAvatarId?: string | null;
      Post?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse": {
      BillId?: string;
      UnbilledTimeId?: string;
      Discount?: number | null;
      DiscountPercentage?: boolean;
      HasTax?: boolean;
      HasSecondaryTax?: boolean;
      Amount?: number | null;
      Id?: string;
      Date?: string;
      Description?: string | null;
      EntityTimeLogEntityId?: string | null;
      EntitySysName?: string | null;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      Quantity?: number | null;
      Rate?: number | null;
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      Total?: number;
      RateCalculationType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ExpenseId?: string | null;
      ProjectId?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.BilledTimeUpdateRequest": {
      Id: string | null;
      Rate?: number | null;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      Discount?: number | null;
      DiscountPercentage: boolean | null;
      HasTax: boolean | null;
      RateCalculationType?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      HasSecondaryTax: boolean | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.BilledTimeResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsUpdateStatusRequest": {
      BillIds?: string[] | null;
      BillStatusSysName: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillCompositionItem":
      | "BillableHours"
      | "Expenses";
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillCompositionType":
      | "CreateByCases"
      | "CreateByClients";
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsBatchCreateRequest": {
      ClientIds?: string[] | null;
      CompositionItems?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillCompositionItem"];
      StartDate?: string | null;
      EndDate?: string | null;
      CompositionType: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillCompositionType"];
      ProjectTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsDeleteRequest": {
      BillIds?: string[] | null;
    };
    "CaseMap.Modules.Timing.DAL.Reports.BillPrintParams": {
      BillId: string | null;
      TemplateId?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillsBatchPrintRequest": {
      BillsToPrint?:
        | components["schemas"]["CaseMap.Modules.Timing.DAL.Reports.BillPrintParams"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<string[]>": {
      Result?: string[] | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Administration.DAL.Entitys.Membership": {
      Id?: string;
      ParentGroupId?: string;
      ParentGroup?: components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.Group"];
      ChildUserId?: string;
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      Priority?: number;
    };
    "CaseDotStar.Shell.Administration.DAL.Entitys.Group": {
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      IsShow?: boolean;
      CreateDate?: string;
      LastChangeDate?: string;
      IsDeleted?: boolean;
      Subject?:
        | components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.Subject"][]
        | null;
      MembershipAsParent?:
        | components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.Membership"][]
        | null;
    };
    "CaseDotStar.Shell.Administration.DAL.Entitys.Subject": {
      Id?: string;
      UserId?: string | null;
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      GroupId?: string | null;
      Group?: components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.Group"];
    };
    "CaseDotStar.Shell.Administration.DAL.Entitys.UserLogin": {
      UserId?: string;
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      LoginProvider?: string | null;
      ProviderKey?: string | null;
    };
    "CaseDotStar.Shell.Administration.DAL.Entitys.Branch": {
      Name?: string | null;
      IsCustom?: boolean | null;
      IsDeleted?: boolean;
      Id?: string;
      CreationDate?: string | null;
      AuthorId?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      LastChangeDate?: string | null;
      LastModifedByUserId?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
    };
    "CaseDotStar.Shell.Administration.DAL.Entitys.TimeZone": {
      Id?: string;
      Order?: number;
      Name?: string | null;
      WindowsZoneId?: string | null;
      IANAZoneId?: string | null;
      IsDeleted?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.LEDES.LEDESTimekeeperClass": {
      Id?: string;
      Name: string | null;
      Code: string | null;
    };
    "CaseDotStar.Shell.Administration.DAL.Entitys.UserProfile": {
      Id?: string;
      CompanyName?: string | null;
      CompanyUrl?: string | null;
      LastName?: string | null;
      FirstName?: string | null;
      MiddleName?: string | null;
      Initials?: string | null;
      DisplayName?: string | null;
      Phone?: string | null;
      PhoneCode?: string | null;
      Post?: string | null;
      BranchId?: string | null;
      Branch?: components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.Branch"];
      FileAvatarId?: string | null;
      TimeZoneId?: string;
      TimeZone?: components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.TimeZone"];
      LEDESTimekeeperId?: string | null;
      LEDESTimekeeperClassId?: string | null;
      LEDESTimekeeperClass?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.LEDES.LEDESTimekeeperClass"];
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.UserPasswordReset": {
      Id?: string;
      UserId?: string;
      AccessHash?: string | null;
      ExpireDate?: string;
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Users.UserExternalCredential": {
      Id?: string;
      UserId: string;
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      Source?: string | null;
      Login?: string | null;
      Password?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Users.WorkingStatus": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Tasks.TotalUserTask": {
      UserId?: string;
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      TaskCount?: number;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.User": {
      Id?: string;
      Name?: string | null;
      Email?: string | null;
      CreateDate?: string;
      LastChangeDate?: string;
      IsDeleted?: boolean;
      IsLocked?: boolean;
      DeleteDate?: string | null;
      IsValidated?: boolean;
      Subject?:
        | components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.Subject"][]
        | null;
      UserLogins?:
        | components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.UserLogin"][]
        | null;
      UserProfile?: components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.UserProfile"];
      Memberships?:
        | components["schemas"]["CaseDotStar.Shell.Administration.DAL.Entitys.Membership"][]
        | null;
      UserPasswordRepairs?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.UserPasswordReset"][]
        | null;
      UserName?: string | null;
      IsSystem?: boolean;
      IsClient?: boolean;
      ExternalCredentials?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Users.UserExternalCredential"][]
        | null;
      WorkingStatusId?: string;
      WorkingStatus?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Users.WorkingStatus"];
      TotalTasks?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Tasks.TotalUserTask"];
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Currency": {
      Symbol?: string | null;
      LetterCode?: string | null;
      Name?: string | null;
      IsCustom?: boolean | null;
      IsDeleted?: boolean;
      Id?: string;
      CreationDate?: string | null;
      AuthorId?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      LastChangeDate?: string | null;
      LastModifedByUserId?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
    };
    "CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse": {
      Id?: string;
      ProjectType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      BillingCode?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      UserOrGroup?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      CalculationType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Rate?: number;
      Currency?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Currency"];
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BillingSettings.TimeSummaryRestricted": {
      InMinutes?: number | null;
      InHours?: number | null;
      Format: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Timing.TimeFormatEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto": {
      SysName?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BillingSettings.InterestRateDto": {
      InterestType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
      AnnualRate?: number | null;
      ChargePeriod?: number | null;
      Enabled?: boolean;
    };
    "CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse": {
      Id?: string;
      SysName?: string | null;
      PrimaryTax?: number | null;
      SecondaryTax?: number | null;
      SecondaryTaxMode?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      InvoiceTimeRounding?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.TimeSummaryRestricted"];
      TimeFormat?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Timing.TimeFormatEnum"];
      BillingRules?:
        | components["schemas"]["CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse"][]
        | null;
      InterestRate?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.InterestRateDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.Interfaces.Models.BillingRuleUpdateRequest": {
      Id?: string | null;
      ProjectType?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      BillingCode?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      UserOrGroup?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      CalculationType: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      Rate: number | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BillingSettings.BillingSettingUpdateRequest": {
      Id: string | null;
      SysName: string | null;
      PrimaryTax?: number | null;
      SecondaryTax?: number | null;
      SecondaryTaxMode: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      InvoiceTimeRounding?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.TimeSummaryRestricted"];
      BillingRules?:
        | components["schemas"]["CaseMap.Modules.Timing.Interfaces.Models.BillingRuleUpdateRequest"][]
        | null;
      TimeFormat: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Timing.TimeFormatEnum"];
      InterestRate?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.InterestRateDto"];
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.BillGroupResponse": {
      BillStatus?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Count?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillGroupResponse[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillGroupResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.Dictionary<string, string[]>>": {
      Result?: { [key: string]: string[] } | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.BillCreateRequest": {
      ProjectId: string | null;
      StartDate?: string | null;
      EndDate?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.ProjectModel": {
      ProjectGroupId?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Response.BilledTimesOrder": {
      IsAsc?: boolean;
      Column?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse": {
      Id?: string;
      Number?: string | null;
      DueDate?: string | null;
      Discount?: number | null;
      DiscountPercentage?: boolean;
      Tax?: number | null;
      Project?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.ProjectModel"];
      CreationDate?: string;
      BillStatus?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      AmountOfExpenses?: number;
      TotalDiscount?: number;
      TotalTax?: number;
      Total?: number;
      DocumentTemplate?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      SecondaryTax?: number | null;
      SecondaryTaxMode?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      IsRetainerBill?: boolean;
      Description?: string | null;
      StartDate?: string | null;
      EndDate?: string | null;
      BilledTimesOrder?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Response.BilledTimesOrder"];
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      InterestRate?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.InterestRateDto"];
      InterestsTotal?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Request.PagedRequest": {
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.BillableProjectResponse": {
      Project?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.ProjectModel"];
      Amount?: number;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.BillableClientResponse": {
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Projects?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillableProjectResponse"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.BillableClientResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.BillableClientResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.Consts.BillGroupingEnum":
      | "BillableClient"
      | "Assignee"
      | "PracticeArea";
    "CaseMap.Modules.Timing.MVC.Models.Bills.BillsRequest": {
      GroupBy: components["schemas"]["CaseMap.Modules.Timing.Consts.BillGroupingEnum"];
      BillStatuses?: string[] | null;
      MinCreationDate?: string | null;
      MaxCreationDate?: string | null;
      MinDueDate?: string | null;
      MaxDueDate?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillListItemResponse": {
      Id?: string;
      Number?: string | null;
      DueIn?: number | null;
      CreationDate?: string;
      Project?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.ProjectModel"];
      Amount?: number;
      PaidAmount?: number | null;
      Status?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      ProjectCount?: number | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientBillsResponse": {
      GroupEntity?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Bills?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillListItemResponse"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientBillsResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientBillsResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillCasesRequest": {
      BillId: string | null;
      Name?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.DAL.Data.DTO.ProjectDto": {
      ProjectGroupId?: string | null;
      ResponsibleId?: string | null;
      ProjectTypeId?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.DAL.Data.DTO.ProjectDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.DAL.Data.DTO.ProjectDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.BillUpdateRequest": {
      Id: string | null;
      Number: string | null;
      DueDate?: string | null;
      Discount?: number | null;
      DiscountPercentage: boolean | null;
      Tax?: number | null;
      SecondaryTax?: number | null;
      SecondaryTaxMode: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Description?: string | null;
      BilledTimesOrder?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Response.BilledTimesOrder"];
      InterestRate?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BillingSettings.InterestRateDto"];
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.RebuildRequest": {
      BillId: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillStatusUpdateRequest": {
      Id: string | null;
      BillStatusSysName: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillTotalResponse": {
      AmountOfExpenses?: number;
      TotalDiscount?: number;
      TotalTax?: number;
      Total?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillTotalResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillTotalResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillTemplateUpdateRequest": {
      BillId: string | null;
      DocumentTemplateId: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.GetBillsByCaseRequest": {
      ProjectId: string | null;
      BillStatuses?: string[] | null;
      MinCreationDate?: string | null;
      MaxCreationDate?: string | null;
      MinDueDate?: string | null;
      MaxDueDate?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillListItemResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillListItemResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.BillEmailTemplateGenerationRequest": {
      BillId?: string;
      TemplateId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.FileSummary": {
      Id?: string;
      StorageFileId?: string | null;
      Name?: string | null;
      FileSize?: number;
      Extension?: string | null;
    };
    "CaseMap.Modules.Email.Requests.V43.SendEmailRequest": {
      To: string[] | null;
      Cc?: string[] | null;
      Bcc?: string[] | null;
      Subject?: string | null;
      Text?: string | null;
      MimeType: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ReplyToMessageId?: string | null;
      Attachments?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.FileSummary"][]
        | null;
      TimeLogs?: string[] | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Requests.V43.SendEmailRequest>": {
      Result?: components["schemas"]["CaseMap.Modules.Email.Requests.V43.SendEmailRequest"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.ClientsBillsRequest": {
      BillIds: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.IdNameNameEnObject": {
      NameEn?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Participants.Interfaces.Models.ContactDetail": {
      Email?: string | null;
      Phone?: string | null;
      RawPhone?: string | null;
      Site?: string | null;
      Address?: string | null;
      IsDeleted?: boolean;
      Id?: string;
      CreationDate?: string | null;
      AuthorId?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      LastChangeDate?: string | null;
      LastModifedByUserId?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
    };
    "CaseMap.Modules.Participants.Interfaces.Models.ParticipantCompany": {
      Id?: string | null;
      Organization?: string | null;
      Name?: string | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"];
    };
    "CaseMap.Modules.Participants.DAL.Data.ParticipantProjectSummary": {
      Id?: string;
      Name?: string | null;
      ProjectId?: string;
      RoleInProject?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Participants.Models.ParticipantSummary": {
      Id?: string;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      CreationDate?: string;
      FirstName?: string | null;
      LastName?: string | null;
      MiddleName?: string | null;
      Organization?: string | null;
      DisplayName?: string | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"];
      LegalForm?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ContactDetail?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ContactDetail"];
      Country?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"];
      DateOfBirth?: string | null;
      RegistrationNumber?: string | null;
      INN?: string | null;
      OGRN?: string | null;
      OKPO?: string | null;
      KPP?: string | null;
      Company?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ParticipantCompany"];
      JobTitle?: string | null;
      Projects?:
        | components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantProjectSummary"][]
        | null;
      LEDESClientId?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsBillsResponse": {
      Participant?: components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantSummary"];
      ContactDetail?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ContactDetail"];
      CountBills?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsBillsResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsBillsResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.ClientsSendEmailsRequest": {
      Suggest: string | null;
      Body: string | null;
      BillIds: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsSendEmailsResponse": {
      IsSuccess?: boolean;
      Status?: string | null;
      Messages?: string[] | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsSendEmailsResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Response.ClientsSendEmailsResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.RetainerBillCreateRequest": {
      Client: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Amount: number | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Request.SummaryRequest": {
      ProjectId?: string | null;
      BillStatuses?: string[] | null;
      MinCreationDate?: string | null;
      MaxCreationDate?: string | null;
      MinDueDate?: string | null;
      MaxDueDate?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillsSummary": {
      Total?: number;
      AwaitingPayment?: number;
      Overdue?: number;
      PartiallyPaid?: number;
      Paid?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillsSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Bills.Response.BillsSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Common.Responses.IdNameObjectSummary": {
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Common.Responses.SysIdNameObjectSummary": {
      SysName?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.SysIdNameObjectSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.SysIdNameObjectSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata": {
      SystemName?: string | null;
      DisplayName?: string | null;
      ApiUrl?: string | null;
      ModuleName?: string | null;
      BootstrapPath?: string | null;
      Grouped?: boolean | null;
      ViewName?: string | null;
      SchemaName?: string | null;
      ColumnName?: string | null;
      IsCustom?: boolean;
      IsCreatedByUser?: boolean;
      IsHidden?: boolean;
      Depth?: number;
      IsDeleted?: boolean;
      Id?: string;
      CreationDate?: string | null;
      AuthorId?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      LastChangeDate?: string | null;
      LastModifedByUserId?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.DictionaryProjectFieldFormat": {
      Dictionary?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata"];
      ObjectClassId?: string | null;
      ParentId?: string | null;
      SysName?: string | null;
      Id: string;
      Name?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.SourceFieldResponse": {
      Id?: string;
      Name?: string | null;
      ProjectField?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse"];
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ValueField": {
      Id: string | null;
      Name?: string | null;
      HierarchyNames?: string[] | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      Description?: string | null;
      PlaceholderText?: string | null;
      TopLevelProjectFieldFormat?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.DictionaryProjectFieldFormat"];
      DataFormat?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.DictionaryProjectFieldFormat"];
      IsDataField?: boolean;
      ProjectFieldFormat?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.DictionaryProjectFieldFormat"];
      Source?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.SourceFieldResponse"];
      Value?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ValueField"];
      CalculationFormulas?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"][]
        | null;
      TemplateNumber?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ParticipantRoleInProject?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Tag?: string | null;
      IsCustom?: boolean | null;
      DictionaryLevel?: number;
      Code?: string | null;
      TempId?: string | null;
    };
    "CaseMap.Modules.Projects.Responses.CalculationFormulas.MetadataInputValueResponse": {
      Tag?: string | null;
      ProjectField?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse"];
    };
    "CaseMap.Modules.Projects.Responses.CalculationFormulas.InputValueSummary": {
      Tag?: string | null;
      Value?: { [key: string]: any } | null;
    };
    "CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationDataResponse": {
      Metadata?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.MetadataInputValueResponse"][]
        | null;
      Data?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.InputValueSummary"][]
        | null;
      Result?: number | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationDataResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationDataResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary": {
      CalculationFormulaId?: string;
      Data?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.InputValueSummary"][]
        | null;
      Result?: number | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.UpdateDataSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Repositories.Calculation.CalculateEntityType":
      | "Project"
      | "IntakeForm"
      | "Register";
    "CaseDotStar.ServicePackages.Common.Database.Data.Comments.ReactionType":
      | "Like"
      | "Dislike";
    "CaseDotStar.ServicePackages.Common.Models.TotalReactionsDto": {
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Comments.ReactionType"];
      Count?: number;
      UserHasReacted?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Models.CommentModel": {
      Id?: string | null;
      CreationDate?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      Text?: string | null;
      Reaction?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TotalReactionsDto"];
      Reactions?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TotalReactionsDto"][]
        | null;
      Thread?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.EntityCommentsData"];
      Attachments?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.FileSummary"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Models.EntityCommentsData": {
      List?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CommentModel"][]
        | null;
      NextPageExists?: boolean;
      TotalCount?: number;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary": {
      Value?: { [key: string]: any } | null;
      VisualBlockProjectFieldId: string;
      TempId?: string | null;
      Comments?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.EntityCommentsData"];
    };
    "CaseMap.Modules.Projects.Models.VisualBlocks.ProjectLineSummary": {
      Id?: string | null;
      BlockLineId?: string;
      Order?: number;
      Values?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary"][]
        | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary": {
      Id?: string | null;
      VisualBlockId: string | null;
      Lines?:
        | components["schemas"]["CaseMap.Modules.Projects.Models.VisualBlocks.ProjectLineSummary"][]
        | null;
      TempId?: string | null;
    };
    "CaseMap.Modules.Projects.App.Calculation.Commands.CalculateFormulas": {
      EntityType?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Repositories.Calculation.CalculateEntityType"];
      IsProject?: boolean;
      EntityId?: string | null;
      EntityTypeId: string | null;
      Blocks:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary"][]
        | null;
      Stage?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Projects.App.Calculation.ViewModels.CalculatedField": {
      VisualBlockProjectFieldId?: string;
      TempId?: string | null;
      Value?: { [key: string]: any } | null;
      IsRequired?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.Calculation.ViewModels.CalculatedField>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.App.Calculation.ViewModels.CalculatedField"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequestBase": {
      Name: string | null;
      Formula: string | null;
    };
    "CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse": {
      Id?: string;
      Name?: string | null;
      Formula?: string | null;
      IsCustom?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.CalculationFormulas.CalculationFormulaRequest": {
      Id: string | null;
      Name: string | null;
      Formula: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.CalculationFormulas.CalculationFormulaResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName[]>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Calendar.Models.Requests.CalendarEventsSearchRequest": {
      StartDateTime: string | null;
      EndDateTime: string | null;
      CalendarIds: string[] | null;
      EventTypeIds?: string[] | null;
      ProjectIds?: string[] | null;
      UserIds?: string[] | null;
      ProjectResponsibleIds?: string[] | null;
    };
    "CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum":
      | "PartialView"
      | "View"
      | "Edit"
      | "Administration";
    "CaseMap.Modules.Calendar.BusinessDAL.Dto.CalendarEventShortDto": {
      Id?: string;
      Description?: string | null;
      Name?: string | null;
      StartDate?: string;
      EndDate?: string;
      AllDay?: boolean;
      TagSysName?: string | null;
      ProjectId?: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Place?: string | null;
      Color?: string | null;
      CalendarId?: string;
      CalendarName?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum"];
      TaskState?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calendar.BusinessDAL.Dto.CalendarEventShortDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Calendar.BusinessDAL.Dto.CalendarEventShortDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Events.Models.EventTypeSummary": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Models.CalendarColorSummary": {
      Id?: string;
      Name?: string | null;
      Color?: string | null;
      SysName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary": {
      Id?: string;
      Name: string | null;
      SysName?: string | null;
      Description?: string | null;
      IsSmart: boolean | null;
      CalendarColor: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CalendarColorSummary"];
      IsChecked?: boolean | null;
      IsSyncEnabled?: boolean;
      SyncByEmail?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineRequest": {
      BlockLineId: string | null;
      Values?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary"][]
        | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockRequest": {
      Lines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineRequest"][]
        | null;
    };
    "CaseMap.Modules.Calendar.Models.Requests.CalendarEventUpdateRequest": {
      Id?: string | null;
      Name: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
      EventType?: components["schemas"]["CaseMap.Modules.Events.Models.EventTypeSummary"];
      Description?: string | null;
      StartDate: string | null;
      EndDate: string | null;
      AllDay: boolean | null;
      EventPeriodIsUnspecified?: boolean;
      Calendar?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary"];
      Attendees?:
        | components["schemas"]["CaseMap.Modules.Events.Interfaces.AttendeeSummary"][]
        | null;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockRequest"][]
        | null;
    };
    "CaseMap.Modules.Calendar.Models.Responses.CalendarEventSummary": {
      Id?: string;
      Name?: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
      EventType?: components["schemas"]["CaseMap.Modules.Events.Models.EventTypeSummary"];
      Description?: string | null;
      StartDate?: string | null;
      EndDate?: string | null;
      AllDay?: boolean;
      Calendar?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary"];
      Attendees?:
        | components["schemas"]["CaseMap.Modules.Events.Interfaces.AttendeeSummary"][]
        | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarEventSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Calendar.Models.Responses.CalendarEventSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Calendar.Models.Responses.CalendarSummary": {
      EventTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Calendars?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Projects?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Users?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      ProjectResponsibles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Id?: string;
      Name: string | null;
      SysName?: string | null;
      Description?: string | null;
      IsSmart: boolean | null;
      CalendarColor: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CalendarColorSummary"];
      IsChecked?: boolean | null;
      IsSyncEnabled?: boolean;
      SyncByEmail?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Calendar.Models.Responses.CalendarSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Calendar.Models.Requests.GroupedCalendarEventsRequest": {
      Page?: number;
      PageSize?: number;
      StartDateTime: string | null;
      EndDateTime: string | null;
      CalendarIds: string[] | null;
      EventTypeIds?: string[] | null;
      ProjectIds?: string[] | null;
      UserIds?: string[] | null;
      ProjectResponsibleIds?: string[] | null;
    };
    "CaseMap.Modules.Calendar.Models.Responses.GroupedCalendarEvents": {
      Date?: string;
      Count?: number;
      Events?:
        | components["schemas"]["CaseMap.Modules.Calendar.BusinessDAL.Dto.CalendarEventShortDto"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calendar.Models.Responses.GroupedCalendarEvents>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Calendar.Models.Responses.GroupedCalendarEvents"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Models.ShortUserOrGroup": {
      SysName?: string | null;
      Id?: string;
      DisplayName?: string | null;
      Email?: string | null;
      Initials?: string | null;
      FileAvatarId?: string | null;
      Post?: string | null;
    };
    "CaseMap.Modules.Calendar.Models.Requests.CalendarTaskUpdateRequest": {
      Id?: string | null;
      TaskName: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Project: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Description?: string | null;
      EndDate?: string | null;
      Responsibles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUserOrGroup"][]
        | null;
    };
    "CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto": {
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Calendar.Models.Responses.CalendarTaskSummary": {
      Id?: string;
      TaskName?: components["schemas"]["CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto"];
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
      Description?: string | null;
      EndDate?: string | null;
      Responsibles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUserOrGroup"][]
        | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarTaskSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Calendar.Models.Responses.CalendarTaskSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Calendar.Models.Requests.CalendarSuggestRequest": {
      IsSmart?: boolean | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Common.Requests.SuggestRequest": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
    };
    "CaseMap.Modules.Calendar.Models.Requests.CalendarUpdateRequest": {
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      CalendarColor?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IsSmart: boolean | null;
      Calendars?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      EventTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Projects?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Users?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      ProjectResponsibles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
    };
    "CaseMap.Modules.Calendar.Models.Requests.CalendarCheckRequest": {
      Id: string | null;
      Check: boolean | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Calendar.Models.Requests.CalendarLinkRequest": {
      Id: string;
    };
    "CaseMap.Modules.Calendar.Models.Responses.CalendarExportLinkResponse": {
      Link?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarExportLinkResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Calendar.Models.Responses.CalendarExportLinkResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Calendar.Models.Responses.CalendarModuleResponse": {
      Id?: string | null;
      AuthorizeUrl?: string | null;
      IsAuthorized?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calendar.Models.Responses.CalendarModuleResponse[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Calendar.Models.Responses.CalendarModuleResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Calls.Commands.GetCalls": {
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Models.Calls.CallType":
      | "Inbound"
      | "Outbound"
      | "Missed";
    "CaseDotStar.ServicePackages.Common.Models.Calls.ContactDto": {
      Phone: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Calls.Models.UserType": "None" | "User" | "Unknown";
    "CaseMap.Modules.Calls.Models.UserDto": {
      Id?: string | null;
      Name?: string | null;
      Type: components["schemas"]["CaseMap.Modules.Calls.Models.UserType"];
    };
    "CaseMap.Modules.Calls.Models.CallDto": {
      Id?: string | null;
      StartDate: string | null;
      Type: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.Calls.CallType"];
      Contact: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.Calls.ContactDto"];
      User?: components["schemas"]["CaseMap.Modules.Calls.Models.UserDto"];
      Duration?: number | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Description?: string | null;
      Recording?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Calls.Models.CallDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Calls.Models.CallDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Calls.Models.CallDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Calls.Models.CallDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Calls.Commands.UpdateCall": {
      Id: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Description?: string | null;
    };
    "CaseMap.Modules.Calls.Commands.AttachUser": {
      ModuleId: string | null;
      ExternalUserId: string | null;
    };
    "CaseMap.Modules.CasebookEndpoint.Services.SyncState.SyncStatusEnum":
      | "NotRun"
      | "InProgress"
      | "Success"
      | "Fail";
    "CaseMap.Modules.CasebookEndpoint.Models.CasebookApiRequests.FeedFilter": {
      Tags?: string[] | null;
      LastUpdateDate?: string;
      DateTo?: string | null;
    };
    "CaseMap.Modules.CasebookEndpoint.Services.SyncState": {
      SyncStatus?: components["schemas"]["CaseMap.Modules.CasebookEndpoint.Services.SyncState.SyncStatusEnum"];
      StartDate?: string | null;
      EndDate?: string | null;
      Count?: number | null;
      FeedRequestStartDate?: string | null;
      FeedRequestEndDate?: string | null;
      FeedRequest?: components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.CasebookApiRequests.FeedFilter"];
      FeedRequestItemsCount?: number | null;
      LastNewCaseFeedEntryId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Services.SyncState>": {
      Result?: components["schemas"]["CaseMap.Modules.CasebookEndpoint.Services.SyncState"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProject": {
      OnlyNewRequirements?: boolean;
      ProjectId: string | null;
      CasebookNumber: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindCasebookProjectByAuthorId": {
      AuthorId: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectCasebookItem": {
      Id?: string;
      Name?: string | null;
      CasebookNumber?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectCasebookItem[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectCasebookItem"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.CasebookEndpoint.Commands.SynchronizeProjectBatch": {
      AuthorIds?: string[] | null;
    };
    "CaseMap.Modules.CasebookEndpoint.Models.GetLockedCasesResponse": {
      Projects?: string[] | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.GetLockedCasesResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.GetLockedCasesResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.CasebookEndpoint.Models.CasebookApiRequests.NewCaseFeedEntryWrapper": {
      CaseNumber?: string | null;
      CaseDate?: string | null;
      Plaintiff?: string | null;
      Respondent?: string | null;
      Description?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.CasebookApiRequests.NewCaseFeedEntryWrapper>": {
      Result?: components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.CasebookApiRequests.NewCaseFeedEntryWrapper"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.IdNameTagObject": {
      Tag?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameTagObject>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameTagObject"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.CasebookEndpoint.Models.ShortSide": {
      Id?: number | null;
      Name?: string | null;
      Address?: string | null;
      Inn?: string | null;
      Ogrn?: string | null;
      Okpo?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.ShortSide"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.CasebookEndpoint.Models.ParticipantSuggestRequest": {
      inn: string | null;
      ogrn?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse": {
      LineType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Order?: number;
      BlockLineId: string | null;
      Values?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary"][]
        | null;
    };
    "CaseMap.Modules.CasebookEndpoint.Models.Responses.ParticipantSuggestResponse": {
      Organization?: string | null;
      KPP?: string | null;
      OGRN?: string | null;
      OKPO?: string | null;
      ContactDetail?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ContactDetail"];
      LegalForm?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      CustomValueLines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.Responses.ParticipantSuggestResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.Responses.ParticipantSuggestResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName>>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.CasesBillFiltersRequest": {
      CaseIds?: string[] | null;
      ClientIds?: string[] | null;
      UserIds?: string[] | null;
      CaseTypeIds?: string[] | null;
      BillStatusIds?: string[] | null;
      MinPaid?: number | null;
      MaxPaid?: number | null;
      MinTotal?: number | null;
      MaxTotal?: number | null;
      CaseStatus?: boolean | null;
      IsArchive?: boolean | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Response.LinkResponseBase": { [key: string]: any };
    "CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse": {
      ValueId?: string | null;
      Link?: components["schemas"]["CaseMap.Modules.Reports.Response.LinkResponseBase"];
      Value?: { [key: string]: any } | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse[]>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.ReportCellWithIdResponse"][][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Response.OrderInfoResponse": {
      ColumnId?: string;
      IsAsc?: boolean;
    };
    "CaseMap.Modules.Reports.Response.ReportResultColumnResponse": {
      OrderInfo?: components["schemas"]["CaseMap.Modules.Reports.Response.OrderInfoResponse"];
      IsSortable?: boolean;
      Size?: number | null;
      Name?: string | null;
      Type?: string | null;
      Id?: string;
      LinkType?: string | null;
      FieldFormatSysName?: string | null;
      DisplayFormatSysName?: string | null;
      SysName?: string | null;
    };
    "CaseMap.Modules.Reports.Response.ReportResultFilterResponse": {
      BeginValue?: string | null;
      EndValue?: string | null;
      IsRequired?: boolean;
      OrderInfo?: components["schemas"]["CaseMap.Modules.Reports.Response.OrderInfoResponse"];
      IsSortable?: boolean;
      Size?: number | null;
      Name?: string | null;
      Type?: string | null;
      Id?: string;
      LinkType?: string | null;
      FieldFormatSysName?: string | null;
      DisplayFormatSysName?: string | null;
      SysName?: string | null;
    };
    "CaseMap.Modules.Reports.Response.ReportCellResponse": {
      Link?: components["schemas"]["CaseMap.Modules.Reports.Response.LinkResponseBase"];
      Value?: { [key: string]: any } | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.ReportCellResponse"][][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Response.ReportResultResponse": {
      ReportName?: string | null;
      Header?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.ReportResultColumnResponse"][]
        | null;
      Filters?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.ReportResultFilterResponse"][]
        | null;
      HasSummary?: boolean;
      DefaultPageSize?: number;
      UpdateDate?: string | null;
      Page?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Response.ReportCellResponse[]>"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportResultResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Reports.Response.ReportResultResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Response.SummaryResponse": {
      Header?: string | null;
      Value?: { [key: string]: any } | null;
      Type?: string | null;
      AgregationType?: string | null;
      DisplayFormatSysName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.SummaryResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Response.StandartReports.CasesBillScheduleResponse": {
      CaseName?: string | null;
      TotalAmount?: number;
      PaidAmount?: number;
      IsOther?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.CasesBillScheduleResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.CasesBillScheduleResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.FindClientIntakeObjectsPaged": {
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus": {
      Id?: string;
      Name: string | null;
      SysName: string | null;
      IsManual?: boolean;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.ClientIntakeObjectItem": {
      Id?: string;
      Number?: string | null;
      Status?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus"];
      LastSendDate?: string;
      IntakeForm?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ShortDescription?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ClientIntakeObjectItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.ClientIntakeObjectItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IReadOnlyCollection<CaseDotStar.ServicePackages.Common.IdNameObject>>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Models.ImageSummary": {
      FileMetadataId: string | null;
      Name: string | null;
      Description?: string | null;
      Width?: number | null;
      Height?: number | null;
      Order?: number | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Models.ConditionSummary": {
      Id?: string | null;
      ReportField: components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FilterFieldSummary"];
      SearchValues?: string[] | null;
      BeginValue?: string | null;
      EndValue?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockLineItemResponse": {
      Id?: string;
      Width?: number;
      Tag?: string | null;
      ExternalTag?: string | null;
      ProjectField?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse"];
      TempId?: string | null;
      DefaultValue?: { [key: string]: any } | null;
      IsDependent?: boolean;
      DependsOn?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Dependents?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Mask?: string | null;
      IsSourceField?: boolean;
      RequirementType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      RequirementConditions?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ConditionSummary"][]
        | null;
      IsRequired?: boolean;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.BlockLineResponse": {
      Id?: string;
      LineType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Order?: number;
      Fields?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockLineItemResponse"][]
        | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse": {
      Id?: string;
      NameInConstructor?: string | null;
      SysName?: string | null;
      NameInProject?: string | null;
      IsSystem?: boolean;
      Description?: string | null;
      Lines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.BlockLineResponse"][]
        | null;
      IsRepeatable?: boolean;
      Name?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      IsUneditable?: boolean;
      IsUndeletable?: boolean;
      TempId?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields": {
      CalculationFormulaId?: string;
      Fields?: string[] | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields": {
      FieldId?: string;
      RequirementConditionFields?: string[] | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto": {
      Id?: string;
      Status?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus"];
      LastSendDate?: string;
      IntakeForm?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      FormulaDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields"][]
        | null;
      Number?: string | null;
      ShortDescription?: string | null;
      Note?: string | null;
      LastCase?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Cases?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.ViewModels.ClientIntakeObjectDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Commands.SendIntakeObject": {
      IntakeForm: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      ShortDescription: string | null;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Commands.ReSendIntakeObject": {
      Id: string | null;
      ShortDescription: string | null;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto": {
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      IsActive?: boolean;
      LastChangeDate?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      VisualBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      FormulaDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields"][]
        | null;
      Link?: string | null;
      Effort?: number | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.ClientsBillsFilterRequest": {
      BillIds?: string[] | null;
      ClientIds?: string[] | null;
      StartBillDate?: string | null;
      EndBillDate?: string | null;
      BillStatusIds?: string[] | null;
      MinPaid?: number | null;
      MaxPaid?: number | null;
      MinTotal?: number | null;
      MaxTotal?: number | null;
      IsArchive?: boolean | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Response.StandartReports.ClientsBillsScheduleResponse": {
      ClientName?: string | null;
      TotalAmount?: number;
      PaidAmount?: number;
      IsOther?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.ClientsBillsScheduleResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.ClientsBillsScheduleResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.ClientsCaseTypeFiltersRequest": {
      ClientIds?: string[] | null;
      CaseTypeIds?: string[] | null;
      MinArchiveCasesNumber?: number | null;
      MaxArchiveCasesNumber?: number | null;
      MinActiveCasesNumber?: number | null;
      MaxActiveCasesNumber?: number | null;
      MinTotalCasesNumber?: number | null;
      MaxTotalCasesNumber?: number | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.ClientsPaymentFilterRequest": {
      ClientIds?: string[] | null;
      BillStatusIds?: string[] | null;
      MinPaid?: number | null;
      MaxPaid?: number | null;
      MinTotal?: number | null;
      MaxTotal?: number | null;
      IsArchive?: boolean | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Response.StandartReports.ClientsPaymentScheduleResponse": {
      ClientName?: string | null;
      TotalAmount?: number;
      PaidAmount?: number;
      IsOther?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.ClientsPaymentScheduleResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.ClientsPaymentScheduleResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Comments.Requests.GetCommentsRequest": {
      EntityId: string | null;
      EntityType: string | null;
      ParentId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CommentModel"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Comments.Requests.AddCommentRequest": {
      EntityType: string | null;
      EntityId: string | null;
      Text?: string | null;
      ParentId?: string | null;
      Attachments?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.FileSummary"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.CommentModel>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CommentModel"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Comments.Models.CommentToFieldEntityType":
      | "Project"
      | "IntakeForm";
    "CaseMap.Modules.Comments.Requests.AddCommentToFieldRequest": {
      EntityType: components["schemas"]["CaseMap.Modules.Comments.Models.CommentToFieldEntityType"];
      VisualBlockProjectFieldId: string | null;
      BlockId: string | null;
      LineId: string | null;
      EntityId: string | null;
      Text?: string | null;
      ParentId?: string | null;
      Attachments?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.FileSummary"][]
        | null;
    };
    "CaseMap.Modules.Comments.Requests.SendReactionRequest": {
      CommentId: string | null;
      Type: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Comments.ReactionType"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.TotalReactionsDto>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TotalReactionsDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindUserSuggestByFilter": {
      NotIncludeMyself?: boolean;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto": {
      Id?: string;
      Email?: string | null;
      Name?: string | null;
      DisplayName?: string | null;
      Branch?: string | null;
      Initials?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.IdNameNameEnObject>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Models.Suggest.JudgeSuggestRequest": {
      CourtId?: string | null;
      CourtName?: string | null;
      JudgeString?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Interfaces.Models.ShortJudgeSummary": {
      Id?: string;
      Name?: string | null;
      CasebookId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.ShortJudgeSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ShortJudgeSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Models.Suggest.CourtSuggestRequest": {
      JudgeId?: string | null;
      JudgeName?: string | null;
      CourtString?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Interfaces.Models.ShortCourtSummary": {
      Id?: string;
      Name?: string | null;
      CasebookId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.ShortCourtSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ShortCourtSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Extensions.Responses.CurrencyResponse": {
      Id?: string;
      Name?: string | null;
      Symbol?: string | null;
      LetterCode?: string | null;
      IsCustom?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Extensions.Responses.CurrencyResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Request.ListRequest": {
      Page?: number;
      PageSize?: number;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Extensions.Responses.CurrencyResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Extensions.Responses.CurrencyResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Extensions.Requests.Currencies.CurrencyCreateRequest": {
      Name: string | null;
      Symbol: string | null;
      LetterCode: string | null;
    };
    "CaseMap.Modules.Extensions.Requests.Currencies.CurrencyUpdateRequest": {
      Id: string | null;
      Name: string | null;
      Symbol: string | null;
      LetterCode: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.Fields.FieldSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Models.Fields.FieldSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.DataFieldValues.DataFieldEntityType":
      | "Project"
      | "IntakeForm";
    "CaseMap.Modules.Projects.App.DataFieldValues.GetDataFieldValues": {
      EntityType?: components["schemas"]["CaseMap.Modules.Projects.App.DataFieldValues.DataFieldEntityType"];
      ChangedSourceFieldIds?: string[] | null;
      IsProject?: boolean;
      EntityId?: string | null;
      EntityTypeId: string | null;
      Blocks:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary"][]
        | null;
      Stage?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Projects.App.DataFieldValues.DataFieldValueSummary": {
      VisualBlockProjectFieldId?: string;
      TempId?: string | null;
      Value?: { [key: string]: any } | null;
      IsRequired?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DataFieldValues.DataFieldValueSummary>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.App.DataFieldValues.DataFieldValueSummary"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.GeneralSettings.Responses.DayOfWeekResponse": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      Order?: number;
      IndexNumber?: number;
    };
    "System.Threading.ThreadState":
      | "Running"
      | "StopRequested"
      | "SuspendRequested"
      | "Background"
      | "Unstarted"
      | "Stopped"
      | "WaitSleepJoin"
      | "Suspended"
      | "AbortRequested"
      | "Aborted";
    "CaseDotStar.ServicePackages.Common.Models.Debug.AsyncWorkerThreadStatus":
      | "Started"
      | "Execute"
      | "Wait"
      | "Completed";
    "CaseDotStar.ServicePackages.Common.Models.Debug.AsyncWorkerThreadInfo": {
      State?: components["schemas"]["System.Threading.ThreadState"];
      Status?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.Debug.AsyncWorkerThreadStatus"];
    };
    "CaseDotStar.ServicePackages.Common.Models.Debug.AsyncWorkerInfo": {
      Queue?: number;
      Size?: number;
      Threads?: {
        [
          key: string
        ]: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.Debug.AsyncWorkerThreadInfo"];
      } | null;
      TaskSchedulerType?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Models.Debug.ThreadPoolInfo": {
      MinWorkerThreads?: number;
      MinCompletionThreads?: number;
      ThreadCount?: number;
      CompletedWorkItemCount?: number;
      PendingWorkItemCount?: number;
      AsyncWorker?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.Debug.AsyncWorkerInfo"];
    };
    "CaseMap.Modules.Projects.App.DependentFields.ViewModels.DependentFieldEntityType":
      | "Project"
      | "IntakeForm"
      | "Register"
      | "Participant"
      | "Document"
      | "Event"
      | "Task"
      | "User"
      | "Client";
    "CaseMap.Modules.Projects.Interfaces.Models.SystemFieldSummary": {
      Name?: string | null;
      Value?: { [key: string]: any } | null;
    };
    "CaseMap.Modules.Projects.App.DependentFields.Commands.GetDependentFields": {
      EntityType?: components["schemas"]["CaseMap.Modules.Projects.App.DependentFields.ViewModels.DependentFieldEntityType"];
      ChangedFieldIds?: string[] | null;
      SystemFields?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.SystemFieldSummary"][]
        | null;
      IsProject?: boolean;
      EntityId?: string | null;
      EntityTypeId: string | null;
      Blocks:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary"][]
        | null;
      Stage?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Projects.App.DependentFields.ViewModels.DependentField": {
      VisualBlockProjectFieldId?: string;
      TempId?: string | null;
      Value?: { [key: string]: any } | null;
      IsRequired?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.App.DependentFields.ViewModels.DependentField>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.App.DependentFields.ViewModels.DependentField"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Dictionaries.SaveDictionaryItemRequest": {
      Id?: string | null;
      Name?: string | null;
      SystemName?: string | null;
      SysName?: string | null;
      GroupId?: string | null;
      IsCustom?: boolean | null;
    };
    "CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary": {
      Id?: string;
      ParentId?: string | null;
      Name?: string | null;
      SysName?: string | null;
      IsCustom?: boolean | null;
      AuthorId?: string | null;
      CreationDate?: string | null;
      LastModifedByUserId?: string | null;
      LastChangeDate?: string | null;
      IsLeaf?: boolean;
      Page?: number;
      NextPageExists?: boolean;
      Items?:
        | components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary"][]
        | null;
      Opened?: boolean;
      Level?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.DictionaryMetadata"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.Module.Models.GetDictionaryRequest": {
      SystemName: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.DictionaryItemSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.Module.Models.GetDictionaryItemsRequest": {
      SystemName: string | null;
      UniqueNames?: boolean;
      OnlyChildren?: boolean;
      IgnoreValues?: string[] | null;
      DictionaryLevel?: number;
      ParentValueId?: string | null;
      IsDependent?: boolean;
      WithSubItems?: boolean;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Dictionaries.SaveDictionaryMetadataRequest": {
      Id?: string | null;
      SystemName?: string | null;
      DisplayName?: string | null;
    };
    "CaseDotStar.ServicePackages.Dictionaries.Requests.V42.CreateUserDefinedDictionaryRequest": {
      Name: string | null;
      Items?:
        | components["schemas"]["CaseDotStar.ServicePackages.Dictionaries.Requests.V42.CreateUserDefinedDictionaryRequest"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse": {
      Name: string | null;
      Id: string;
      Branch?: string | null;
      SysName: string | null;
      Phone?: string | null;
      Email?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission": {
      Id?: number;
      Name?: string | null;
      SysName: string | null;
    };
    "CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderSharedUserResponse": {
      IsResponsible?: boolean;
      IsAuthor?: boolean;
      IsEditable?: boolean;
      Object: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse"];
      Permission?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission"];
    };
    "CaseMap.Modules.Documents.App.DocumentFolders.ClientInfo": {
      Id: string | null;
      Email?: string | null;
      LastName?: string | null;
      FirstName?: string | null;
      MiddleName?: string | null;
      DisplayName?: string | null;
      Name?: string | null;
      LastLoginDate?: string | null;
    };
    "CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings": {
      FolderName?: string | null;
      Users?:
        | components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderSharedUserResponse"][]
        | null;
      Clients?:
        | components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.ClientInfo"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings>": {
      Result?: components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderAccessSettings"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderSharedUser": {
      Object: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse"];
      Permission?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission"];
    };
    "CaseMap.Modules.Documents.App.DocumentFolders.SaveDocumentFolderAccessSettings": {
      Users?:
        | components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.DocumentFolderSharedUser"][]
        | null;
      Clients?:
        | components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.ClientInfo"][]
        | null;
      FolderId: string | null;
    };
    "CaseMap.Modules.Documents.App.DocumentFolders.GetUsersSuggestRequest": {
      FolderId: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.App.DocumentFolders.GetClientsSuggestRequest": {
      FolderId: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.App.DocumentFolders.ClientInfo>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Documents.App.DocumentFolders.ClientInfo"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.Interfaces.Implementation.DocumentFolderUpdateRequest": {
      Id?: string | null;
      ProjectId?: string | null;
      ParentId?: string | null;
      Name: string | null;
    };
    "CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary": {
      Id?: string | null;
      Name?: string | null;
      SysName?: string | null;
      IsSystem?: boolean;
      ProjectId?: string | null;
      ParentId?: string | null;
      ExternalStorage?: string | null;
      Parents?:
        | components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary"][]
        | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      IsSupportedAccessSettings?: boolean;
      IsSupportedClientAccessSettings?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.Models.DocumentsSearchRequest": {
      Projects?: string[] | null;
      TypeSysNames?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Interfaces.Models.ThroughLinkProjectSummary": {
      Id?: string;
      Name?: string | null;
      ProjectTypeSysName?: string | null;
      ProjectGroupId?: string | null;
      ProjectTypeId?: string;
    };
    "CaseMap.Modules.Common.Responses.FileSummary": {
      Id?: string;
      FileId?: string;
      DocumentId?: string | null;
      Name?: string | null;
      PreviewUrl?: string | null;
      StorageFileId?: string | null;
    };
    "CaseMap.Modules.Documents.Models.DocumentSummary": {
      Id?: string;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      CreationDate?: string | null;
      Description?: string | null;
      DocumentContentType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      DocumentTypeId?: string | null;
      DocumentType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      DocumentContentTypeId?: string | null;
      ProjectId?: string | null;
      Project?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ThroughLinkProjectSummary"];
      ProjectGroup?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Files?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.FileSummary"][]
        | null;
      Name?: string | null;
      ReceivedDate?: string;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.Models.DocumentSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Documents.Models.DocumentSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockResponse": {
      Id?: string;
      VisualBlockId?: string;
      Lines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse"][]
        | null;
    };
    "CaseMap.Modules.Documents.Models.DocumentDto": {
      Id?: string;
      SectionId?: string | null;
      DocumentFolderId?: string | null;
      Name?: string | null;
      File?: components["schemas"]["CaseMap.Modules.Common.Responses.FileSummary"];
      DocumentType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      DocumentContentType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      ReceivedDate?: string;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      CreationDate?: string | null;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Models.DocumentDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Documents.Models.DocumentDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.Interfaces.Implementation.DocumentWithCustomBlockRequest": {
      VisualBlockValueLines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineRequest"][]
        | null;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockRequest"][]
        | null;
      Id?: string | null;
      Description?: string | null;
      DocumentType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      DocumentContentType: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      File: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      EntityId?: string | null;
      FromCasebook?: boolean | null;
      DocumentFolderId?: string | null;
      ReceivedDate: string | null;
      NotCreateActivity?: boolean;
      CasebookId?: string | null;
      TimeLogs?: string[] | null;
      RelativePath?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Request.DocumentUpdateRequest": {
      Id?: string | null;
      Description?: string | null;
      DocumentType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      DocumentContentType: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      File: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      EntityId?: string | null;
      FromCasebook?: boolean | null;
      DocumentFolderId?: string | null;
      ReceivedDate: string | null;
      NotCreateActivity?: boolean;
      CasebookId?: string | null;
      TimeLogs?: string[] | null;
      RelativePath?: string | null;
    };
    "CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem": {
      Name?: string | null;
      IsSystem?: boolean;
      ProjectId?: string | null;
      ParentFolderId?: string | null;
      ParentFolderSummary?: components["schemas"]["CaseMap.Modules.Documents.DAL.Requests.DocumentFolderSummary"];
      File?: components["schemas"]["CaseMap.Modules.Common.Responses.FileSummary"];
      Extension?: string | null;
      DocumentType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      DocumentContentType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      ReceivedDate?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      ItemSysName?: string | null;
      IsSupportedAccessSettings?: boolean;
      IsSupportedClientAccessSettings?: boolean;
      Id: string | null;
      SysName: string | null;
      ExternalStorage?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.DAL.Requests.DocumentSuggestRequest": {
      ProjectIds?: string[] | null;
      FolderIds?: string[] | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Documents.Requests.DocumentTemplateRequestBase": {
      Name: string | null;
      File: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Invalid?: boolean;
      DocumentTemplateType: components["schemas"]["CaseMap.Modules.Common.Responses.SysIdNameObjectSummary"];
    };
    "CaseMap.Modules.Documents.Responses.DocumentTemplateResponse": {
      Invalid?: boolean;
      DocumentTemplateType?: components["schemas"]["CaseMap.Modules.Common.Responses.SysIdNameObjectSummary"];
      File?: components["schemas"]["CaseDotStar.ServicePackages.Common.FileSummary"];
      IsSystem?: boolean;
      SysName?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Documents.Responses.DocumentTemplateResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.Requests.DocumentTemplateRequest": {
      Id?: string;
      Name: string | null;
      File: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Invalid?: boolean;
      DocumentTemplateType: components["schemas"]["CaseMap.Modules.Common.Responses.SysIdNameObjectSummary"];
    };
    "CaseMap.Modules.Documents.DAL.Requests.DocumentTemplatesRequest": {
      TemplateTypeIds?: string[] | null;
      TemplateTypeSysName?: string | null;
      ValidOnly?: boolean;
      ContextSearchString?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.Responses.DocumentTemplateResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Documents.Responses.DocumentTemplateResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.Requests.FillTemplateRequest": {
      ProjectId: string | null;
      TemplateId: string | null;
      ContextType?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Common.Responses.IdNameObjectSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Email.Responses.EmailProjectInfo": {
      Id?: string;
      Name?: string | null;
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
    };
    "CaseMap.Modules.Email.Responses.EmailMessageResponse": {
      Id?: string;
      From?: string | null;
      To?: string[] | null;
      Cc?: string[] | null;
      Bcc?: string[] | null;
      Subject?: string | null;
      Text?: string | null;
      MimeType?: string | null;
      ProjectId?: string;
      Project?: components["schemas"]["CaseMap.Modules.Email.Responses.EmailProjectInfo"];
      IsIncoming?: boolean;
      Sender?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      MessageDate?: string;
      ReplyToMessageId?: string | null;
      Attachments?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.FileSummary"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Email.Responses.EmailMessageResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Email.Responses.EmailMessageResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Email.Requests.ImportEmailRequest": {
      From: string | null;
      To: string[] | null;
      Cc?: string[] | null;
      Bcc?: string[] | null;
      Subject?: string | null;
      Text: string | null;
      MimeType: string | null;
      Attachments?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.FileSummary"][]
        | null;
      RecieveDate: string | null;
      ExternalId?: string | null;
      ModuleId: string | null;
      MessageId: string | null;
      ThreadId?: string | null;
      IsIncoming?: boolean | null;
    };
    "CaseMap.Modules.Email.Requests.ImportEmailBatchRequest": {
      Project: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Messages:
        | components["schemas"]["CaseMap.Modules.Email.Requests.ImportEmailRequest"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Email.Responses.EmailMessageResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Email.Responses.EmailMessageResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Email.Requests.ImportEmailFromApplicationRequest": {
      Project: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      RestUrl: string | null;
      Token: string | null;
      ApplicationName: string | null;
      MessageIds: string[] | null;
    };
    "CaseMap.Modules.Email.Models.ModuleModel": {
      Id?: string | null;
      Title?: string | null;
      Description?: string | null;
      IsSystem?: boolean;
      Active?: boolean;
      Hidden?: boolean;
      Order?: number;
      HasFront?: boolean;
      HasSettings?: boolean;
      AuthorizeUrl?: string | null;
      IsSetup?: boolean;
    };
    "CaseMap.Modules.Email.Responses.ModulesResponse": {
      IsAuthorized?: boolean;
      Modules?:
        | components["schemas"]["CaseMap.Modules.Email.Models.ModuleModel"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.ModulesResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Email.Responses.ModulesResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Email.Requests.GenerateEmailFromTemplateRequest": {
      TemplateId: string | null;
      ProjectId?: string | null;
      ParticipantId?: string | null;
    };
    "CaseMap.Modules.Email.Responses.EmailFromTemplate": {
      Id?: string;
      Subject?: string | null;
      Body?: string | null;
      Attachments?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Email.Responses.EmailFromTemplate>": {
      Result?: components["schemas"]["CaseMap.Modules.Email.Responses.EmailFromTemplate"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Email.Requests.ImportEmailsToProjectsRequest": {
      Projects:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"][]
        | null;
      Messages:
        | components["schemas"]["CaseMap.Modules.Email.Requests.ImportEmailRequest"][]
        | null;
    };
    "CaseMap.Modules.EmailTemplates.Requests.EmailTemplatePutRequest": {
      Id?: string | null;
      Name: string | null;
      Subject?: string | null;
      Body?: string | null;
      Attachments?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
    };
    "CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse": {
      Id?: string;
      Name?: string | null;
      Subject?: string | null;
      Body?: string | null;
      Attachments?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.EmailTemplates.Responses.EmailTemplateResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.EmailTemplates.Requests.GetEmailTemplatesRequest": {
      Name?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.EmailTemplates.Responses.EmailTemplateSummary": {
      Id?: string;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.EmailTemplates.Responses.EmailTemplateSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.EmailTemplates.Requests.EmailTemplateTagSuggestRequest": {
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.EmailTemplates.Responses.EmailTemplateTagSuggest": {
      Tag?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.EmailTemplates.Responses.EmailTemplateTagSuggest>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.EmailTemplates.Responses.EmailTemplateTagSuggest"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Response.EmbeddedReportResponse": {
      EmbedCode?: string | null;
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      ReportType?: string | null;
      FolderId?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      UpdateDate?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.EmbeddedReportResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Reports.Response.EmbeddedReportResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateEmbeddedReportRequest": {
      EmbedCode: string | null;
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      FolderId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Models.VisualBlocks.EntityFieldValueWithSystemTagSummary": {
      SystemTag: string | null;
      EntityId: string | null;
      EntityTypeSysName: string | null;
      Value?: { [key: string]: any } | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldValueSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.VisualBlocks.EntityVisualBlockValuesUpdateRequest": {
      EntityId: string | null;
      EntityTypeSysName: string | null;
      Lines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineRequest"][]
        | null;
      EntityIsCreated?: boolean;
    };
    "CaseMap.Modules.Projects.Responses.VisualBlocks.EntityVisualBlockValuesUpdateResponse": {
      EntityId?: string;
      EntityTypeSysName?: string | null;
      Lines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineResponse"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.EntityVisualBlockValuesUpdateResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.VisualBlocks.EntityVisualBlockValuesUpdateResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Requests.ProjectFileds.GetEntityDependenciesByProjectFieldId": {
      ProjectFieldId: string | null;
      VisualBlockId: string | null;
      ProjectTypeId: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Interfaces.Models.EntityDependencyDto": {
      SysName?: string | null;
      Hierarchy?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Models.EntityDependencyDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.EntityDependencyDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Requests.ProjectFileds.GetEntityDependenciesByDictionaryId": {
      DictionaryId: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.App.EntityCustomValues.V41.Commands.GetEntityTypeVisualBlocks": {
      EntityTypeIds?: string[] | null;
      SearchString?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeItem": {
      Entity?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      EntityType?: components["schemas"]["CaseMap.Modules.Common.Responses.SysIdNameObjectSummary"];
      LastChangeDate?: string | null;
      HasAttributes?: boolean;
      Id?: string;
      VisualBlockId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse": {
      VisualBlock?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"];
      Lines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.BlockLineResponse"][]
        | null;
      Entity?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      EntityType?: components["schemas"]["CaseMap.Modules.Common.Responses.SysIdNameObjectSummary"];
      LastChangeDate?: string | null;
      HasAttributes?: boolean;
      Id?: string;
      VisualBlockId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.TRequiredIdNameObject<System.Nullable<System.Guid>>": {
      Id: string | null;
      Name: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.IdTempIdObject": {
      Id?: string | null;
      TempId?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectFileds.ProjectFieldRequest": {
      Id?: string | null;
      Name: string | null;
      PlaceholderText: string | null;
      ProjectFieldFormat: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.DictionaryProjectFieldFormat"];
      Source?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.IdTempIdObject"];
      Value?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ValueField"];
      CalculationFormulas?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      TemplateNumber?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      ParticipantRoleInProject?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Tag?: string | null;
      DictionaryLevel?: number | null;
      Code?: string | null;
      TempId?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockLineItemRequest": {
      Id?: string | null;
      Width: number | null;
      Tag?: string | null;
      ProjectField: components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectFileds.ProjectFieldRequest"];
      TempId?: string | null;
      ExternalTag?: string | null;
      DefaultValue?: { [key: string]: any } | null;
      IsDependent?: boolean;
      DependsOn?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Mask?: string | null;
      RequirementType: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      RequirementConditions:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ConditionSummary"][]
        | null;
    };
    "CaseMap.Modules.Projects.Requests.VisualBlocks.BlockLineRequest": {
      Id?: string | null;
      LineType: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      Fields:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockLineItemRequest"][]
        | null;
      Order?: number;
    };
    "CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest": {
      Id?: string | null;
      NameInConstructor: string | null;
      Description?: string | null;
      IsRepeatable?: boolean;
      Order?: number;
      TempId?: string | null;
      Lines:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.BlockLineRequest"][]
        | null;
    };
    "CaseMap.Modules.Projects.App.EntityCustomValues.V41.Commands.CreateOrUpdateEntityTypeVisualBlock": {
      Entity?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
      EntityType?: components["schemas"]["CaseDotStar.ServicePackages.Common.TRequiredIdNameObject<System.Nullable<System.Guid>>"];
      VisualBlock?: components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseMessages.VisualBlockValidationSubTypes":
      | "DependsOnInvalid"
      | "DictionaryLevelInvalid"
      | "DefaultValueInvalid"
      | "DataFieldSourceInvalid"
      | "DataFieldValueInvalid"
      | "EmbedCodeSourceInvalid";
    "CaseDotStar.ServicePackages.Common.Response.ResponseMessages.VisualBlockValidationError": {
      FieldId?: string | null;
      TempFieldId?: string | null;
      ErrorSubType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.VisualBlockValidationSubTypes"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.App.EntityCustomValues.V41.ViewModels.EntityTypeVisualBlockResponse"];
      ErrorData?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.VisualBlockValidationError"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.VisualBlocks.GetEntityCardVisualBlocksRequest": {
      SystemFields?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.SystemFieldSummary"][]
        | null;
      EntityTypeId: string;
      EntityTypeSysName: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityCardVisualBlockResponse": {
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityCardVisualBlockResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityCardVisualBlockResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Requests.Workflow.EntityFieldData": {
      EntityId?: string;
      Value?: { [key: string]: any } | null;
    };
    "CaseMap.Modules.Scheduler.Models.Requests.Workflow.EventCreationRequest": {
      ActivationDate: string | null;
      EventCreationSettingId: string | null;
      ProjectId: string | null;
      RaiseEventAuthorId: string | null;
      EntityId?: string | null;
      EntityFields?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.EntityFieldData"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventTypeSummary[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Events.Models.EventTypeSummary"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.DocumentWithFileSummary": {
      Id?: string | null;
      Name?: string | null;
      File: components["schemas"]["CaseDotStar.ServicePackages.Common.FileSummary"];
    };
    "CaseMap.Modules.VideoMeeting.Dto.VideoMeetingDto": {
      Id?: string;
      Name?: string | null;
      Url?: string | null;
    };
    "CaseMap.Modules.Events.Models.EventsUpdateRequest": {
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      StartDate: string | null;
      EndDate: string | null;
      AllDay: boolean | null;
      Place?: string | null;
      EventType?: components["schemas"]["CaseMap.Modules.Events.Models.EventTypeSummary"];
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
      Calendar?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary"];
      Attendees?:
        | components["schemas"]["CaseMap.Modules.Events.Interfaces.AttendeeSummary"][]
        | null;
      IsFavorite?: boolean | null;
      CasebookId?: string | null;
      IsAutomated?: boolean | null;
      NotificationTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      TimeLogs?: string[] | null;
      SendNotificationsToAttendees?: boolean;
      Documents:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.DocumentWithFileSummary"][]
        | null;
      VideoMeeting?: components["schemas"]["CaseMap.Modules.VideoMeeting.Dto.VideoMeetingDto"];
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockRequest"][]
        | null;
    };
    "CaseMap.Modules.Events.Models.ProjectModel": {
      ProjectTypeId?: string;
      ProjectGroupId?: string | null;
      DocumentFolder?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"];
      Id: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Events.Models.EventSummary": {
      Id?: string;
      Name?: string | null;
      Project?: components["schemas"]["CaseMap.Modules.Events.Models.ProjectModel"];
      EventType?: components["schemas"]["CaseMap.Modules.Events.Models.EventTypeSummary"];
      Description?: string | null;
      StartDate?: string | null;
      EndDate?: string | null;
      CreationDate?: string | null;
      LastChangeDate?: string | null;
      AllDay?: boolean;
      Place?: string | null;
      Calendar?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.CalendarShortSummary"];
      Attendees?:
        | components["schemas"]["CaseMap.Modules.Events.Interfaces.AttendeeSummary"][]
        | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      NotificationTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      Documents?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.DocumentWithFileSummary"][]
        | null;
      VideoMeeting?: components["schemas"]["CaseMap.Modules.VideoMeeting.Dto.VideoMeetingDto"];
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Events.Models.EventSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Events.Models.EventSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Events.Models.AttendeesEmailSuggestRequest": {
      Name?: string | null;
      IgnoreValues?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Events.Interfaces.AttendeeSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Events.Interfaces.AttendeeSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Email.Exchange.Requests.ExchangeAuthorizeRequest": {
      Email: string | null;
      Password: string | null;
      Domain?: string | null;
      ExchangeUrl?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Conditions.EntityField.AutomationScriptFieldResponse": {
      Id?: string | null;
      Name?: string | null;
      HierarchyNames?: string[] | null;
      SysName?: string | null;
      Childrens?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Models.Conditions.EntityField.AutomationScriptFieldResponse"][]
        | null;
      ParentId?: string | null;
      Type?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Scheduler.Models.Conditions.EntityField.AutomationScriptFieldResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Models.Conditions.EntityField.AutomationScriptFieldResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse": {
      Id?: string;
      Amount?: number;
      Date?: string;
      Description?: string | null;
      Project?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.ProjectModel"];
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      IsBillable?: boolean;
      Files?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      ExpenseCode?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ExpenseType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.Consts.ExpenseStatus":
      | "Billed"
      | "Unbilled"
      | "Unbillable";
    "CaseMap.Modules.Timing.MVC.Models.Expenses.ExpensesRequest": {
      ProjectId: string | null;
      Statuses?:
        | components["schemas"]["CaseMap.Modules.Timing.Consts.ExpenseStatus"][]
        | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseListItemResponse": {
      Id?: string;
      Amount?: number;
      Date?: string;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      ExpenseCode?: string | null;
      Description?: string | null;
      Status?: string | null;
      BillId?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseListItemResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseListItemResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseCreateRequest": {
      Amount: number | null;
      Date: string | null;
      Description?: string | null;
      Project: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IsBillable: boolean;
      Files:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      ExpenseCode: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ExpenseType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Timing.DAL.Repositories.GetExpenseSummary": {
      ProjectId: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseSummary": {
      Total?: number;
      Billable?: number;
      Billed?: number;
      Unbilled?: number;
      Unbillable?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.Expenses.ExpenseUpdateRequest": {
      Id: string | null;
      Amount: number | null;
      Date: string | null;
      Description?: string | null;
      Project: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IsBillable: boolean;
      Files:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      ExpenseCode: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ExpenseType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Reports.Request.StandartReports.ExpensesByClientsFilterRequest": {
      ClientIds?: string[] | null;
      ProjectIds?: string[] | null;
      ExpenseIds?: string[] | null;
      StartDate?: string | null;
      EndDate?: string | null;
      BillIds?: string[] | null;
      MinAmount?: number | null;
      MaxAmount?: number | null;
      ExpenseStatuses?:
        | components["schemas"]["CaseMap.Modules.Timing.Consts.ExpenseStatus"][]
        | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Response.StandartReports.ExpensesByClientScheduleResponse": {
      ClientName?: string | null;
      TotalAmount?: number;
      IsOther?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.ExpensesByClientScheduleResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.ExpensesByClientScheduleResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.Requests.AttachExternalFolderRequest": {
      ProjectId: string | null;
      ExternalId: string | null;
      ExternalStorage: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.ExternalFolder": {
      Id?: string;
      ExternalStorage?: string | null;
      ExternalId?: string | null;
      EntityId?: string;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.ExternalFolder>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.ExternalFolder"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.Requests.ExternalFoldersListRequest": {
      FolderId?: string | null;
      ExternalStorage: string | null;
    };
    "CaseMap.Modules.Documents.DAL.Data.ExternalFolderListItem": {
      Id?: string | null;
      Name?: string | null;
      ExternalStorage?: string | null;
      HasChildren?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Documents.DAL.Data.ExternalFolderListItem>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Documents.DAL.Data.ExternalFolderListItem"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.App.ReportCatalogs.ReportListEntityTypeEnum":
      | "Folder"
      | "Report";
    "CaseDotStar.ServicePackages.Common.Dto.ParentFolderDto": {
      IsSystem?: boolean;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem": {
      Id?: string;
      Name?: string | null;
      CreationDate?: string | null;
      UpdateDate?: string | null;
      EntityType?: components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.ReportListEntityTypeEnum"];
      Parents?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.ParentFolderDto"][]
        | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      IsShared?: boolean;
      IsSystem?: boolean | null;
      ReportType?: string | null;
      ReportSysName?: string | null;
      IsPreviewed?: boolean;
      ExternalLink?: string | null;
      ViewReportLink?: string | null;
      Description?: string | null;
      FolderId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>": {
      Result?: components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.ExternalReports.CreateOrUpdateExternalLinkReportRequest": {
      ExternalLink: string | null;
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      FolderId?: string | null;
    };
    "CaseMap.Modules.Activities.Request.FeedPagedRequest": {
      OrderByEventTime?: boolean | null;
      OnlyFavorite?: boolean | null;
      IncludeDetachedDisputeEvents?: boolean | null;
      ProjectIds?: string[] | null;
      ProjectGroupIds?: string[] | null;
      EventTypes?: string[] | null;
      Places?: string[] | null;
      Tags?: string[] | null;
      TagIds?: string[] | null;
      IgnoreTags?: string[] | null;
      ProjectResponsibleIds?: string[] | null;
      CaseTypeIds?: string[] | null;
      StartDate?: string | null;
      EndDate?: string | null;
      LastDaysDate?: number | null;
      StartCreateDate?: string | null;
      EndCreateDate?: string | null;
      LastDaysCreateDate?: number | null;
      StartChangeDate?: string | null;
      EndChangeDate?: string | null;
      LastDaysChangeDate?: number | null;
      Authors?: string[] | null;
      ParticipantId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Activities.Interfaces.ComplexTypes.ComplexTag": {
      Id?: string | null;
      Name?: string | null;
      SystemName?: string | null;
      EventTypeId?: string | null;
    };
    "CaseMap.Modules.Activities.Presentation.CaseInfo": {
      CaseDate?: string | null;
      CaseNumber?: string | null;
      Plaintiff?: string | null;
      Respondent?: string | null;
    };
    "CaseMap.Modules.Activities.Presentation.ShortAutomationScript": {
      Id?: string;
      Name?: string | null;
      TypeName?: string | null;
    };
    "CaseMap.Modules.Activities.Presentation.FeedSummary": {
      Id?: string;
      Date?: string;
      ProjectName?: string | null;
      Tag?: components["schemas"]["CaseMap.Modules.Activities.Interfaces.ComplexTypes.ComplexTag"];
      Description?: string | null;
      HasFile?: boolean | null;
      HasComment?: boolean | null;
      IsFavorite?: boolean | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      EntityId?: string | null;
      EntityName?: string | null;
      ProjectId?: string | null;
      ObjectClassId?: string | null;
      ProjectTypeSysName?: string | null;
      Folders?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      CaseInfo?: components["schemas"]["CaseMap.Modules.Activities.Presentation.CaseInfo"];
      CanUseAccessRequest?: boolean;
      HasProjectAccess?: boolean;
      FolderId?: string | null;
      ActivityType?: string | null;
      IsDetachedDisputeEvent?: boolean;
      IsAllowedComments?: boolean;
      Comments?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.EntityCommentsData"];
      AutomationScriptInfo?: components["schemas"]["CaseMap.Modules.Activities.Presentation.ShortAutomationScript"];
    };
    "CaseMap.Modules.Activities.Presentation.DayFeedSummaries<CaseMap.Modules.Activities.Presentation.FeedSummary>": {
      Date?: string;
      Result?:
        | components["schemas"]["CaseMap.Modules.Activities.Presentation.FeedSummary"][]
        | null;
    };
    "CaseMap.Modules.Activities.Presentation.YearFeedSummaries": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Activities.Presentation.DayFeedSummaries<CaseMap.Modules.Activities.Presentation.FeedSummary>"][]
        | null;
      Year?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.YearFeedSummaries>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Activities.Presentation.YearFeedSummaries"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Activities.Request.FavoriteFeedRequest": {
      FeedId: string;
      IsFavorite: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Reports.ReportFieldResponse": {
      Name?: string | null;
      Type?: string | null;
      Id?: string;
      LinkType?: string | null;
      FieldFormatSysName?: string | null;
      DisplayFormatSysName?: string | null;
      SysName?: string | null;
    };
    "CaseMap.Modules.Activities.Presentation.ProjectChangeDto": {
      Field?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Reports.ReportFieldResponse"];
      OldValue?: { [key: string]: any } | null;
      NewValue?: { [key: string]: any } | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.ProjectChangeDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Activities.Presentation.ProjectChangeDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.FeedSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Activities.Presentation.FeedSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Activities.Request.EntitySysNameTypeEnum":
      | "Task"
      | "Document";
    "CaseMap.Modules.Activities.Request.EntityFeedPagedRequest": {
      EntityId: string | null;
      EntitySysName: components["schemas"]["CaseMap.Modules.Activities.Request.EntitySysNameTypeEnum"];
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Activities.ActivityTypeEnum":
      | "TaskCreated"
      | "TaskUpdated"
      | "TaskOpened"
      | "TaskDocumentDownloaded"
      | "DocumentOpened"
      | "DocumentUpdated"
      | "DocumentCreated"
      | "DocumentFileDownloaded";
    "CaseMap.Modules.Activities.Presentation.EntityFeed": {
      Id?: string;
      Date?: string;
      Description?: string | null;
      ActivityType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Activities.ActivityTypeEnum"];
    };
    "CaseMap.Modules.Activities.Presentation.DayFeedSummaries<CaseMap.Modules.Activities.Presentation.EntityFeed>": {
      Date?: string;
      Result?:
        | components["schemas"]["CaseMap.Modules.Activities.Presentation.EntityFeed"][]
        | null;
    };
    "CaseMap.Modules.Activities.Presentation.YearEntityFeedSummaries": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Activities.Presentation.DayFeedSummaries<CaseMap.Modules.Activities.Presentation.EntityFeed>"][]
        | null;
      Year?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Activities.Presentation.YearEntityFeedSummaries>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Activities.Presentation.YearEntityFeedSummaries"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.CasebookEndpoint.FindFolderSides": {
      Name?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.CasebookEndpoint.AddSideToFolder": {
      Id?: number | null;
      Name?: string | null;
      Address?: string | null;
      Inn?: string | null;
      Ogrn?: string | null;
      Okpo?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.CasebookEndpoint.Models.ShortSide>": {
      Result?: components["schemas"]["CaseMap.Modules.CasebookEndpoint.Models.ShortSide"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.CasebookEndpoint.RemoveSidesFromFolder": {
      Ids: number[] | null;
    };
    "CaseMap.Modules.CasebookEndpoint.ImportSidesToFolder": {
      Data?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.FormatSettings.FormatSettingType":
      | "Name"
      | "Date"
      | "Time"
      | "Number";
    "CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto": {
      Id: string | null;
      Name?: string | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.FormatSettings.FormatSettingType"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.DayInterval": {
      StartDate?: string;
      EndDate?: string | null;
    };
    "CaseMap.Modules.GeneralSettings.Models.Localization.LocalizationItem": {
      Language?: string | null;
      Name?: string | null;
      FileId?: string | null;
      IsDefault?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.DayOfWeek": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      Order?: number;
      IndexNumber?: number;
      IsWorkingDay?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Models.TimeZoneModel": {
      WindowsId?: string | null;
      IanaId?: string | null;
      Id: string;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Language": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      Code?: string | null;
    };
    "CaseMap.Modules.GeneralSettings.Models.GeneralSettings.OwnerDto": {
      CompanyName?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.GeneralSettings.Models.Invitation.InvitationModel": {
      InviteLink?: string | null;
      AllowedDomains?: string | null;
      IsEnabled?: boolean;
    };
    "CaseMap.Modules.GeneralSettings.Models.GeneralSettings.IPFiltering.IPAddressRangeModel": {
      Address: string | null;
      Mask?: string | null;
    };
    "CaseMap.Modules.GeneralSettings.Models.GeneralSettings.IPFiltering.IPFilteringModel": {
      IsEnabled: boolean;
      List:
        | components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.IPFiltering.IPAddressRangeModel"][]
        | null;
    };
    "CaseMap.Modules.GeneralSettings.Models.GeneralSettings.V42.GeneralSettingModel": {
      WorkingDays:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameSummary"][]
        | null;
      NonWorkingDays?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.DayInterval"][]
        | null;
      Localizations?:
        | components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Localization.LocalizationItem"][]
        | null;
      SecuritySettingsFile?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Id: string | null;
      Currency?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Currency"];
      DayOfWeek?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.DayOfWeek"];
      TimeZone: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TimeZoneModel"];
      Language: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Language"];
      Owner: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.OwnerDto"];
      NameFormat: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto"];
      DateFormat: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto"];
      TimeFormat: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto"];
      NumberFormat: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.FormatSettingDto"];
      ProjectNumberTemplate: string | null;
      Invitation: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Invitation.InvitationModel"];
      IPFiltering: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.IPFiltering.IPFilteringModel"];
    };
    "CaseMap.Modules.GeneralSettings.Models.Subscriptions.SubscriptionModel": {
      TariffName?: string | null;
      TariffDescription?: string | null;
      MaxCases?: number | null;
      MaxUsers?: number | null;
      MaxCaseStorage?: number | null;
      MaxStorage?: number | null;
      NextPaymentDate?: string | null;
      CaseCost?: number | null;
      CreditCardLast4Digits?: string | null;
      CreditCardEndDate?: string | null;
      CardBrand?: string | null;
      ActiveCases?: number;
      NextPaymentAmount?: number | null;
      Currency?: string | null;
      ActiveUsers?: number;
      UsedStorage?: number;
    };
    "CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview": {
      GeneralSetting?: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.V42.GeneralSettingModel"];
      Subscription?: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.SubscriptionModel"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview>": {
      Result?: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.GeneralSettings.GeneralSettingOverview"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Interfaces.UserProvider.GroupAccessRequest": {
      GroupId: string;
      EntityTypeName?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.TIdNameObjectWithSysName<int>": {
      Id?: number;
      Name?: string | null;
      SysName?: string | null;
    };
    "CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess": {
      Id?: string | null;
      Entity?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Permission?: components["schemas"]["CaseDotStar.ServicePackages.Common.TIdNameObjectWithSysName<int>"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<int>": {
      Result?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectAttributeSuggestRequest": {
      SysName: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.UserInGroupModel": {
      Id?: string;
      DisplayName?: string | null;
      Email?: string | null;
      IsSystem?: boolean;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupFilterAttributeResponse": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      Type?: string | null;
      Values?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupFilters.GroupFilterPermissionResponse": {
      Id?: string | null;
      Permission?: components["schemas"]["CaseDotStar.ServicePackages.Common.TIdNameObjectWithSysName<int>"];
      GroupFilterAttributes?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupFilterAttributeResponse"][]
        | null;
      GroupFilterCustomAttributes?: { [key: string]: any }[] | null;
      EntitySysName?: string | null;
      ShowGroupFilterCustomAttributes?: boolean;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupResponse": {
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      GroupUsers?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserInGroupModel"][]
        | null;
      Managers?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserInGroupModel"][]
        | null;
      ProjectFolderFilterPermissions?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupFilters.GroupFilterPermissionResponse"];
      ProjectGroupFilterPermissions?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupFilters.GroupFilterPermissionResponse"];
      ProjectFilterPermissions?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupFilters.GroupFilterPermissionResponse"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.GroupResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.TRequiredIdNameObjectWithSysName<System.Nullable<int>>": {
      SysName: string | null;
      Id: number | null;
      Name: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupFilters.GroupFilterValueRequest": {
      Id: string | null;
      Name?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupFilters.GroupFilterAttributesRequest": {
      Id: string | null;
      Values?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupFilters.GroupFilterValueRequest"][]
        | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupFilters.GroupFilterPermissionRequest": {
      Id?: string | null;
      Permission?: components["schemas"]["CaseDotStar.ServicePackages.Common.TRequiredIdNameObjectWithSysName<System.Nullable<int>>"];
      GroupFilterAttributes?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupFilters.GroupFilterAttributesRequest"][]
        | null;
      GroupFilterCustomAttributes?: { [key: string]: any }[] | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupSaveRequest": {
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      GroupUsers?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Managers?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      ProjectFilterPermissions?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupFilters.GroupFilterPermissionRequest"];
      ProjectFolderFilterPermissions?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupFilters.GroupFilterPermissionRequest"];
      ProjectGroupFilterPermissions?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Requests.GroupFilters.GroupFilterPermissionRequest"];
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SingleGroupResponse": {
      Id?: string;
      Name?: string | null;
      Description?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SingleGroupResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SingleGroupResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.GroupsForUserModel": {
      Id?: string;
      Name?: string | null;
      IsSystem?: boolean;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.GroupLinkCommandModel": {
      ParentGroupIds?: string[] | null;
      ChildUserIds?: string[] | null;
      ChildGroupIds?: string[] | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.GroupModel": {
      Id?: string;
      SID?: string;
      Name?: string | null;
      CreateDate?: string;
      LastChangeDate?: string;
      IsExplicit?: boolean;
      IsSystem?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.GroupModel>>": {
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.GroupModel"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Request.UserOrGroupsSuggestRequestAll": {
      NotIncludeMyself?: boolean;
      OnlyUsers?: boolean;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.History.Data.HistoryRequest": {
      OperationTypeIds?: string[] | null;
      UserIds?: string[] | null;
      StartDate?: string | null;
      EndDate?: string | null;
      LastDaysDate?: number | null;
      EntityId?: string | null;
      EntityName?: string | null;
      SearchString?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.History.Data.IOperationType": {
      Id?: string;
      Name?: string | null;
      DisplayName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.History.Data.IOperationSubType": {
      Id?: string;
      Name?: string | null;
      DisplayName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.History.Data.IHistoryUserInfo": {
      Id?: string;
      Name?: string | null;
      Email?: string | null;
      IpAddress?: string | null;
      LoginDate?: string | null;
      LogoutDate?: string | null;
      Identifier?: string | null;
      Initials?: string | null;
      FileAvatarId?: string | null;
      Branch?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      IsAutomated?: boolean | null;
      DisplayName?: string | null;
      FirstName?: string | null;
      MiddleName?: string | null;
      LastName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.History.Data.IUserHistorySession": {
      Id?: string;
      UserId?: string;
      AspSessionId?: string | null;
      StartDate?: string | null;
      EndDate?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.History.Data.IEntityType": {
      Id?: string;
      Name?: string | null;
      DisplayName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.History.Data.IGroupedChangeDataRecord": {
      OperationType?: components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.IOperationType"];
      OperationSubType?: components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.IOperationSubType"];
      UserInfo?: components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.IHistoryUserInfo"];
      UserHistorySession?: components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.IUserHistorySession"];
      EntityType?: components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.IEntityType"];
      UserHistorySessionId?: string | null;
      UserId?: string;
      UserIp?: string | null;
      UserEmail?: string | null;
      InstanceDescription?: string | null;
      ChangeDescription?: string | null;
      ChangeDate?: string;
      EntityId?: string | null;
      IsAutomated?: boolean | null;
      IsEntityTitleDisplayed?: boolean;
      EntityTitle?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.History.Data.IGroupedChangeDataRecord>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.History.Data.IGroupedChangeDataRecord"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.History.Data.DetailHistoryRequest": {
      UserId?: string;
      OperationTypeId?: string;
      OperationSubTypeId?: string | null;
      EntityTypeId?: string | null;
      InstanceDescription?: string | null;
      ChangeDescription?: string | null;
      EntityId?: string | null;
      ChangeRoundDate?: string;
      UserSessionId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.Shell.Areas.History.Response.OperationTypeResponse": {
      Id?: string;
      Name?: string | null;
      DisplayName?: string | null;
    };
    "CaseDotStar.Shell.Areas.History.Response.OperationSubTypeResponse": {
      Id?: string;
      Name?: string | null;
      DisplayName?: string | null;
    };
    "CaseDotStar.Shell.Areas.History.Response.HistoryUserInfoResponse": {
      Id?: string;
      Name?: string | null;
      Email?: string | null;
      IpAddress?: string | null;
      LoginDate?: string | null;
      LogoutDate?: string | null;
      Identifier?: string | null;
      Initials?: string | null;
      FileAvatarId?: string | null;
      Branch?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      IsAutomated?: boolean | null;
      FirstName?: string | null;
      MiddleName?: string | null;
      LastName?: string | null;
      DisplayName?: string | null;
    };
    "CaseDotStar.Shell.Areas.History.Response.EntityTypeResponse": {
      Id?: string;
      Name?: string | null;
      DisplayName?: string | null;
    };
    "CaseDotStar.Shell.Areas.History.Response.EntityFieldResponse": {
      Id?: string;
      Name?: string | null;
      DisplayName?: string | null;
      DataType?: string | null;
      NestedEntityFieldId?: string | null;
    };
    "CaseDotStar.Shell.Areas.History.Response.ChangeDataRecordResponse": {
      Id?: string;
      OperationType?: components["schemas"]["CaseDotStar.Shell.Areas.History.Response.OperationTypeResponse"];
      OperationSubType?: components["schemas"]["CaseDotStar.Shell.Areas.History.Response.OperationSubTypeResponse"];
      UserInfo?: components["schemas"]["CaseDotStar.Shell.Areas.History.Response.HistoryUserInfoResponse"];
      UserId?: string;
      UserIp?: string | null;
      EntityType?: components["schemas"]["CaseDotStar.Shell.Areas.History.Response.EntityTypeResponse"];
      EntityField?: components["schemas"]["CaseDotStar.Shell.Areas.History.Response.EntityFieldResponse"];
      ChangeDate?: string;
      OldValue?: { [key: string]: any } | null;
      NewValue?: { [key: string]: any } | null;
      EntityId?: string | null;
      IsTwoValueDetail?: boolean;
      IsAutomated?: boolean | null;
      IsCustomTitle?: boolean;
      CustomTitle?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.History.Response.ChangeDataRecordResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.History.Response.ChangeDataRecordResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.Module.Commands.DeactivateUserApplication": {
      Id: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Module": {
      Id?: string | null;
      Title?: string | null;
      Description?: string | null;
      IsSystem?: boolean;
      Active?: boolean;
      Hidden?: boolean;
      Order?: number;
      HasFront?: boolean;
      HasSettings?: boolean;
      AuthorizeUrl?: string | null;
      IsSetup?: boolean;
      IsUserApplication?: boolean;
      Settings?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.ModuleGroup": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      Modules?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Module"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Database.Data.ModuleGroup>>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.ModuleGroup"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Models.UserApplicationGroup": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      Modules?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.UserApplication"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Models.UserApplicationGroup>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.UserApplicationGroup"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.Module.Models.InstallParam": {
      ModuleId?: string | null;
      Name?: string | null;
      Description?: string | null;
      Required?: boolean;
      Value?: string | null;
      AlreadyExists?: boolean;
      ValidationRegex?: string | null;
      IsDeleted?: boolean;
      Id?: string;
      CreationDate?: string | null;
      AuthorId?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      LastChangeDate?: string | null;
      LastModifedByUserId?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.Module.Models.InstallParam>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.InstallParam"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.GroupedListResponseModel<CaseDotStar.Shell.Areas.Module.Models.InstallParam>": {
      Response?: {
        [
          key: string
        ]: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.Module.Models.InstallParam>"];
      } | null;
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.Module.Models.InstallParam"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Criteria.FindIntakeFormsPaged": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem": {
      Id?: string | null;
      Name?: string | null;
      Description?: string | null;
      IsActive?: boolean;
      LastChangeDate?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      Link?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.CreateOrUpdateIntakeForm": {
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      IsActive?: boolean;
      VisualBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"][]
        | null;
      Effort?: number | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormDto"];
      ErrorData?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.VisualBlockValidationError"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.UpdateIntakeFormItem": {
      Id: string | null;
      Name: string | null;
      Description?: string | null;
      IsActive: boolean | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.Commands.CloneIntakeForm": {
      Id: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.IntakeForms.ViewModels.IntakeFormItem"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Requests.AssigneeUserSuggestRequest": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Responses.AssigneeUserSuggestResponse": {
      Id?: string;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.Responses.AssigneeUserSuggestResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.Responses.AssigneeUserSuggestResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.FindIntakeObjectsPaged": {
      StartDate?: string | null;
      EndDate?: string | null;
      AuthorIds?: string[] | null;
      IntakeFormIds?: string[] | null;
      StatusIds?: string[] | null;
      FullSearchString?: string | null;
      AssigneeIds?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectItem": {
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      Assignee?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      Id?: string;
      Number?: string | null;
      Status?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus"];
      LastSendDate?: string;
      IntakeForm?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ShortDescription?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Requests.UpdateIntakeObjectRequest": {
      Id: string | null;
      Assignee?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Status: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus"];
      Note?: string | null;
      Cases?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto": {
      Assignee?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      Id?: string;
      Status?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus"];
      LastSendDate?: string;
      IntakeForm?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      FormulaDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields"][]
        | null;
      Number?: string | null;
      ShortDescription?: string | null;
      Note?: string | null;
      LastCase?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Cases?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.App.IntakeForm.ViewModels.IntakeObjectDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Criteria.FindAllIntakeFormsPaged": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Commands.ChangeStatus": {
      IntakeObjectId: string | null;
      IntakeStatusId: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Commands.BulkDeleteIntakeObjects": {
      Ids: string[] | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Requests.BulkChangeStatusRequest": {
      IntakeObjectIds: string[] | null;
      IntakeStatusId: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Requests.BulkAssigneeRequest": {
      IntakeObjectIds: string[] | null;
      UserId: string | null;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Requests.UserSuggestRequest": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.App.IntakeForm.Criteria.FindIntakeStatuses": {
      IsManual?: boolean | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus>>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.IntakeStatus"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Interests.ViewModels.InterestDto": {
      Id?: string;
      Amount?: number;
      Date?: string;
      Description?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Timing.App.Interests.ViewModels.InterestDto>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Interests.ViewModels.InterestDto"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<string>": {
      Result?: string | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.LawPay.Models.ChargeInfo": {
      BillId: string | null;
      Amount: number | null;
      OneTimeToken: string | null;
    };
    "CaseMap.Modules.Timing.App.PaymentSources.PaymentSourceDto": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      IsCustom?: boolean | null;
    };
    "CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto": {
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      PaymentSource: components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.PaymentSourceDto"];
      SourceAccount?: components["schemas"]["CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto"];
      FromCaseAccount?: boolean;
    };
    "CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentProjectDto": {
      Project: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Amount?: number;
    };
    "CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto": {
      Id?: string;
      PaymentAndAccountSource?: components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto"];
      Account?: components["schemas"]["CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto"];
      Amount?: number;
      Date?: string;
      Projects?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentProjectDto"][]
        | null;
      Description?: string | null;
      CheckNumber?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.LawPay.Models.LawPayAccountSettings": {
      PublicKey?: string | null;
      RequiredPaymentFields?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountSettings>": {
      Result?: components["schemas"]["CaseMap.Modules.LawPay.Models.LawPayAccountSettings"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto": {
      LawPayAccount?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Account?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
    };
    "CaseMap.Modules.LawPay.Models.LawPaySettings": {
      LawPayAccounts?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"][]
        | null;
      Association?: components["schemas"]["CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPaySettings>": {
      Result?: components["schemas"]["CaseMap.Modules.LawPay.Models.LawPaySettings"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto>": {
      Result?: components["schemas"]["CaseMap.Modules.LawPay.Models.LawPayAccountAssociationDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto": {
      LawFirmId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.LEDES.ViewModels.SettingsDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.LEDES.Commands.SaveSettings": {
      LawFirmId: string | null;
    };
    "CaseMap.Modules.Timing.App.LEDES.Criteria.TimekeeperClassificationSuggestRequest": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.App.LEDES.ViewModels.TimekeeperClassDto": {
      Id?: string;
      Name?: string | null;
      Code?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.LEDES.ViewModels.TimekeeperClassDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.LEDES.ViewModels.TimekeeperClassDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.LEDES.Criteria.DownloadBillRequest": {
      BillId: string | null;
    };
    "CaseMap.Modules.Timing.App.LEDES.Data.DownloadBillResponse": {
      FileId?: string;
      FileUrl?: string | null;
      RequiredFields?: string[] | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.LEDES.Data.DownloadBillResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.LEDES.Data.DownloadBillResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObject>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Calls.MangoOffice.MangoOfficeActivate": {
      VpbxUrl: string | null;
      VpbxId: string | null;
      VpbxKey: string | null;
    };
    "CaseMap.Modules.MyArbitr.App.AccountRecourses.LinkRecource": {
      Id: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto": {
      Id?: string;
      CaseNumber?: string | null;
      Court?: string | null;
      Project?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ThroughLinkProjectSummary"];
      RecourceType?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      RecourceStatus?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      CreationDate?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>": {
      Result?: components["schemas"]["CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.MyArbitr.App.Accounts.FindArbitrAccount": {
      [key: string]: any;
    };
    "CaseMap.Modules.MyArbitr.App.Accounts.ArbitrAccountDto": {
      Login?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.MyArbitr.App.Accounts.ArbitrAccountDto>": {
      Result?: components["schemas"]["CaseMap.Modules.MyArbitr.App.Accounts.ArbitrAccountDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.MyArbitr.App.AccountRecourses.FindRecourcesByFilter": {
      ProjectId?: string | null;
      Name?: string | null;
      RecourceTypeIds?: string[] | null;
      RecourceStatusIds?: string[] | null;
      StartCreateDate?: string | null;
      EndCreateDate?: string | null;
      LastDaysCreateDate?: number | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.MyArbitr.App.AccountRecourses.RecourceDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Notes.Requests.CreateNoteRequest": {
      Text: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IsPrivate?: boolean;
      TimeLogs?: string[] | null;
    };
    "CaseMap.Modules.Notes.Responses.NoteResponse": {
      Id?: string;
      Text?: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      CreationDate?: string | null;
      LastModificationDate?: string | null;
      Editor?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      IsPrivate?: boolean;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Notes.Responses.NoteResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Notes.Requests.UpdateNoteRequest": {
      Id?: string;
      Text: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IsPrivate?: boolean;
    };
    "CaseMap.Modules.Notes.Requests.NotesPagedRequest": {
      StartCreationDate?: string | null;
      EndCreationDate?: string | null;
      Authors?: string[] | null;
      CaseIds?: string[] | null;
      SearchString?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Notes.Responses.NoteResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Notes.Responses.NoteResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Requests.Workflow.NotificationRecipientCreationSettingRequest": {
      UserId?: string | null;
      SchedulerUserRoleSysName?: string | null;
      VisualBlockProjectFieldId?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Requests.Workflow.NotificationCreationRequest": {
      NotificationCreationSettingId: string | null;
      Tag?: string | null;
      ProjectId?: string | null;
      RaiseEventAuthorId: string | null;
      Text?: string | null;
      Subject?: string | null;
      NotificationRecipientCreationSettings?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.NotificationRecipientCreationSettingRequest"][]
        | null;
      TaskId?: string | null;
      EntityId?: string | null;
      LastWaitActionId?: string | null;
      EntityFields?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.EntityFieldData"][]
        | null;
      ViewData?: { [key: string]: { [key: string]: any } } | null;
      Version?: number;
    };
    "CaseMap.Modules.Scheduler.App.Notifications.Criteria.GetNotificationTypesSuggest": {
      EntitySysName?: string | null;
      IsAllDay?: boolean;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Scheduler.Models.Responses.Notifications.NotificationTypesSuggestResponse": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      EntitySysName?: string | null;
      Minutes?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Scheduler.Models.Responses.Notifications.NotificationTypesSuggestResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Models.Responses.Notifications.NotificationTypesSuggestResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Models.UserNotificationType":
      | "Success"
      | "Error"
      | "Info"
      | "Attention";
    "CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters": {
      NotificationUserId: string | null;
      NotificationHeaderText: string | null;
      NotificationText: string | null;
      NotificationType: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.UserNotificationType"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.SingleUserNotificationParameters"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto": {
      Id?: string;
      Name?: string | null;
      Section?: string | null;
      Icon?: string | null;
      IsSystem?: boolean;
      SysName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.CreateObjectClass": {
      Name: string | null;
      Section: string | null;
      Icon: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Requests.UpdateObjectClass": {
      Id: string | null;
      Name: string | null;
      Section: string | null;
      Icon: string | null;
    };
    "CaseMap.Modules.Participants.Models.Requests.ParticipantsMergeRequest": {
      TargetParticipantId: string | null;
      SourceParticipantIds: string[] | null;
    };
    "CaseMap.Modules.Participants.Models.ParticipantsDeleteRequest": {
      DeleteParticipantIds?: string[] | null;
    };
    "CaseMap.Modules.Participants.Requests.ExcludeParticipantsFromProjectRequest": {
      Participants: string[] | null;
      ProjectId: string;
    };
    "CaseMap.Modules.Participants.DAL.Data.ParticipantsSearchRequest": {
      Projects?: string[] | null;
      RoleIds?: string[] | null;
      Types?: string[] | null;
      Organizations?: string[] | null;
      CompanyIds?: string[] | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      Names?: string[] | null;
      LegalFormIds?: string[] | null;
      PhoneNumbers?: string[] | null;
      Emails?: string[] | null;
      BeginDateOfBirth?: string | null;
      EndDateOfBirth?: string | null;
      INNs?: string[] | null;
      RegistrationNumbers?: string[] | null;
      Name?: string | null;
      ContextSearchString?: string | null;
      IgnoreProjectId?: string | null;
      BillableClients?: boolean | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Participants.Models.ParticipantWithCustomFields": {
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockResponse"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      Id?: string;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      CreationDate?: string;
      FirstName?: string | null;
      LastName?: string | null;
      MiddleName?: string | null;
      Organization?: string | null;
      DisplayName?: string | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"];
      LegalForm?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ContactDetail?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ContactDetail"];
      Country?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"];
      DateOfBirth?: string | null;
      RegistrationNumber?: string | null;
      INN?: string | null;
      OGRN?: string | null;
      OKPO?: string | null;
      KPP?: string | null;
      Company?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ParticipantCompany"];
      JobTitle?: string | null;
      Projects?:
        | components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantProjectSummary"][]
        | null;
      LEDESClientId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantWithCustomFields>": {
      Result?: components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantWithCustomFields"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Participants.Models.ParticipantsUpdateRequest": {
      FirstName?: string | null;
      LastName?: string | null;
      MiddleName?: string | null;
      Id?: string | null;
      Type: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"];
      Company?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ParticipantCompany"];
      Organization?: string | null;
      LegalForm?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Country?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"];
      ContactDetail?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ContactDetail"];
      DateOfBirth?: string | null;
      RegistrationNumber?: string | null;
      INN?: string | null;
      KPP?: string | null;
      OGRN?: string | null;
      OKPO?: string | null;
      IncludeInProjectId?: string | null;
      LEDESClientId?: string | null;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockRequest"][]
        | null;
      VisualBlockValueLines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineRequest"][]
        | null;
      JobTitle?: string | null;
    };
    "CaseMap.Modules.Participants.Models.ParticipantSummaryByRole": {
      ProjectSummary?: components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantProjectSummary"];
      Id?: string;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      CreationDate?: string;
      FirstName?: string | null;
      LastName?: string | null;
      MiddleName?: string | null;
      Organization?: string | null;
      DisplayName?: string | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"];
      LegalForm?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ContactDetail?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ContactDetail"];
      Country?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameNameEnObject"];
      DateOfBirth?: string | null;
      RegistrationNumber?: string | null;
      INN?: string | null;
      OGRN?: string | null;
      OKPO?: string | null;
      KPP?: string | null;
      Company?: components["schemas"]["CaseMap.Modules.Participants.Interfaces.Models.ParticipantCompany"];
      JobTitle?: string | null;
      Projects?:
        | components["schemas"]["CaseMap.Modules.Participants.DAL.Data.ParticipantProjectSummary"][]
        | null;
      LEDESClientId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummaryByRole>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantSummaryByRole"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Participants.DAL.Response.ParticipantProjectsResponse": {
      ParticipantProjectsId?: string;
      CreationDate?: string | null;
      Case?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Role?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.DAL.Response.ParticipantProjectsResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Participants.DAL.Response.ParticipantProjectsResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Participants.DAL.Data.GetParticipantProjectsRequest": {
      ParticipantId?: string;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Participants.DAL.Response.ParticipantProjectsResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Participants.DAL.Response.ParticipantProjectsResponse"][]
        | null;
      NextPageExists?: boolean;
    };
    "CaseMap.Modules.Participants.Models.ParticipantProjectRoleUpdateRequest": {
      ParticipantsProjectsId: string | null;
      RoleId: string | null;
    };
    "CaseMap.Modules.Participants.Models.ParticipantRoleSummary": {
      ParticipantProjectId?: string;
      Role?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantRoleSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantRoleSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Participants.Models.AddParticipantToProjectRequest": {
      ParticipantId?: string;
      ProjectId?: string;
      RoleInProject?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Participants.Models.ParticipantSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Participants.Models.ParticipantSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Participants.Requests.ExcludeParticipantFromProjectRequest": {
      ParticipantId: string | null;
      ProjectId: string | null;
    };
    "CaseMap.Modules.Participants.Models.Requests.EmployeesRequest": {
      ParticipantId: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Participants.Requests.SaveParticipantsEmailsRequest": {
      ParticipantsEmails?: { [key: string]: string } | null;
    };
    "CaseMap.Modules.Common.Responses.TwoLineSuggestResponse": {
      Description?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.TwoLineSuggestResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.TwoLineSuggestResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Participants.Models.Requests.IndividualsSuggestRequest": {
      FirstName?: string | null;
      LastName?: string | null;
      MiddleName?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Participants.DAL.Data.ParticipantsSuggestRequest": {
      IgnoreProjectId?: string | null;
      TypeIds?: string[] | null;
      ProjectIds?: string[] | null;
      IsClient?: boolean | null;
      RoleId?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Participants.DAL.View.ParticipantFilterItem": {
      Id?: string;
      Name?: string | null;
      Email?: string | null;
      Description?: string | null;
      TypeName?: string | null;
      TypeId?: string;
      RegistrationNumber?: string | null;
      CreationDate?: string | null;
      LastChangeDate?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Participants.DAL.View.ParticipantFilterItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Participants.DAL.View.ParticipantFilterItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Participants.Models.FullParticipantsSuggestRequest": {
      Type?: string | null;
      LastName?: string | null;
      Organization?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Participants.Models.Requests.ParticipantEmailsSuggestRequest": {
      Name?: string | null;
      IgnoreValues?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.App.Payments.Criteria.GetAllPaymentsByBillId": {
      BillId: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentDto"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Payments.Commands.PaymentUpdate": {
      Id: string | null;
      PaymentAndAccountSource: components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto"];
      Account: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Amount?: number;
      Date?: string;
      Projects?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentProjectDto"][]
        | null;
      Description?: string | null;
      CheckNumber?: string | null;
    };
    "CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentTotalsDto": {
      TotalPayment?: number;
      BalanceDue?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentTotalsDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentTotalsDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Payments.ViewModels.ProjectTotalDueDto": {
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Amount?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.ProjectTotalDueDto[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.ProjectTotalDueDto"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Payments.Commands.PaymentCreate": {
      Bill: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      PaymentAndAccountSource: components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto"];
      Account: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Amount?: number;
      Date?: string;
      Projects?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.PaymentProjectDto"][]
        | null;
      Description?: string | null;
      CheckNumber?: string | null;
    };
    "CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentDto": {
      Id?: string | null;
      PaymentSource: components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.PaymentSourceDto"];
      Account: components["schemas"]["CaseMap.Modules.Timing.App.Accounts.ViewModels.AccountDto"];
      Amount: number | null;
      Date: string | null;
    };
    "CaseMap.Modules.Timing.App.Payments.Commands.SaveTrustPayments": {
      TrustPayments:
        | components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentDto"][]
        | null;
      Participant: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentsResponse": {
      TrustPayments?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentDto"][]
        | null;
      UsedForPaymentsAmount?: number;
      TotalReceivedAmount?: number;
      AvailableAmount?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentsResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.Payments.ViewModels.TrustPaymentsResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentSourceSuggestRequest": {
      ParticipantId?: string | null;
      ProjectId?: string | null;
      AccountTypeSysNames?: string[] | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.PaymentSources.ViewModels.PaymentAndAccountSourceDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingResponse": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      Email?: boolean;
      UI?: boolean;
      Digest?: boolean;
    };
    "CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingGroupResponse": {
      Name?: string | null;
      SysName?: string | null;
      NotificationSettings?:
        | components["schemas"]["CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingResponse"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingGroupResponse[]>": {
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingGroupResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingRequest": {
      Id: string | null;
      Email?: boolean;
      UI?: boolean;
      Digest?: boolean;
      Name?: string | null;
      SysName?: string | null;
      ProjectId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Models.NotificationSettings.NotificationSettingResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectAccessRequestRequest": {
      ProjectId: string | null;
      ActivityId: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Data.AccessRequestState":
      | "Opened"
      | "Approved"
      | "Disapproved";
    "CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse": {
      Id?: string;
      User?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      Project?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      State?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Data.AccessRequestState"];
      ProjectGroupName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectAccessRequestResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.TRequiredIdNameObject<int>": {
      Id: number;
      Name: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectAccessRequestUpdateReuest": {
      RightTemplate: components["schemas"]["CaseDotStar.ServicePackages.Common.TRequiredIdNameObject<int>"];
      Id: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectAccessRequestUpdateRequestBase": {
      Id: string | null;
    };
    "CaseMap.Modules.Projects.Requests.MergeProjectRequest": {
      SourceProjectIds: string[] | null;
      TargetProjectId: string | null;
      EntityTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"][]
        | null;
    };
    "CaseMap.Modules.Projects.Requests.MoveToProjectGroupRequest": {
      ProjectId: string | null;
      ProjectGroupId?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.MoveCaseToProjectFolderRequest": {
      ProjectId: string | null;
      ProjectFolderId?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Requests.SetResponsibleBulkProjectRequest": {
      Responsible: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      ProjectIds: string[] | null;
    };
    "CaseMap.Modules.Projects.App.Projects.BulkProjectOperationRequest": {
      ProjectIds: string[] | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.FindProjectAuthorSuggestByFilter": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse": {
      Award?: number | null;
      Rate?: number | null;
      Earned?: number | null;
      ShowPanel?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.ProjectAwards.ProjectAwardSaveRequest": {
      ProjectId: string | null;
      Award: number | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ResendInviteProjectClientRequest": {
      ClientId: string | null;
      CaseId: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient": {
      CaseId?: string;
      LastLoginDate?: string | null;
      Id?: string | null;
      DeleteDate?: string | null;
      Email?: string | null;
      LastName?: string | null;
      FirstName?: string | null;
      MiddleName?: string | null;
      DisplayName?: string | null;
      IsDeleted?: boolean | null;
      IsLocked?: boolean | null;
      IsValidated?: boolean | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.CreateProjectClientRequest": {
      CaseId: string | null;
      Email: string | null;
      LastName: string | null;
      FirstName: string | null;
      MiddleName?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectClientSuggestRequestAll": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectClientSuggestResponse": {
      DisplayName?: string | null;
      Name?: string | null;
      Id?: string;
      Email?: string | null;
      LastLoginDate?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectClientSuggestResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectClientSuggestResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.Projects.CopyProject": {
      ProjectId?: string;
      Name?: string | null;
      ProjectTypeId?: string | null;
      CopyEntityTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Guid>": {
      Result?: string;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectVisualBlockResponse": {
      Id?: string;
      VisualBlockId?: string;
      Lines?:
        | components["schemas"]["CaseMap.Modules.Projects.Models.VisualBlocks.ProjectLineSummary"][]
        | null;
      FrontOrder?: number;
      TempId?: string | null;
      Name?: string | null;
      Order?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.StageAdditionalInformationItemSummary": {
      Id?: string | null;
      TempId?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectStageSummary": {
      Id?: string | null;
      Name: string | null;
      Color: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      HiddenVisualBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.IdTempIdObject"][]
        | null;
      AdditionalInfo?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.StageAdditionalInformationItemSummary"][]
        | null;
    };
    "CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse": {
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectVisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
      FormulaDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields"][]
        | null;
      ProjectTypeStages?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectStageSummary"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectAllVisualBlocksResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectTabBaseResponse": {
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectVisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
      FormulaDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectTabBaseResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectTabBaseResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterFieldsRequest": {
      RootViewName: string | null;
      VisualBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"][]
        | null;
      EntityId?: string | null;
      EntityTypeId?: string | null;
      IgnoreTempIds?: string[] | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Interfaces.Requests.Suggests.ProjectFieldFilterValuesRequest": {
      FieldId?: string | null;
      FieldTempId?: string | null;
      Stages?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectStageSummary"][]
        | null;
      VisualBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"][]
        | null;
      EntityId?: string | null;
      EntityTypeId?: string | null;
      Name?: string | null;
      IgnoreValues?: string[] | null;
      RootViewName: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Interfaces.Enums.ProjectFieldsRequestEntityType":
      | "ProjectType"
      | "RegisterTemplate"
      | "IntakeForm"
      | "AdditionalAttribute";
    "CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedProjectFieldFormat": {
      Childrens?: { [key: string]: any }[] | null;
      ParentId?: string | null;
      SysName?: string | null;
      Id: string;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedProjectFieldFormat>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedProjectFieldFormat"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectFileds.ProjectFieldRequestBase": {
      Name: string | null;
      PlaceholderText: string | null;
      ProjectFieldFormat: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.DictionaryProjectFieldFormat"];
      Source?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.IdTempIdObject"];
      Value?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ValueField"];
      CalculationFormulas?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      TemplateNumber?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      ParticipantRoleInProject?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Tag?: string | null;
      DictionaryLevel?: number | null;
      Code?: string | null;
      TempId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.ProjectFieldResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Requests.ShortProjectFieldRequest": {
      Id?: string | null;
      Name: string | null;
      ProjectFieldFormat: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.DictionaryProjectFieldFormat"];
      TempId?: string | null;
      DictionaryLevel?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Requests.ShortProjectFieldRequest>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Requests.ShortProjectFieldRequest"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.Suggests.ProjectFieldsSuggestPagedRequest": {
      OnlySimpleFormats?: boolean | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectFieldSuggestResponse": {
      PlaceholderText?: string | null;
      Description?: string | null;
      ProjectFieldFormat?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      TemplateNumber?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      SysName?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectFieldSuggestResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectFieldSuggestResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Requests.Workflow.ProjectFillingRequest": {
      ProjectFillingSettingId: string | null;
      ProjectId: string | null;
      RaiseEventAuthorId: string | null;
      Value?: string | null;
    };
    "CaseMap.Modules.Common.Responses.DataFields.FieldResponse": {
      Type?: string | null;
      Childrens?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.FieldResponse"][]
        | null;
      Opened?: boolean;
      NameFilterMatch?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.StringFilterMatch"];
      IsLeaf?: boolean;
      RootGroupId?: string;
      ReportFieldType?: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
      ParentId?: string | null;
      HierarchyNames?: string[] | null;
      SysName?: string | null;
      FieldFormatSysName?: string | null;
      TopLevelFieldFormatSysName?: string | null;
      DictionarySysName?: string | null;
      Page?: number;
      NextPageExists?: boolean;
      TempId?: string | null;
      ParentTempId?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.FieldResponse"][]
        | null;
      NextPageExists?: boolean;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectFilterFieldResponse": {
      Type?: string | null;
      ReportFieldType?: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
      SysName?: string | null;
      RootGroupId?: string;
      ParentId?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Requests.Filter.FilterSuggestRequest": {
      FilterId: string;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Interfaces.Responses.Filter.FilterSuggestResponse": {
      Id?: string | null;
      Name?: string | null;
      Description?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseMap.Modules.Projects.Interfaces.Responses.Filter.FilterSuggestResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Responses.Filter.FilterSuggestResponse"][]
        | null;
      NextPageExists?: boolean;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.Sharing.DataSharedUserOrGroupRequest": {
      Object: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse"];
      Permission?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission"];
      DataId: string;
      IsAuto?: boolean;
      IsRequest?: boolean;
    };
    "CaseMap.Modules.Projects.Models.GroupProject.DataUpdateSharedUsersAndGroupsRequest": {
      DataId: string;
      SharedUsersAndGroups?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.Sharing.DataSharedUserOrGroupRequest"][]
        | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse": {
      IsAuto?: boolean;
      IsEditable?: boolean;
      IsResponsible?: boolean;
      IsAuthor?: boolean;
      IsRequest?: boolean;
      Object: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse"];
      Permission?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission"];
      DataId: string;
    };
    "CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse>": {
      TotalCount?: number;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto": {
      Id?: string;
      Name?: string | null;
      SharedUsersExists?: boolean;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      ParentId?: string | null;
      ObjectClass?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.FindProjectFolderAllByPermission": {
      Permission?: components["schemas"]["CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum"];
      ParentId?: string | null;
      ObjectClassId?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem": {
      HasChildren?: boolean;
      IsLeaf?: boolean;
      Opened?: boolean;
      Items?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem"][]
        | null;
      Id?: string;
      Name?: string | null;
      SharedUsersExists?: boolean;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      ParentId?: string | null;
      ObjectClass?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderListItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.RenameProjectFolder": {
      Id: string | null;
      Name: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.CreateProjectFolder": {
      Name: string | null;
      ParentId?: string | null;
      ObjectClass?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.Criteria.SuggestProjectFolders": {
      Name?: string | null;
      ObjectClassId?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderSuggestDto": {
      Id?: string;
      Name?: string | null;
      IsLeaf?: boolean;
      Opened?: boolean;
      Items?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderSuggestDto"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderSuggestDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ViewModels.ProjectFolderSuggestDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.MoveProjectGroup": {
      ProjectGroupId: string | null;
      ProjectFolderId: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Requests.PermissionsSuggestRequest": {
      Name?: string | null;
      Ids?: number[] | null;
      IgnoreIds?: number[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupAll": {
      IsArchive?: boolean | null;
      ObjectClassId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto": {
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      IsArchive?: boolean;
      ProjectFolder?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectFolders.ProjectFolderDto"];
      ObjectClass?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.ProjectGroupDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.CreateOrUpdateProjectGroup": {
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      ProjectFolder: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectGroups.FindProjectGroupByFilter": {
      NoArchive?: boolean | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Handlers.GetProjectGroupsSuggest": {
      FolderId: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Services.BasicImplementation.DataField": {
      Id?: string | null;
      SysName?: string | null;
      ReportFieldType?: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
    };
    "CaseDotStar.ServicePackages.Common.Services.Data.PeriodType":
      | "Today"
      | "Yesterday"
      | "ThisWeek"
      | "ThisMonth";
    "CaseDotStar.ServicePackages.Common.Services.BasicImplementation.DateFilter": {
      StartDate?: string | null;
      EndDate?: string | null;
      LastDaysCount?: number | null;
      PeriodType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Services.Data.PeriodType"];
    };
    "CaseMap.Modules.Projects.Requests.DataFieldFilterRequest": {
      DataField?: components["schemas"]["CaseDotStar.ServicePackages.Common.Services.BasicImplementation.DataField"];
      SearchValues?: string[] | null;
      IgnoreValues?: string[] | null;
      BeginValue?: string | null;
      EndValue?: string | null;
      DateFilter?: components["schemas"]["CaseDotStar.ServicePackages.Common.Services.BasicImplementation.DateFilter"];
    };
    "CaseMap.Modules.Projects.App.Projects.GetProjectsRequest": {
      FolderId?: string | null;
      Filters?:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.DataFieldFilterRequest"][]
        | null;
      FullSearchString?: string | null;
      ObjectClassId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Responses.ProjectGroupResponse": {
      Id?: string | null;
      Name?: string | null;
      Description?: string | null;
      IsArchive?: boolean;
      IsUnsorted?: boolean;
    };
    "CaseMap.Modules.Projects.Interfaces.Models.ShortUserSummary": {
      DisplayName?: string | null;
      Email?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Projects.Responses.ProjectResponse": {
      Id?: string;
      Name?: string | null;
      Number?: string | null;
      ProjectGroup?: components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectGroupResponse"];
      ProjectType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Author?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ShortUserSummary"];
      Responsible?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      CreationDate?: string | null;
      IsArchive?: boolean | null;
      Permission?: components["schemas"]["CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum"];
    };
    "CaseMap.Modules.Projects.Responses.GroupedProjectResponse": {
      ProjectGroupResponse?: components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectGroupResponse"];
      Projects?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectResponse"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.GroupedProjectResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.GroupedProjectResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.Projects.ShortTabSummary": {
      Id?: string;
      Name?: string | null;
      IsSystem?: boolean;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
    };
    "CaseMap.Modules.Projects.App.Projects.ProjectTypeSummary": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      Tabs?:
        | components["schemas"]["CaseMap.Modules.Projects.App.Projects.ShortTabSummary"][]
        | null;
    };
    "CaseMap.Modules.Projects.App.Projects.ProjectSummary": {
      CreationDate?: string | null;
      ChangeDate?: string | null;
      StartDate?: string | null;
      Description?: string | null;
      IsArchive?: boolean;
      LastSyncDate?: string | null;
      Permission?: components["schemas"]["CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum"];
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      IsSubscribed?: boolean;
      ObjectClass?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
      Id?: string;
      Name?: string | null;
      Number?: string | null;
      ProjectType?: components["schemas"]["CaseMap.Modules.Projects.App.Projects.ProjectTypeSummary"];
      Parent?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      ProjectGroup?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      ProjectFolder?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      IsCreatedAutomatically?: boolean;
      CasebookNumber?: string | null;
      DocumentFolderId?: string;
      DocumentFolderName?: string | null;
      Responsible?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      Stage?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.Projects.ProjectSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.App.Projects.ProjectSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.Projects.ProjectsCustomBlockSummary": {
      Id?: string | null;
      VisualBlockId: string | null;
      Lines?:
        | components["schemas"]["CaseMap.Modules.Projects.Models.VisualBlocks.ProjectLineSummary"][]
        | null;
      TempId?: string | null;
    };
    "CaseMap.Modules.Projects.App.Projects.UpdateProjectWithBlocks": {
      Blocks:
        | components["schemas"]["CaseMap.Modules.Projects.App.Projects.ProjectsCustomBlockSummary"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Number?: string | null;
      Stage: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Id: string | null;
      Name: string | null;
      Description?: string | null;
      IsArchive?: boolean | null;
      Responsible: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      StartDate?: string | null;
      CasebookId?: string | null;
      CasebookNumber?: string | null;
      CasebookCaseInfoId?: string | null;
      LastSyncDate?: string | null;
    };
    "CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks": {
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectVisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      FormulaDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
      CreationDate?: string | null;
      ChangeDate?: string | null;
      StartDate?: string | null;
      Description?: string | null;
      IsArchive?: boolean;
      LastSyncDate?: string | null;
      Permission?: components["schemas"]["CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum"];
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      IsSubscribed?: boolean;
      ObjectClass?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
      Id?: string;
      Name?: string | null;
      Number?: string | null;
      ProjectType?: components["schemas"]["CaseMap.Modules.Projects.App.Projects.ProjectTypeSummary"];
      Parent?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      ProjectGroup?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      ProjectFolder?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      IsCreatedAutomatically?: boolean;
      CasebookNumber?: string | null;
      DocumentFolderId?: string;
      DocumentFolderName?: string | null;
      Responsible?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      Stage?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Models.Projects.ProjectSummaryWithBlocks"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.Projects.CreateProjectRequest": {
      Name: string | null;
      ProjectType: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      Parent?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      RelatedObjectId?: string | null;
      ProjectGroup?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      ProjectFolder?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      CasebookId?: string | null;
      CasebookNumber?: string | null;
      CasebookCaseInfoId?: string | null;
      Responsible: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IntakeObjectId?: string | null;
      IsCreatedAutomatically?: boolean;
    };
    "CaseMap.Modules.Projects.App.Projects.UpdateProject": {
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Number?: string | null;
      Stage: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Id: string | null;
      Name: string | null;
      Description?: string | null;
      IsArchive?: boolean | null;
      Responsible: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      StartDate?: string | null;
      CasebookId?: string | null;
      CasebookNumber?: string | null;
      CasebookCaseInfoId?: string | null;
      LastSyncDate?: string | null;
    };
    "CaseMap.Modules.Projects.App.Projects.Commands.UpdateCustomProjectTab": {
      Id: string | null;
      ProjectTypeTabId: string | null;
      Blocks:
        | components["schemas"]["CaseMap.Modules.Projects.App.Projects.ProjectsCustomBlockSummary"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
    };
    "CaseMap.Modules.Projects.Controllers.CustomTabResponse": {
      ProjectTypeTabId?: string | null;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.VisualBlocks.ProjectVisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      FormulaDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
      CreationDate?: string | null;
      ChangeDate?: string | null;
      StartDate?: string | null;
      Description?: string | null;
      IsArchive?: boolean;
      LastSyncDate?: string | null;
      Permission?: components["schemas"]["CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum"];
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      IsSubscribed?: boolean;
      ObjectClass?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
      Id?: string;
      Name?: string | null;
      Number?: string | null;
      ProjectType?: components["schemas"]["CaseMap.Modules.Projects.App.Projects.ProjectTypeSummary"];
      Parent?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      ProjectGroup?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      ProjectFolder?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      IsCreatedAutomatically?: boolean;
      CasebookNumber?: string | null;
      DocumentFolderId?: string;
      DocumentFolderName?: string | null;
      Responsible?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      Stage?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.CustomTabResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Controllers.CustomTabResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ProjectSettings.CaseBudget": {
      IncludeExpenses?: boolean;
      Amount?: number;
      Limit?: number | null;
      IsNotificationsEnabled?: boolean;
      Enabled: boolean | null;
      Recipients?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectUsers.UserDto"][]
        | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectSettings.CaseRequestItemDto": {
      CaseRequestState?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      DomainOwnerName?: string | null;
      Participant?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      FilesCount?: number;
      Id?: string;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectSettings.CaseRequestsListDto": {
      Items?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectSettings.CaseRequestItemDto"][]
        | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      CaseRequestStates?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"][]
        | null;
      Error?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Timing.BillingType": {
      SysName?: string | null;
      IsCustom?: boolean | null;
      Name?: string | null;
      IsDeleted?: boolean;
      Id?: string;
      CreationDate?: string | null;
      AuthorId?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      LastChangeDate?: string | null;
      LastModifedByUserId?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectSettings.ViewModels.ProjectSettingsBillingDto": {
      Id?: string;
      BillingType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Timing.BillingType"];
      BillingAmount?: number | null;
      BillingAmountPercent?: number | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse": {
      ProjectId?: string;
      Budget?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectSettings.CaseBudget"];
      SharedUsersAndGroups?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse"][]
        | null;
      ProjectClients?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClient"][]
        | null;
      BillingRules?:
        | components["schemas"]["CaseMap.Modules.Timing.Interfaces.Models.BillingRuleResponse"][]
        | null;
      CaseRequests?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectSettings.CaseRequestsListDto"];
      ProjectSettingsBilling?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectSettings.ViewModels.ProjectSettingsBillingDto"];
      LEDESClientCaseId?: string | null;
      LEDESLawFirmCaseId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Responses.ProjectSettingsResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClientInfo": {
      Id?: string | null;
      Email?: string | null;
      LastName?: string | null;
      FirstName?: string | null;
      MiddleName?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.ProjectSettings.Commands.UpdateProjectSettingsBilling": {
      ProjectId?: string | null;
      BillingType: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      BillingAmount?: number | null;
      BillingAmountPercent?: number | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectSettingsSaveRequest": {
      ProjectId?: string;
      Budget?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectSettings.CaseBudget"];
      SharedUsersAndGroups?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.Sharing.DataSharedUserOrGroupRequest"][]
        | null;
      ProjectClients?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectClientInfo"][]
        | null;
      DeletedClients?: string[] | null;
      BillingRules?:
        | components["schemas"]["CaseMap.Modules.Timing.Interfaces.Models.BillingRuleUpdateRequest"][]
        | null;
      ProjectSettingsBilling?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectSettings.Commands.UpdateProjectSettingsBilling"];
      CaseRequests?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectSettings.CaseRequestsListDto"];
      LEDESClientCaseId?: string | null;
      LEDESLawFirmCaseId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ExtendedSharedUserOrGroupResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.Projects.Criteria.FindProjectSuggestByFilter": {
      Permission?: components["schemas"]["CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum"];
      TypeSysNames?: string[] | null;
      NoArchive?: boolean;
      ObjectClassId?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem": {
      Id?: string;
      Name?: string | null;
      ProjectTypeId?: string;
      ProjectGroupId?: string | null;
      DocumentFolderId?: string;
      DocumentFolderName?: string | null;
      ParentFolder?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      IsArchive?: boolean;
      Client?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.Projects.ProjectSuggestItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Models.Suggest.ProjectWithBalanceSuggestRequest": {
      ClientId: string | null;
      AccountId: string | null;
      Name?: string | null;
      Permission?: components["schemas"]["CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum"];
      HideWithoutBalance?: boolean;
      NoArchive?: boolean;
    };
    "CaseMap.Modules.Projects.Models.ProjectWithBalanceDto": {
      Balance?: number;
      IsClientBalance?: boolean;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Models.ProjectWithBalanceDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Models.ProjectWithBalanceDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.RelatedObjects.Criteria.GetProjectLinkObjectsSuggest": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.App.RelatedObjects.LinkObjectType":
      | "Project"
      | "IntakeForm";
    "CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto": {
      Id: string | null;
      Name?: string | null;
      Type?: components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.LinkObjectType"];
      Description?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.TabResponse": {
      Id?: string | null;
      Name: string | null;
      IsSystem?: boolean;
      VisualBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      Type: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
      TempId?: string | null;
    };
    "CaseMap.Modules.Projects.Responses.ProjectTypes.ProjectTypeDocumentFolderResponse": {
      Id?: string;
      Name?: string | null;
      ParentId?: string | null;
    };
    "CaseMap.Modules.Projects.Responses.ProjectTypeResponse": {
      Blocks?: string[] | null;
      Description?: string | null;
      IsDeleted?: boolean;
      Abbreviation?: string | null;
      Tabs?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.TabResponse"][]
        | null;
      DocumentFolders?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectTypes.ProjectTypeDocumentFolderResponse"][]
        | null;
      CreationDate?: string | null;
      LastChangeDate?: string | null;
      LastEditor?: string | null;
      IsSystem?: boolean;
      SectionId?: string;
      Stages?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectStageSummary"][]
        | null;
      Effort?: number | null;
      ObjectClass?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
      SysName?: string | null;
      Id: string;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectTypeResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse": {
      Description?: string | null;
      IsDeleted?: boolean;
      Abbreviation?: string | null;
      Tabs?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.TabResponse"][]
        | null;
      DocumentFolders?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectTypes.ProjectTypeDocumentFolderResponse"][]
        | null;
      CreationDate?: string | null;
      LastChangeDate?: string | null;
      LastEditor?: string | null;
      IsSystem?: boolean;
      SectionId?: string;
      Stages?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectStageSummary"][]
        | null;
      Effort?: number | null;
      ObjectClass?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
      SysName?: string | null;
      Id: string;
      Name?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectTypes.ProjectTypeDocumentFolderRequest": {
      Id: string | null;
      Name?: string | null;
      ParentId?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectTypeRequestBase": {
      Name: string | null;
      Description?: string | null;
      Abbreviation: string | null;
      DocumentFolders?:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypes.ProjectTypeDocumentFolderRequest"][]
        | null;
      Stages?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectStageSummary"][]
        | null;
      Effort?: number | null;
      ObjectClass?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.TabRequest": {
      Id?: string | null;
      Name: string | null;
      IsSystem?: boolean;
      VisualBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"][]
        | null;
      Type: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
      TempId?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectTypeRequest": {
      Id?: string;
      Tabs:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.TabRequest"][]
        | null;
      Name: string | null;
      Description?: string | null;
      Abbreviation: string | null;
      DocumentFolders?:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.ProjectTypes.ProjectTypeDocumentFolderRequest"][]
        | null;
      Stages?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectStageSummary"][]
        | null;
      Effort?: number | null;
      ObjectClass?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse"];
      ErrorData?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.VisualBlockValidationError"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Projects.VisualBlocks.VisualBlockProjectField": {
      IsDeleted?: boolean;
      Id?: string;
      CreationDate?: string | null;
      AuthorId?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      LastChangeDate?: string | null;
      LastModifedByUserId?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Projects.CustomBlocks.LineType": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Projects.VisualBlocks.BlockLine": {
      Id?: string;
      VisualBlockId?: string;
      VisualBlock?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.VisualBlock"];
      LineTypeId?: string;
      Order?: number;
      VisualBlockProjectFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.VisualBlocks.VisualBlockProjectField"][]
        | null;
      LineType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.CustomBlocks.LineType"];
      IsDeleted?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Projects.VisualBlock": {
      Id?: string;
      NameInConstructor?: string | null;
      SysName?: string | null;
      NameInProject?: string | null;
      IsSystem?: boolean;
      Description?: string | null;
      IsRepeatable?: boolean;
      IsDeleted?: boolean;
      IsEntity?: boolean;
      IsUneditable?: boolean;
      BlockLines?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.VisualBlocks.BlockLine"][]
        | null;
      NameTags?: string[] | null;
      TempId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Projects.ProjectType": {
      Name?: string | null;
      Description?: string | null;
      SysName?: string | null;
      VisualBlocks?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.VisualBlock"][]
        | null;
      Abbreviation?: string | null;
      IsSystem?: boolean;
      IsDeleted?: boolean;
      Id?: string;
      CreationDate?: string | null;
      AuthorId?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
      LastChangeDate?: string | null;
      LastModifedByUserId?: string | null;
      LastModifedByUser?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.User"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Database.Data.Projects.ProjectType>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.ProjectType"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.ProjectTypeSuggestRequest": {
      ShowDeletedTypes?: boolean | null;
      IsSupportRelationProject?: boolean | null;
      IgnoreHidden?: boolean | null;
      ObjectClassId?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectTypeItemResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.ProjectTypes.Criteria.CloneObjectType": {
      Id: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Responses.ProjectTypeResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectTypeResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.ProjectTypes.FindProjectTypeSuggest": {
      ObjectClassId?: string | null;
      ShowDeletedTypes?: boolean | null;
      IsSupportRelationProject?: boolean | null;
      IgnoreHidden?: boolean | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.ProjectTypes.FindProjectTypeSuggestByParentId": {
      ParentId?: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Requests.ProjectUsersAndClientsSuggestRequest": {
      ProjectId: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Models.RegisterObjectSummary": {
      Id?: string | null;
      RegisterTemplate: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary"][]
        | null;
      Name?: string | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
      DocumentFolderId?: string;
      DocumentFolderName?: string | null;
    };
    "CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata": {
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      FormulaDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields"][]
        | null;
      KeyFieldId?: string;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      Id?: string | null;
      RegisterTemplate: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.CustomBlockSummary"][]
        | null;
      Name?: string | null;
      Images?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ImageSummary"][]
        | null;
      DocumentFolderId?: string;
      DocumentFolderName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Controllers.VisualBlocks.CustomValues.RegisterObjectWithMetadata"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.RegisterObjects.GetListOfRegisterObjectsRequest": {
      RegisterTemplateId: string | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Repositories.QueryBuilders.ValueDto": {
      VisualBlockProjectFieldId?: string;
      Value?: { [key: string]: any } | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.RegisterObjects.RegisterObjectItem": {
      Id?: string;
      Values?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Repositories.QueryBuilders.ValueDto"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.RegisterObjects.RegisterObjectItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.RegisterObjects.RegisterObjectItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegistersPaged": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.ExtendedTableFieldDto": {
      Field?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockLineItemResponse"];
      IsKeyField?: boolean;
      Width?: number | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTableFieldsMetadata": {
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      TableFields?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.ExtendedTableFieldDto"][]
        | null;
      FormulaDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FormulaWithInputFields"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      DocumentFolderId?: string;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTableFieldsMetadata>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTableFieldsMetadata"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.FindRegisterTemplatesPaged": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.TableFields.ViewModels.ObjectFieldDto": {
      BlockName?: string | null;
      Name?: string | null;
      Id?: string | null;
      TempId?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.TableFields.ViewModels.TableFieldDto": {
      Field: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.TableFields.ViewModels.ObjectFieldDto"];
      IsKeyField?: boolean;
      Width: number | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto": {
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      LastEditorDisplayName?: string | null;
      LastChangeDate?: string | null;
      CreationDate?: string | null;
      VisualBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      TableFields?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.TableFields.ViewModels.TableFieldDto"][]
        | null;
      DocumentFolderId?: string;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.CreateOrUpdateRegisterTemplate": {
      Id?: string | null;
      Name: string | null;
      Description?: string | null;
      VisualBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequest"][]
        | null;
      TableFields?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.TableFields.ViewModels.TableFieldDto"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModelWithVisualBlockValidation<CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.RegisterTemplates.RegisterTemplateDto"];
      ErrorData?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.VisualBlockValidationError"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Projects.RelationType":
      | "ProjectToProjects"
      | "ProjectToIntakeObjects"
      | "IntakeObjectToProjects";
    "CaseMap.Modules.Projects.App.RelatedObjects.SaveRelatedObjects": {
      Id: string | null;
      Type?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.RelationType"];
      RelatedObjects:
        | components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.App.RelatedObjects.ViewModels.RelatedObjectDto"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.App.ReportCatalogs.Commands.CreateReportFolder": {
      Name: string | null;
      ParentId?: string | null;
    };
    "CaseMap.Modules.Reports.App.ReportCatalogs.Criteria.GetReportFolderContent": {
      FolderId?: string | null;
      Name?: string | null;
      StartCreationDate?: string | null;
      EndCreationDate?: string | null;
      StartUpdateDate?: string | null;
      EndUpdateDate?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.ReportListItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Controllers.ReportCatalogItemToAction": {
      Id: string | null;
      EntityType: components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.ReportListEntityTypeEnum"];
    };
    "CaseMap.Modules.Reports.Controllers.FindDestinationReportFolders": {
      ExcludeFolders?: string[] | null;
      FolderId?: string | null;
    };
    "CaseMap.Modules.Reports.Controllers.MoveDestinationReportFolderDto": {
      Id?: string;
      Name?: string | null;
      IsSystem?: boolean;
      HasChildren?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Reports.Controllers.MoveDestinationReportFolderDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Controllers.MoveDestinationReportFolderDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.App.ReportCatalogs.Commands.MoveReportCatalogItems": {
      MovedVirtualCatalogItems?:
        | components["schemas"]["CaseMap.Modules.Reports.Controllers.ReportCatalogItemToAction"][]
        | null;
      ParentId?: string | null;
    };
    "CaseMap.Modules.Reports.App.ReportCatalogs.Commands.RenameReportFolder": {
      Id: string | null;
      Name: string | null;
    };
    "CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem": {
      Id?: string;
      Name?: string | null;
      Email?: string | null;
      SysName?: string | null;
      IsAuthor?: boolean;
      AccessLevel?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ProjectPermissions.ProjectPermission"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.App.ReportPermissions.Commands.SaveReportPermissionsRequest": {
      Id?: string;
      EntityType?: components["schemas"]["CaseMap.Modules.Reports.App.ReportCatalogs.ReportListEntityTypeEnum"];
      Permissions?:
        | components["schemas"]["CaseMap.Modules.Reports.App.ReportPermissions.ReportPermissionsListItem"][]
        | null;
    };
    "CaseMap.Modules.Reports.App.ReportPermissions.Commands.UsersAndGroupsInReportsRequest": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.NextPageExistsResult<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse>>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.Sharing.UserGroupSuggestResponse"][]
        | null;
      NextPageExists?: boolean;
    };
    "System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>": {
      Key?: string | null;
      Value?: string[] | null;
    };
    "System.Net.Http.HttpContent": {
      Headers?:
        | components["schemas"]["System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"][]
        | null;
    };
    "System.Net.HttpStatusCode":
      | "Continue"
      | "SwitchingProtocols"
      | "Processing"
      | "EarlyHints"
      | "OK"
      | "Created"
      | "Accepted"
      | "NonAuthoritativeInformation"
      | "NoContent"
      | "ResetContent"
      | "PartialContent"
      | "MultiStatus"
      | "AlreadyReported"
      | "IMUsed"
      | "MultipleChoices"
      | "Ambiguous"
      | "MovedPermanently"
      | "Moved"
      | "Found"
      | "Redirect"
      | "SeeOther"
      | "RedirectMethod"
      | "NotModified"
      | "UseProxy"
      | "Unused"
      | "TemporaryRedirect"
      | "RedirectKeepVerb"
      | "PermanentRedirect"
      | "BadRequest"
      | "Unauthorized"
      | "PaymentRequired"
      | "Forbidden"
      | "NotFound"
      | "MethodNotAllowed"
      | "NotAcceptable"
      | "ProxyAuthenticationRequired"
      | "RequestTimeout"
      | "Conflict"
      | "Gone"
      | "LengthRequired"
      | "PreconditionFailed"
      | "RequestEntityTooLarge"
      | "RequestUriTooLong"
      | "UnsupportedMediaType"
      | "RequestedRangeNotSatisfiable"
      | "ExpectationFailed"
      | "MisdirectedRequest"
      | "UnprocessableEntity"
      | "Locked"
      | "FailedDependency"
      | "UpgradeRequired"
      | "PreconditionRequired"
      | "TooManyRequests"
      | "RequestHeaderFieldsTooLarge"
      | "UnavailableForLegalReasons"
      | "InternalServerError"
      | "NotImplemented"
      | "BadGateway"
      | "ServiceUnavailable"
      | "GatewayTimeout"
      | "HttpVersionNotSupported"
      | "VariantAlsoNegotiates"
      | "InsufficientStorage"
      | "LoopDetected"
      | "NotExtended"
      | "NetworkAuthenticationRequired";
    "System.Net.Http.HttpMethod": {
      Method?: string | null;
    };
    "System.Net.Http.HttpRequestMessage": {
      Version?: string | null;
      Content?: components["schemas"]["System.Net.Http.HttpContent"];
      Method?: components["schemas"]["System.Net.Http.HttpMethod"];
      RequestUri?: string | null;
      Headers?:
        | components["schemas"]["System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"][]
        | null;
      Properties?: { [key: string]: { [key: string]: any } } | null;
    };
    "System.Net.Http.HttpResponseMessage": {
      Version?: string | null;
      Content?: components["schemas"]["System.Net.Http.HttpContent"];
      StatusCode?: components["schemas"]["System.Net.HttpStatusCode"];
      ReasonPhrase?: string | null;
      Headers?:
        | components["schemas"]["System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"][]
        | null;
      TrailingHeaders?:
        | components["schemas"]["System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"][]
        | null;
      RequestMessage?: components["schemas"]["System.Net.Http.HttpRequestMessage"];
      IsSuccessStatusCode?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Common.Responses.DataFields.FieldResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.FieldResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.ReportFieldRequest": {
      ReportFieldType: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
      Id: string;
      Name?: string | null;
    };
    "CaseMap.Modules.Reports.Requests.ReportDateFilterRequest": {
      StartDate?: string | null;
      EndDate?: string | null;
      LastDaysCount?: number | null;
      PeriodType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Services.Data.PeriodType"];
    };
    "CaseMap.Modules.Reports.Request.ReportFilterRequest": {
      Id?: string | null;
      ReportField: components["schemas"]["CaseMap.Modules.Reports.Request.ReportFieldRequest"];
      SearchValues?: string[] | null;
      BeginValue?: string | null;
      EndValue?: string | null;
      IsEmpty?: boolean | null;
      DateFilter?: components["schemas"]["CaseMap.Modules.Reports.Requests.ReportDateFilterRequest"];
    };
    "CaseMap.Modules.Reports.Request.ReportCustomizationRequest": {
      Id?: string | null;
      ReportField: components["schemas"]["CaseMap.Modules.Reports.Request.ReportFieldRequest"];
      Title?: string | null;
      ReportFieldFormat: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      ReportFieldFormatSummary?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ReportFieldFormatFilter?: components["schemas"]["CaseMap.Modules.Reports.Request.ReportFilterRequest"];
      Order: number | null;
      Size?: number | null;
    };
    "CaseMap.Modules.Reports.ScheduledReports.Models.ScheduledReportRecipientModel": {
      Id?: string | null;
      EntityName?: string | null;
      EntityId?: string | null;
      Email?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Reports.ScheduledReports.Models.ScheduledReportRuleModel": {
      Id?: string | null;
      IsActive?: boolean;
      RepeatMode: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      CustomRepeatMode: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      RepeatInterval?: number;
      DayOfWeek?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.DayOfWeek"];
      DayOfMonth?: number | null;
      StartDate?: string | null;
      RunTime?: string;
      Recipients:
        | components["schemas"]["CaseMap.Modules.Reports.ScheduledReports.Models.ScheduledReportRecipientModel"][]
        | null;
      Repeat?: string | null;
      FileFormats?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
    };
    "CaseMap.Modules.Reports.Request.ReportMetadataRequestBase": {
      Name: string | null;
      Description?: string | null;
      Template?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      ReportCustomizations?:
        | components["schemas"]["CaseMap.Modules.Reports.Request.ReportCustomizationRequest"][]
        | null;
      ReportFieldFilters?:
        | components["schemas"]["CaseMap.Modules.Reports.Request.ReportFilterRequest"][]
        | null;
      DefaultPageSize?: number;
      FolderId?: string | null;
      AutoSendRules?:
        | components["schemas"]["CaseMap.Modules.Reports.ScheduledReports.Models.ScheduledReportRuleModel"][]
        | null;
    };
    "CaseMap.Modules.Reports.Response.FieldResponseExtended": {
      SysName?: string | null;
      DictionarySysName?: string | null;
      Type?: string | null;
      FieldFormatSysName?: string | null;
      ReportFieldType?: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
      RootGroupId?: string;
      HierarchyNames?: string[] | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Reports.Response.ColumnFormatResponse": {
      Id?: string | null;
      Name?: string | null;
      SysName?: string | null;
      ForString?: boolean;
      ForBool?: boolean;
      ForDate?: boolean;
      ForTime?: boolean;
      ForNumeric?: boolean;
      ForStringInSummary?: boolean;
      ForBoolInSummary?: boolean;
      ForDateInSummary?: boolean;
      ForTimeInSummary?: boolean;
      ForNumericInSummary?: boolean;
      ForRequiredBool?: boolean;
      ForRequiredBoolInSummary?: boolean;
    };
    "CaseMap.Modules.Reports.Response.ReportDateFilterResponse": {
      StartDate?: string | null;
      EndDate?: string | null;
      LastDaysCount?: number | null;
      PeriodType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Services.Data.PeriodType"];
    };
    "CaseMap.Modules.Reports.Response.ReportFilterResponse": {
      Id?: string;
      SearchValues?: string[] | null;
      IgnoreValues?: string[] | null;
      BeginValue?: string | null;
      EndValue?: string | null;
      DateFilter?: components["schemas"]["CaseMap.Modules.Reports.Response.ReportDateFilterResponse"];
      ReportField?: components["schemas"]["CaseMap.Modules.Reports.Response.FieldResponseExtended"];
      IsEmpty?: boolean | null;
    };
    "CaseMap.Modules.Reports.Response.ReportCustomizationResponse": {
      Id?: string;
      ReportField?: components["schemas"]["CaseMap.Modules.Reports.Response.FieldResponseExtended"];
      Title?: string | null;
      ReportFieldFormat?: components["schemas"]["CaseMap.Modules.Reports.Response.ColumnFormatResponse"];
      ReportFieldFormatSummary?: components["schemas"]["CaseMap.Modules.Reports.Response.ColumnFormatResponse"];
      ReportFieldFormatFilter?: components["schemas"]["CaseMap.Modules.Reports.Response.ReportFilterResponse"];
      Order?: number;
      Size?: number | null;
    };
    "CaseMap.Modules.Reports.Response.ReportMetadataResponse": {
      Template?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      ReportCustomizations?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.ReportCustomizationResponse"][]
        | null;
      ReportFieldFilters?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.ReportFilterResponse"][]
        | null;
      DefaultPageSize?: number;
      IsSystem?: boolean;
      ReportSysName?: string | null;
      IsPreviewed?: boolean;
      AutoSendRules?:
        | components["schemas"]["CaseMap.Modules.Reports.ScheduledReports.Models.ScheduledReportRuleModel"][]
        | null;
      Id?: string;
      Name?: string | null;
      Description?: string | null;
      ReportType?: string | null;
      FolderId?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      UpdateDate?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Reports.Response.ReportMetadataResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Reports.Response.ReportMetadataResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.ReportMetadataUpdateRequest": {
      Id: string;
      Name: string | null;
      Description?: string | null;
      Template?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      ReportCustomizations?:
        | components["schemas"]["CaseMap.Modules.Reports.Request.ReportCustomizationRequest"][]
        | null;
      ReportFieldFilters?:
        | components["schemas"]["CaseMap.Modules.Reports.Request.ReportFilterRequest"][]
        | null;
      DefaultPageSize?: number;
      FolderId?: string | null;
      AutoSendRules?:
        | components["schemas"]["CaseMap.Modules.Reports.ScheduledReports.Models.ScheduledReportRuleModel"][]
        | null;
    };
    "CaseMap.Modules.Reports.App.Reports.Commands.CloneReportMetadata": {
      Id: string | null;
    };
    "CaseMap.Modules.Reports.App.ReportRunRequest": {
      ReportMetadataId: string | null;
    };
    "CaseMap.Modules.Reports.Request.OrderInfoRequest": {
      ColumnId: string;
      IsAsc: boolean;
    };
    "CaseMap.Modules.Reports.Request.ReportInlineFilterRequest": {
      ReportFieldId: string | null;
      SearchValues?: string[] | null;
      BeginValue?: string | null;
      EndValue?: string | null;
      IsEmpty?: boolean | null;
      DateFilter?: components["schemas"]["CaseMap.Modules.Reports.Requests.ReportDateFilterRequest"];
    };
    "CaseMap.Modules.Reports.Request.SortedReportRunRequest": {
      OrderInfo?: components["schemas"]["CaseMap.Modules.Reports.Request.OrderInfoRequest"];
      Filters?:
        | components["schemas"]["CaseMap.Modules.Reports.Request.ReportInlineFilterRequest"][]
        | null;
      ReportMetadataId: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.App.SystemReports.Commands.RunSystemReport": {
      Filters?:
        | components["schemas"]["CaseMap.Modules.Reports.Request.ReportInlineFilterRequest"][]
        | null;
      ReportMetadataId: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Request.ReportFieldSuggestRequest": {
      ReportFieldId: string | null;
      IgnoreValues?: string[] | null;
      ReportFieldType?: components["schemas"]["CaseMap.Modules.Common.Responses.DataFields.ReportFieldType"];
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Request.NewReportRequest": {
      Description: string | null;
      Files?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseMap.Modules.Reports.Response.ColumnFormatResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.ColumnFormatResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.FilteredReportRunRequest": {
      Filters?:
        | components["schemas"]["CaseMap.Modules.Reports.Request.ReportInlineFilterRequest"][]
        | null;
      ReportMetadataId: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary": {
      Count?: number;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupsResponse": {
      ResolutionsCount?: number;
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupUpdateRequest": {
      Id?: string | null;
      Name: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionGroupSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse": {
      Document?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.FileSummary"][]
        | null;
      ResolutionLinks?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      ProjectsLinks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Models.ThroughLinkProjectSummary"][]
        | null;
      AnalisysSubject?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      LitigationCategory?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      MemoDate?: string | null;
      Description?: string | null;
      Id?: string;
      Number?: number;
      ResolutionType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      MemoNumber?: string | null;
      CreationDate?: string | null;
      Owner?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ResolutionTheme?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ResolutionGroup?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      SearchResult?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.KnowledgeBase.Models.ResolutionsRequest": {
      ResolutionGroupId?: string | null;
      HasFile?: boolean | null;
      LitigationCategories?: string[] | null;
      AnalisysSubjects?: string[] | null;
      StartCreateDate?: string | null;
      EndCreateDate?: string | null;
      ResolutionTypes?: string[] | null;
      Owners?: string[] | null;
      ResolutionThemes?: string[] | null;
      ContextSearchString?: string | null;
      LastDaysCreateDate?: number | null;
      StartChangeDate?: string | null;
      EndChangeDate?: string | null;
      LastDaysChangeDate?: number | null;
      Authors?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.KnowledgeBase.Models.ResolutionSummary": {
      Id?: string;
      Number?: number;
      ResolutionType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      MemoNumber?: string | null;
      CreationDate?: string | null;
      Owner?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ResolutionTheme?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ResolutionGroup?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      SearchResult?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.KnowledgeBase.Models.ResolutionSummary>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.KnowledgeBase.Models.ResolutionSummary"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.KnowledgeBase.Models.ResolutionUpdateRequest": {
      Id?: string | null;
      ResolutionGroup?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Number: number | null;
      ResolutionType: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      MemoDate?: string | null;
      MemoNumber?: string | null;
      Owner?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      AnalisysSubject: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Description: string | null;
      ResolutionTheme: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      LitigationCategory: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      Document?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.FileSummary"][]
        | null;
      AddProjects?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      DeleteProjects?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      AddLinks?: string[] | null;
      EditLinks?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      DeleteLinks?: string[] | null;
    };
    "CaseMap.Modules.KnowledgeBase.Models.ChangeResolutionGroupRequest": {
      Id?: string;
      GroupId?: string | null;
    };
    "CaseDotStar.Shell.Models.Request.SectionRequest": {
      Id: string;
      Name: string | null;
      SysName: string | null;
      AvailablePermissions: number | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionInsertRequest": {
      RoleId: string | null;
      Permissions: number | null;
      Section: components["schemas"]["CaseDotStar.Shell.Models.Request.SectionRequest"];
    };
    "CaseDotStar.Shell.Models.Response.SectionResponse": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      AvailablePermissions?: number | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse": {
      Id?: string | null;
      Section?: components["schemas"]["CaseDotStar.Shell.Models.Response.SectionResponse"];
      Permissions?: number | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RolePermissionUpdateRequest": {
      Id: string | null;
      Permissions: number | null;
      Section: components["schemas"]["CaseDotStar.Shell.Models.Request.SectionRequest"];
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse": {
      Childrens?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse"][]
        | null;
      Id?: string | null;
      Section?: components["schemas"]["CaseDotStar.Shell.Models.Response.SectionResponse"];
      Permissions?: number | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse>>": {
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RolePermissionNodeResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequestBase": {
      Name: string | null;
      Description?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse": {
      Id?: string;
      SysName?: string | null;
      Name?: string | null;
      Description?: string | null;
      IsSystem?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.RoleRequest": {
      Id: string | null;
      Name: string | null;
      Description?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>>": {
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.RoleResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel": {
      Id?: string | null;
      IsActive: boolean;
      Type: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Clients:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      ProjectTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      CreationMode?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      InvoicesContent: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Action: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      RepeatMode: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      CustomRepeatMode: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      RepeatInterval: number;
      DayOfWeek?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.DayOfWeek"];
      DayOfMonth?: number | null;
      StartDate?: string | null;
      RunTime: string;
      WarningCaption?: string | null;
      WarningMessage?: string | null;
      Amount?: number | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleModel"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleSummaryModel": {
      Id?: string;
      IsActive?: boolean;
      Clients?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      InvoiceContent?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      InvoiceType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      StartDate?: string | null;
      Repeat?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleSummaryModel>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.ScheduledInvoicesGeneration.Models.ScheduledInvoicesGenerationRuleSummaryModel"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary>>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "System.Threading.Tasks.Task": {
      Id?: number;
      Exception?: string | null;
      Status?: components["schemas"]["System.Threading.Tasks.TaskStatus"];
      IsCanceled?: boolean;
      IsCompleted?: boolean;
      IsCompletedSuccessfully?: boolean;
      CreationOptions?: components["schemas"]["System.Threading.Tasks.TaskCreationOptions"];
      AsyncState?: { [key: string]: any } | null;
      IsFaulted?: boolean;
    };
    "CaseDotStar.Shell.Models.AuthSessionsState": {
      TimeLeft?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Models.AuthSessionsState>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Models.AuthSessionsState"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Tasks.App.TaskPriorities.TaskPriorityDto": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
    };
    "CaseMap.Modules.AiAssistant.Responses.TaskShortcutResponse": {
      Priority?: components["schemas"]["CaseMap.Modules.Tasks.App.TaskPriorities.TaskPriorityDto"];
      EndDate?: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
    };
    "CaseMap.Modules.AiAssistant.Responses.EventShortcutResponse": {
      EventType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
      Date?: string | null;
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
    };
    "CaseMap.Modules.AiAssistant.Responses.ShortcutsResponse": {
      TaskShortcut?: components["schemas"]["CaseMap.Modules.AiAssistant.Responses.TaskShortcutResponse"];
      EventShortcut?: components["schemas"]["CaseMap.Modules.AiAssistant.Responses.EventShortcutResponse"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.AiAssistant.Responses.ShortcutsResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.AiAssistant.Responses.ShortcutsResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem": {
      Id?: string;
      Name?: string | null;
      Stages?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectStageSummary"][]
        | null;
      ObjectClass?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.App.ObjectClasses.Dto.ObjectClassDto"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.ProjectTypes.Criteria.GetProjectTypesWithStages": {
      ObjectClassId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.BusinessDAL.Models.ProjectTypes.Stages.ProjectTypeListItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.Projects.Commands.ChangeProjectStage": {
      ProjectId: string | null;
      NewStageId: string | null;
    };
    "CaseMap.Modules.Projects.Responses.AdditionalInfoItem": {
      Field?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Reports.ReportFieldResponse"];
      Value?: { [key: string]: any } | null;
    };
    "CaseMap.Modules.Projects.Responses.ProjectItem": {
      Id?: string;
      Name?: string | null;
      Number?: string | null;
      CreationDate?: string | null;
      IsArchive?: boolean;
      AdditionalInfo?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.AdditionalInfoItem"][]
        | null;
      Permission?: components["schemas"]["CaseDotStar.Shell.Interfaces.Rights.DataRowPermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.ProjectItem>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectItem"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.App.Projects.Criteria.GetGroupedProjectsByStages": {
      ProjectTypeId: string | null;
      StageId?: string | null;
      Filters?:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.DataFieldFilterRequest"][]
        | null;
      FullSearchString?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Responses.GroupedProjectsByStage": {
      Id?: string;
      Name?: string | null;
      Cases?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.ProjectItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      NextPageExists?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.ICollection<CaseMap.Modules.Projects.Responses.GroupedProjectsByStage>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Responses.GroupedProjectsByStage"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName[]>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlanModel": {
      Id?: string | null;
      Amount?: number;
      TariffName?: string | null;
      MaxCases?: number | null;
      MaxUsers?: number | null;
      MaxCaseStorage?: number | null;
      MaxStorage?: number | null;
      Currency?: string | null;
      Description?: string | null;
      Interval?: string | null;
      IsCurrent?: boolean;
      IsPostPayment?: boolean;
    };
    "CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlansOverview": {
      Annualy?:
        | components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlanModel"][]
        | null;
      Monthly?:
        | components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlanModel"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlansOverview>": {
      Result?: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.Subscriptions.PlansOverview"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.GeneralSettings.Models.Subscriptions.ChangeCardRequest": {
      StripeToken: string | null;
    };
    "CaseMap.Modules.GeneralSettings.Models.PlanChangingOverview": {
      Text?: string | null;
      PlanId?: string | null;
      ProrationDate?: string;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.GeneralSettings.Models.PlanChangingOverview>": {
      Result?: components["schemas"]["CaseMap.Modules.GeneralSettings.Models.PlanChangingOverview"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.GeneralSettings.Models.Subscriptions.ChangePlanRequest": {
      PlanId: string | null;
      ProrationDate?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Request.SubscriptionUpdateRequest": {
      MaxCases?: number | null;
      MaxUsers?: number | null;
      MaxStorage?: number | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.SubscriptionUsages": {
      ActiveCases?: number;
      ActiveUsers?: number;
      UsedStorage?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.ServicePackages.Common.Response.SubscriptionUsages>": {
      Result?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.SubscriptionUsages"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Tasks.App.TaskUsers.FindTaskAuthorUsersPaged": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Tasks.App.TaskUsers.UserDto": {
      Id?: string;
      Email?: string | null;
      Name?: string | null;
      DisplayName?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskUsers.UserDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Tasks.App.TaskUsers.UserDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Scheduler.Models.Requests.Workflow.TaskCreationRequest": {
      TaskCreationSettingId: string | null;
      ProjectId: string | null;
      RaiseEventAuthorId: string | null;
      ActivationDate: string | null;
      EntityId?: string | null;
      EntityFields?:
        | components["schemas"]["CaseMap.Modules.Scheduler.Models.Requests.Workflow.EntityFieldData"][]
        | null;
    };
    "CaseMap.Modules.Tasks.App.TaskNames.FindTaskNamePaged": {
      Name?: string | null;
      SystemName?: string | null;
      UniqueNames?: boolean;
      OnlyChildren?: boolean;
      IgnoreValues?: string[] | null;
      DictionaryLevel?: number;
      ParentValueId?: string | null;
      IsDependent?: boolean;
      ParentId?: string | null;
      WithSubItems?: boolean;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Tasks.App.TaskUsers.FindTaskResponseUsersPaged": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Tasks.App.Tasks.Criteria.TaskGroupByEnum":
      | "Project"
      | "PracticeArea"
      | "Assignee"
      | "EndDate"
      | "DueDate";
    "CaseMap.Modules.Tasks.App.Tasks.FindTaskDtoListByFilter": {
      ProjectGroups?: string[] | null;
      Projects?: string[] | null;
      TaskStateIds?: string[] | null;
      Authors?: string[] | null;
      TaskResponsible?: string[] | null;
      Parents?: string[] | null;
      Branches?: string[] | null;
      StartDate?: string | null;
      EndDate?: string | null;
      StartCreateDate?: string | null;
      EndCreateDate?: string | null;
      GroupBy?: components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.Criteria.TaskGroupByEnum"];
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Tasks.App.Tasks.ViewModels.GroupEntity": {
      SysName?: string | null;
      Id?: string | null;
      Name?: string | null;
    };
    "CaseMap.Modules.Tasks.App.TaskStates.TaskStateDto": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
      IsCustom?: boolean | null;
    };
    "CaseMap.Modules.Tasks.App.Tasks.TaskProjectDto": {
      Id?: string;
      ProjectTypeId?: string;
      ProjectGroupId?: string | null;
      Name?: string | null;
      CreationDate?: string | null;
      DocumentFolder?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ParentFolder?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Tasks.App.Tasks.TaskDto": {
      Id?: string;
      ParentTaskId?: string | null;
      ParentTask?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Priority?: components["schemas"]["CaseMap.Modules.Tasks.App.TaskPriorities.TaskPriorityDto"];
      TaskState?: components["schemas"]["CaseMap.Modules.Tasks.App.TaskStates.TaskStateDto"];
      Documents?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.DocumentWithFileSummary"][]
        | null;
      CloseDate?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      CreationDate?: string | null;
      LastChangeDate?: string | null;
      Subtasks?:
        | components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.TaskDto"][]
        | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      ProjectType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
      NotificationTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      EndDate?: string | null;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      ProjectId?: string;
      Responsibles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUserOrGroup"][]
        | null;
      Project?: components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.TaskProjectDto"];
      TaskName?: components["schemas"]["CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto"];
      Description?: string | null;
    };
    "CaseMap.Modules.Tasks.App.Tasks.GroupedTaskList": {
      GroupEntity?: components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.ViewModels.GroupEntity"];
      Tasks?:
        | components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.TaskDto"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.Tasks.GroupedTaskList>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.GroupedTaskList"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Tasks.App.Tasks.UpdateShortTask": {
      Id: string | null;
      Priority: components["schemas"]["CaseMap.Modules.Tasks.App.TaskPriorities.TaskPriorityDto"];
      TaskState: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.TaskDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Tasks.App.Tasks.TaskBaseDto": {
      ProjectId?: string;
      Responsibles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUserOrGroup"][]
        | null;
      Project?: components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.TaskProjectDto"];
      TaskName?: components["schemas"]["CaseMap.Modules.Tasks.App.TaskNames.TaskNameDto"];
      Description?: string | null;
      EndDate?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskBaseDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.TaskBaseDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Tasks.App.Tasks.TaskDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.TaskDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Tasks.App.Tasks.CreateOrUpdateTask": {
      Id?: string | null;
      ParentTaskId?: string | null;
      Project: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      TaskName: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Priority: components["schemas"]["CaseMap.Modules.Tasks.App.TaskPriorities.TaskPriorityDto"];
      Responsibles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUserOrGroup"][]
        | null;
      Documents:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.DocumentWithFileSummary"][]
        | null;
      Description?: string | null;
      TaskState: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      EndDate?: string | null;
      Subtasks?:
        | components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.CreateOrUpdateTask"][]
        | null;
      AddSubtasks?:
        | components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.CreateOrUpdateTask"][]
        | null;
      TimeLogs?: string[] | null;
      NotificationTypes?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      VisualBlockValueLines?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockLineRequest"][]
        | null;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockRequest"][]
        | null;
    };
    "CaseMap.Modules.Tasks.App.Tasks.ReorderTasks": {
      TaskId: string | null;
      AfterTaskId?: string | null;
    };
    "CaseMap.Modules.Tasks.App.Tasks.ViewTask": {
      Id: string | null;
    };
    "CaseMap.Modules.Tasks.App.Tasks.Commands.SetTasksResponsible": {
      TaskIds: string[] | null;
      Responsibles:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUserOrGroup"][]
        | null;
    };
    "CaseMap.Modules.Tasks.App.Tasks.SetTasksResponsibleSummary": {
      TaskIds: string[] | null;
      Responsibles:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUserOrGroup"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Tasks.App.Tasks.SetTasksResponsibleSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Tasks.App.Tasks.SetTasksResponsibleSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Requests.Suggests.TaskUsersSuggestRequest": {
      ProjectId?: string | null;
      IncludeMyself?: boolean;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Users.UserOrGroupWithName": {
      Name?: string | null;
      SysName?: string | null;
      Id?: string;
      DisplayName?: string | null;
      Email?: string | null;
      Initials?: string | null;
      FileAvatarId?: string | null;
      Post?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.ServicePackages.Common.Users.UserOrGroupWithName>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Users.UserOrGroupWithName"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Database.Data.Projects.Dictionaries.ResetRule": {
      Id?: string;
      Name?: string | null;
      SysName?: string | null;
    };
    "CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse": {
      Id?: string | null;
      Name?: string | null;
      Number?: number;
      ResetRule?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Projects.Dictionaries.ResetRule"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.BusinessDAL.Requests.TemplateNumberRequest": {
      Id?: string | null;
      Name: string | null;
      ResetRule: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
    };
    "CaseMap.Modules.Projects.Controllers.AutoNumbering.SetNumberRequest": {
      TemplateNumberId: string | null;
      Number?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.ServicePackages.Common.IdNameObject>>": {
      Result?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Controllers.AutoNumbering.TemplateNumberResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LoginModel": {
      Login: string | null;
      Password: string | null;
      RememberMe?: boolean;
      ProviderName?: string | null;
    };
    "CaseDotStar.Shell.Models.TokenType": "bearer";
    "CaseDotStar.Shell.Models.Token": {
      access_token: string | null;
      token_type: components["schemas"]["CaseDotStar.Shell.Models.TokenType"];
      expires_in: number | null;
      refresh_token?: string | null;
    };
    "CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.ThirdPartyLogonResponseModel": {
      Token?: components["schemas"]["CaseDotStar.Shell.Models.Token"];
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      ReturnUrl?: string | null;
      Succeeded?: boolean;
      Errors?: string[] | null;
      ErrorHeader?: string | null;
      Error?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Is2FAActive?: boolean;
      IsPhoneConfirmed?: boolean;
      Phone?: string | null;
      NextAttemptTime?: string | null;
      IsUserError?: boolean;
    };
    "CaseDotStar.Shell.Areas.Authentication.Requests.CheckValidationCodeRequest": {
      Login: string | null;
      Code: string | null;
    };
    "CaseDotStar.Shell.Areas.Authentication.Requests.ResendValidationCodeRequest": {
      Login: string | null;
    };
    "CaseDotStar.Shell.Areas.Authentication.Responses.SendCodeResponse": {
      IsSuccess?: boolean;
      NextAttemptTime?: string | null;
      Phone?: string | null;
      Error?: string | null;
    };
    "CaseDotStar.Shell.Areas.Authentication.Responses.ChangePhoneReqestResponse": {
      IsSuccess?: boolean;
      NextAttemptTime?: string | null;
      PendingPhone?: string | null;
      Error?: string | null;
    };
    "CaseDotStar.Shell.Areas.Authentication.Requests.ChangePhoneRequest": {
      Login: string | null;
      Phone: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject": {
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      Id?: string;
      LogType?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      LogDate?: string | null;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      EntityId?: string | null;
      EntityName?: string | null;
      Tag?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag"];
      User?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogUserSummary"];
      IsActive?: boolean;
      StartDateTime?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      Description?: string | null;
      UTBMSTaskCode?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IsBillable: boolean;
      Rate?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.RateSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummaryWithProject"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.TimeLogSummary": {
      Id?: string;
      LogType?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      LogDate?: string | null;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      EntityId?: string | null;
      EntityName?: string | null;
      Tag?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag"];
      User?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogUserSummary"];
      IsActive?: boolean;
      StartDateTime?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      Description?: string | null;
      UTBMSTaskCode?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IsBillable: boolean;
      Rate?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.RateSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.TimeLogSummary[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogSummary"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.PresetSummary": {
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.PresetSummary[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.PresetSummary"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimingRequest": {
      ProjectId: string | null;
      MinDate?: string | null;
      MaxDate?: string | null;
      AuthorIds?: string[] | null;
      Statuses?:
        | components["schemas"]["CaseMap.Modules.Timing.Consts.ExpenseStatus"][]
        | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.EntityTimeLogResponse": {
      Id?: string;
      Description?: string | null;
      Date?: string;
      EntityId?: string | null;
      EntitySysName?: string | null;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      Total?: number;
      BillId?: string | null;
      Status?: string | null;
      Tag?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag"];
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.EntityTimeLogResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.EntityTimeLogResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimeLogsSummary": {
      Total?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      Billable?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      Billed?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      Unbilled?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      Unbillable?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimeLogsSummary>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.EntityTimeLogs.TimeLogsSummary"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Transactions.Commands.TransactionSaveRequest": {
      Id?: string | null;
      Amount: number | null;
      Date: string | null;
      BillableClient?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Account: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      PaymentMethod: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      CheckNumber?: string | null;
      Description?: string | null;
    };
    "CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto": {
      Id?: string;
      Amount?: number;
      Date?: string;
      BillableClient?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Account?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      PaymentMethod?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      CheckNumber?: string | null;
      Description?: string | null;
      TransactionType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Models.TransactionDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Transactions.Commands.TransactionsSummaryRequest": {
      AccountIds?: string[] | null;
      ClientIds?: string[] | null;
      StartDate?: string | null;
      EndDate?: string | null;
      ProjectIds?: string[] | null;
      TypeIds?: string[] | null;
    };
    "CaseMap.Modules.Timing.App.Transactions.Models.TransactionsSummaryDto": {
      TotalFundsIn?: number;
      TotalFundsOut?: number;
      Balance?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionsSummaryDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Models.TransactionsSummaryDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Transactions.Commands.TransactionsListRequest": {
      AccountIds?: string[] | null;
      ClientIds?: string[] | null;
      StartDate?: string | null;
      EndDate?: string | null;
      ProjectIds?: string[] | null;
      TypeIds?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.App.Transactions.Models.TransactionListDto": {
      Bill?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      FundsIn?: number | null;
      FundsOut?: number | null;
      Id?: string;
      Amount?: number;
      Date?: string;
      BillableClient?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Account?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      PaymentMethod?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      CheckNumber?: string | null;
      Description?: string | null;
      TransactionType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.PagedResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionListDto>": {
      TotalCount?: number;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Models.TransactionListDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Transactions.Commands.TransferSaveRequest": {
      Id?: string | null;
      Amount: number | null;
      Date: string | null;
      BillableClient: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      SourceAccount: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      DestinationAccount: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      SourceProject?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      DestinationProject?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Description?: string | null;
    };
    "CaseMap.Modules.Timing.App.Transactions.Models.TransferDto": {
      Id?: string | null;
      Amount?: number | null;
      Date?: string | null;
      BillableClient?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      SourceAccount?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      DestinationAccount?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      SourceProject?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      DestinationProject?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Description?: string | null;
      TransactionType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransferDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Models.TransferDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.Transactions.Models.TransactionPaymentDto": {
      Id?: string;
      Amount?: number;
      Date?: string;
      PaymentAndAccountSource?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      Account?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectDto"];
      CheckNumber?: string | null;
      Description?: string | null;
      TransactionType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Dto.IdNameObjectWithSysNameDto"];
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.Transactions.Models.TransactionPaymentDto>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.Transactions.Models.TransactionPaymentDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.TrustLedgerRequest": {
      AccountIds?: string[] | null;
      TypeIds?: string[] | null;
      BillableClientIds?: string[] | null;
      ProjectIds?: string[] | null;
      PracticeAreaIds?: string[] | null;
      StartDate?: string | null;
      EndDate?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.TypeCaseCountsFilterRequest": {
      MinTotalCasesNumber?: number | null;
      MaxTotalCasesNumber?: number | null;
      MinActiveCasesNumber?: number | null;
      MaxActiveCasesNumber?: number | null;
      MinArchiveCasesNumber?: number | null;
      MaxArchiveCasesNumber?: number | null;
      CaseTypeIds?: string[] | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Response.StandartReports.TypeCaseCountsScheduleResponse": {
      CaseTypeName?: string | null;
      ActiveCasesNumber?: number;
      ArchivedCasesNumber?: number;
      TotalCasesNumber?: number;
      IsOther?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.TypeCaseCountsScheduleResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.TypeCaseCountsScheduleResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse": {
      Id?: string;
      Date?: string;
      Description?: string | null;
      EntityTimeLogEntityId?: string | null;
      EntitySysName?: string | null;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      Quantity?: number | null;
      Rate?: number | null;
      User?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      Total?: number;
      RateCalculationType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ExpenseId?: string | null;
      ProjectId?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.AddToBillRequest": {
      BillId: string | null;
      EntityId: string | null;
      EntitySysName: string | null;
      ProjectId: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.UnbilledTotalRequest": {
      BillId: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimesTotalResponse": {
      Total?: number;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimesTotalResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimesTotalResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.BilledTimes.Request.RemoveFromBillRequest": {
      BilledTimeId: string | null;
      EntitySysName: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.BilledTimes.Response.UnbilledTimeResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Interfaces.UserProvider.UserAccessRequest": {
      UserId: string;
      EntityTypeName?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListPagedResponseModel<CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess>": {
      TotalCount?: number;
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Interfaces.UserProvider.EntityAccess"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel": {
      Id?: string;
      Text?: string | null;
      Type?: string | null;
      Author?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.ShortUser"];
      Time?: string;
      EntityId?: string | null;
      EntityType?: string | null;
      AdditionalData?: { [key: string]: any } | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.UniversalNotifications.Requests.UserNotificationDeleteRequest": {
      Id: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel>": {
      Result?: components["schemas"]["CaseMap.Modules.UniversalNotifications.Models.UserNotificationModel"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.UserExternalCredentialDto": {
      Id?: string;
      Source?: string | null;
      Login?: string | null;
      Password?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse": {
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      Id?: string;
      Email: string | null;
      Name?: string | null;
      Initials: string | null;
      CompanyName: string | null;
      CompanyUrl?: string | null;
      FirstName: string | null;
      MiddleName?: string | null;
      LastName: string | null;
      DisplayName: string | null;
      Phone?: string | null;
      PhoneCode?: string | null;
      Post: string | null;
      FileAvatarId?: string | null;
      Branch?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      TimeZone: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TimeZoneModel"];
      IsAdmin?: boolean;
      IsClient?: boolean;
      IsTwoFactorAuthByPhoneActive?: boolean;
      IsPhoneConfirmed?: boolean;
      IsPhoneChanged?: boolean;
      PendingPhone?: string | null;
      NextPhoneConfirmationAttemptTime?: string | null;
      IsPhoneConfirmationSmsSent?: boolean;
      LEDESTimekeeperId?: string | null;
      LEDESTimekeeperClassification?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ExternalCredentials?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserExternalCredentialDto"][]
        | null;
      WorkingStatus?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      UserType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Responses.Users.UserProfileResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Requests.Users.UserProfileRequest": {
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockRequest"][]
        | null;
      Id?: string;
      Email: string | null;
      Name?: string | null;
      Initials: string | null;
      CompanyName: string | null;
      CompanyUrl?: string | null;
      FirstName: string | null;
      MiddleName?: string | null;
      LastName: string | null;
      DisplayName: string | null;
      Phone?: string | null;
      PhoneCode?: string | null;
      Post: string | null;
      FileAvatarId?: string | null;
      Branch?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      TimeZone: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TimeZoneModel"];
      IsAdmin?: boolean;
      IsClient?: boolean;
      IsTwoFactorAuthByPhoneActive?: boolean;
      IsPhoneConfirmed?: boolean;
      IsPhoneChanged?: boolean;
      PendingPhone?: string | null;
      NextPhoneConfirmationAttemptTime?: string | null;
      IsPhoneConfirmationSmsSent?: boolean;
      LEDESTimekeeperId?: string | null;
      LEDESTimekeeperClassification?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      ExternalCredentials?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserExternalCredentialDto"][]
        | null;
      WorkingStatus?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      UserType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
    };
    "CaseDotStar.Shell.Areas.UserManagment.Requests.ResendPhoneConfirmationCodeRequest": {
      UserId: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.PhoneConfirmationRequestResendResponse": {
      PendingPhone?: string | null;
      NextPhoneConfirmationAttemptTime?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.PhoneConfirmationRequestResendResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.PhoneConfirmationRequestResendResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.UserIdModel": {
      Id?: string;
      IsAdmin?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.UserIdModel>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserIdModel"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Requests.PhoneConfirmationRequest": {
      UserId: string | null;
      Code: string | null;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.UserProjectTypeFiltersRequest": {
      UserIds?: string[] | null;
      ProjectTypeIds?: string[] | null;
      MinArchivedProjectsNumber?: number | null;
      MaxArchivedProjectsNumber?: number | null;
      MinActiveProjectsNumber?: number | null;
      MaxActiveProjectsNumber?: number | null;
      MinTotalNumber?: number | null;
      MaxTotalNumber?: number | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Response.StandartReports.UserProjectTypeScheduleResponse": {
      UserName?: string | null;
      ActiveProjectsNumber?: number;
      ArchivedProjectsNumber?: number;
      TotalProjectsNumber?: number;
      IsOther?: boolean;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.StandartReports.UserProjectTypeScheduleResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.StandartReports.UserProjectTypeScheduleResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.UserRoleCreateRequest": {
      Role: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      UserId: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse": {
      Id?: string;
      Role?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      UserId?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse[]>": {
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserRoleResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse": {
      Email?: string | null;
      Identifier?: string | null;
      Initials?: string | null;
      CompanyName?: string | null;
      CompanyUrl?: string | null;
      FirstName?: string | null;
      LastName?: string | null;
      MiddleName?: string | null;
      Phone?: string | null;
      Post?: string | null;
      Roles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      Branch?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      TimeZone?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TimeZoneModel"];
      ExternalCredentials?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserExternalCredentialDto"][]
        | null;
      WorkingStatus?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      UserCardPermissions?: number;
      WorkingDataPermissions?: number;
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockResponse"][]
        | null;
      MetadataOfBlocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      RequirementConditionDependencies?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.FieldWithRequirementConditionFields"][]
        | null;
      MetadataOfSystemFields?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"][]
        | null;
      Id?: string;
      Name?: string | null;
      UserType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      UserStatusText?: string | null;
      UserStatus?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      Groups?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.SingleUserResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.UserTypeEnum":
      | "User"
      | "Client";
    "CaseDotStar.Shell.Areas.UserManagment.Models.UsersRequest": {
      UserType?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserTypeEnum"];
      NameString?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.UsersResponse": {
      Id?: string;
      Name?: string | null;
      FirstName?: string | null;
      LastName?: string | null;
      MiddleName?: string | null;
      Email?: string | null;
      Groups?:
        | components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.UsersResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UsersResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.UserWithCustomFieldRequest": {
      Blocks?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.EntityVisualBlockRequest"][]
        | null;
      UserType: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObjectWithSysName"];
      Roles?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      Groups?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
      WorkingStatus?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.RequiredIdNameWithSysNameSummary"];
      ExternalCredentials?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserExternalCredentialDto"][]
        | null;
      Id?: string | null;
      Password?: string | null;
      Email?: string | null;
      Identifier?: string | null;
      Initials?: string | null;
      CompanyName?: string | null;
      CompanyUrl?: string | null;
      FirstName?: string | null;
      LastName?: string | null;
      MiddleName?: string | null;
      Phone?: string | null;
      Post?: string | null;
      Branch?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      TimeZone?: components["schemas"]["CaseDotStar.ServicePackages.Common.Models.TimeZoneModel"];
    };
    "CaseDotStar.Shell.Areas.UserManagment.Requests.UserListRequest": {
      UserTypeSysName?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.UserTypeEnum"];
      UserStatusIds?: string[] | null;
      UserGroupIds?: string[] | null;
      ContextNameString?: string | null;
      NameString?: string | null;
      WorkingStatusId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse": {
      Id?: string;
      Name?: string | null;
      UserType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObjectWithSysName"];
      UserStatusText?: string | null;
      UserStatus?: components["schemas"]["CaseMap.Modules.Common.Responses.IdNameObjectSummary"];
      Groups?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.LockUsesRequest": {
      UserIds: string[] | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.List<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse>>": {
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.UserListResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ResendInviteRequest": {
      UserId: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.InvitedUserRegisterRequest": {
      InviteKey: string | null;
      Email: string | null;
      LastName: string | null;
      FirstName: string | null;
      Password: string | null;
      ConfirmPassword: string | null;
    };
    "CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LogonResponseModelAdapter": {
      Data?: components["schemas"]["CaseDotStar.Shell.Areas.Authentication.Models.AccountViewModels.LogonResponseModel"];
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.SetWorkingStatusRequest": {
      UserIds: string[] | null;
      WorkingStatusId: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SetWorkingStatusResponse": {
      UserIds?: string[] | null;
      WorkingStatusId?: string;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SetWorkingStatusResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.SetWorkingStatusResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.UsersCasesLoadFiltersRequest": {
      UserIds?: string[] | null;
      CaseIds?: string[] | null;
      CaseTypeIds?: string[] | null;
      ClientIds?: string[] | null;
      MinTime?: number | null;
      MaxTime?: number | null;
      CaseStatus?: boolean | null;
      ExpenseStatuses?:
        | components["schemas"]["CaseMap.Modules.Timing.Consts.ExpenseStatus"][]
        | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.UsersTasksLoadFilterRequest": {
      UserIds?: string[] | null;
      MinTime?: number | null;
      MaxTime?: number | null;
      MinOpenTasksNumber?: number | null;
      MaxOpenTasksNumber?: number | null;
      MinClosedTasksNumber?: number | null;
      MaxClosedTasksNumber?: number | null;
      MinTotalTasksNumber?: number | null;
      MaxTotalTasksNumber?: number | null;
      MinOverdueTasksNumber?: number | null;
      MaxOverdueTasksNumber?: number | null;
      MinOnTimeTasksNumber?: number | null;
      MaxOnTimeTasksNumber?: number | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Response.SummaryWithFormatResponse": {
      FieldFormatSysName?: string | null;
      DisplayFormatSysName?: string | null;
      Header?: string | null;
      Value?: { [key: string]: any } | null;
      Type?: string | null;
      AgregationType?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<System.Collections.Generic.IEnumerable<CaseMap.Modules.Reports.Response.SummaryWithFormatResponse>>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.SummaryWithFormatResponse"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentFilterRequest": {
      StartDate: string | null;
      EndDate: string | null;
      MinTotalSum?: number | null;
      MaxTotalSum?: number | null;
      UserIds?: string[] | null;
      ExpenseStatuses?:
        | components["schemas"]["CaseMap.Modules.Timing.Consts.ExpenseStatus"][]
        | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Reports.Response.StandartReports.UsersTimeSpentResponse": {
      Header?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.ReportResultColumnResponse"][]
        | null;
      Result?:
        | components["schemas"]["CaseMap.Modules.Reports.Response.ReportCellResponse"][][]
        | null;
      Page?: number;
      PageSize?: number;
      NextPageExists?: boolean;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Reports.Request.StandartReports.UsersTimeSpentDetailsFilterRequest": {
      MinTime?: number | null;
      MaxTime?: number | null;
      CustomerIds?: string[] | null;
      UserIds?: string[] | null;
      ExpenseStatuses?:
        | components["schemas"]["CaseMap.Modules.Timing.Consts.ExpenseStatus"][]
        | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogsRequest": {
      Date: string | null;
      OnlyActive?: boolean;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse": {
      Project?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
      TimerCreationDateTime?: string;
      Id?: string;
      LogType?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      LogDate?: string | null;
      Time?: components["schemas"]["CaseDotStar.ServicePackages.Common.TimeSummary"];
      EntityId?: string | null;
      EntityName?: string | null;
      Tag?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag"];
      User?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.TimeLogUserSummary"];
      IsActive?: boolean;
      StartDateTime?: string | null;
      Permissions?: components["schemas"]["CaseDotStar.ServicePackages.Common.Permissions.CommonPermissions.PermissionEnum"];
      Description?: string | null;
      UTBMSTaskCode?: components["schemas"]["CaseDotStar.ServicePackages.Common.RequiredIdNameObject"];
      IsBillable: boolean;
      Rate?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.RateSummary"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.UserEventTimeLogResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.MVC.Models.UserTimeLogs.StartTimerRequest": {
      Id?: string | null;
      EntityId?: string | null;
      Tag?: components["schemas"]["CaseDotStar.ServicePackages.Common.Database.Data.Activities.Tag"];
      LogType?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseMap.Modules.Timing.App.UTBMS.ViewModels.CodeSetModel": {
      Id: string | null;
      Name: string | null;
      IsActive: boolean | null;
    };
    "CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel": {
      CodeSets:
        | components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.ViewModels.CodeSetModel"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel>": {
      Result?: components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.ViewModels.SettingsModel"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Timing.App.UTBMS.Criteria.TaskCodesSuggestRequest": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Timing.App.UTBMS.ViewModels.TaskCodeDto": {
      Id?: string;
      Name?: string | null;
      CodeSet?: components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"];
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Timing.App.UTBMS.ViewModels.TaskCodeDto>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Timing.App.UTBMS.ViewModels.TaskCodeDto"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Models.VersionInfo": {
      Version?: string | null;
    };
    "CaseMap.Modules.VideoMeeting.Dto.VideoMeetingServerDto": {
      Id?: string;
      Url?: string | null;
      IsCustom?: boolean;
      IsActive?: boolean;
      Name?: string | null;
    };
    "CaseMap.Modules.VideoMeeting.Dto.SettingsDto": {
      Servers:
        | components["schemas"]["CaseMap.Modules.VideoMeeting.Dto.VideoMeetingServerDto"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.SettingsDto>": {
      Result?: components["schemas"]["CaseMap.Modules.VideoMeeting.Dto.SettingsDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.VideoMeeting.Dto.VideoMeetingDto>": {
      Result?: components["schemas"]["CaseMap.Modules.VideoMeeting.Dto.VideoMeetingDto"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse": {
      Id?: string;
      SettingKey?: string | null;
      Value?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ViewSettingUpdateRequest": {
      Id?: string | null;
      SettingKey: string | null;
      Value?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Areas.UserManagment.Models.Responses.ViewSettingsResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset": {
      Id?: string | null;
      SettingKey: string | null;
      Name?: string | null;
      IsActive: boolean | null;
      IsDefault: boolean | null;
      Filters?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset>": {
      Result?: components["schemas"]["CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.Shell.Areas.UserManagment.Models.Requests.ViewSettingUpdateByKeyRequest": {
      SettingKey: string | null;
      Value?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseDotStar.Shell.Administration.DAL.Models.FiltersPreset"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.DAL.Data.SortColumn":
      | "Name"
      | "Type"
      | "DateReceived";
    "CaseMap.Modules.Documents.DAL.Data.DocumentSortOrder": {
      Column?: components["schemas"]["CaseMap.Modules.Documents.DAL.Data.SortColumn"];
      IsAsc?: boolean;
    };
    "CaseMap.Modules.Documents.DAL.Requests.VirtualCatalogRequest": {
      FolderId?: string | null;
      DocumentSortOrder?: components["schemas"]["CaseMap.Modules.Documents.DAL.Data.DocumentSortOrder"];
      DocumentTypeIds?: string[] | null;
      StartReceivedDate?: string | null;
      EndReceivedDate?: string | null;
      AuthorIds?: string[] | null;
      ExternalStorage?: string | null;
      FullSearchString?: string | null;
      ExcludeExternalStorage?: boolean | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem>": {
      Result?: components["schemas"]["CaseMap.Modules.Documents.DAL.Responses.VirtualCatalogItem"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.DAL.Requests.MoveDestinationFoldersRequest": {
      ExcludeFolders?: string[] | null;
      FolderId?: string | null;
      ExternalStorage?: string | null;
      SourceStorage?: string | null;
    };
    "CaseMap.Modules.Documents.DAL.Data.MoveDestinationFolderDto": {
      Id?: string | null;
      Name?: string | null;
      IsSystem?: boolean;
      SysName?: string | null;
      HasChildren?: boolean;
      ExternalStorage?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Documents.DAL.Data.MoveDestinationFolderDto[]>": {
      Result?:
        | components["schemas"]["CaseMap.Modules.Documents.DAL.Data.MoveDestinationFolderDto"][]
        | null;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Documents.DAL.VirtualCatalogs.VirtualCatalogItemBase": {
      Id: string | null;
      SysName: string | null;
      ExternalStorage?: string | null;
    };
    "CaseMap.Modules.Documents.Requests.MoveVirtualCatalogRequest": {
      MovedVirtualCatalogItems:
        | components["schemas"]["CaseMap.Modules.Documents.DAL.VirtualCatalogs.VirtualCatalogItemBase"][]
        | null;
      ParentId?: string | null;
      ExternalStorage?: string | null;
      SourceStorage?: string | null;
    };
    "CaseMap.Modules.Documents.Requests.CreateExternalFolderRequest": {
      ParentId?: string | null;
      Name: string | null;
      ExternalStorage: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Enums.VisualBlockSuggestRequestEntityType":
      | "ProjectType"
      | "IntakeForm"
      | "RegisterTemplate";
    "CaseMap.Modules.Projects.Interfaces.Models.VisualBlockSuggestRequest": {
      EntityType?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Enums.VisualBlockSuggestRequestEntityType"];
      WithoutSystemVisualBlocks?: boolean | null;
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseDotStar.ServicePackages.Common.Response.ListResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>": {
      NextPageExists?: boolean;
      Result?:
        | components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"][]
        | null;
      Page?: number;
      PageSize?: number;
      Count?: number;
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Responses.DeleteVisualBlockResponse": {
      VisualBlockResponse?: components["schemas"]["CaseMap.Modules.Projects.Interfaces.Data.VisualBlocks.VisualBlockResponse"];
      Projects?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.IdNameObject"][]
        | null;
    };
    "CaseDotStar.ServicePackages.Common.Response.ResponseModel<CaseMap.Modules.Projects.Responses.DeleteVisualBlockResponse>": {
      Result?: components["schemas"]["CaseMap.Modules.Projects.Responses.DeleteVisualBlockResponse"];
      Error?: string | null;
      ErrorHeader?: string | null;
      ErrorType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseErrorType"];
      Warning?: string | null;
      WarningHeader?: string | null;
      WarningType?: components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseWarningType"];
      IsSuccess?: boolean;
      Errors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseError"][]
        | null;
      ValidationErrors?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationError"][]
        | null;
      ValidationWarnings?:
        | components["schemas"]["CaseDotStar.ServicePackages.Common.Response.ResponseMessages.ResponseValidationWarning"][]
        | null;
      StackTrace?: string | null;
    };
    "CaseMap.Modules.Projects.Interfaces.Requests.VisualBlocks.GetEntitiesVisualBlocks": {
      Name?: string | null;
      Ids?: string[] | null;
      IgnoreIds?: string[] | null;
      ParentId?: string | null;
      ParentTempId?: string | null;
      Page?: number;
      PageSize?: number;
    };
    "CaseMap.Modules.Projects.Requests.VisualBlocks.VisualBlockRequestBase": {
      NameInConstructor: string | null;
      Description?: string | null;
      IsRepeatable?: boolean;
      Order?: number;
      TempId?: string | null;
      Lines:
        | components["schemas"]["CaseMap.Modules.Projects.Requests.VisualBlocks.BlockLineRequest"][]
        | null;
    };
    "CaseDotStar.FileManager.DAL.WopiFileInfo": {
      BaseFileName?: string | null;
      OwnerId?: string | null;
      ReadOnly?: boolean;
      SHA256?: string | null;
      Size?: number;
      Version?: number;
      BreadcrumbBrandName?: string | null;
      BreadcrumbFolderName?: string | null;
      BreadcrumbDocName?: string | null;
      CloseButtonClosesWindow?: boolean;
      DisablePrint?: boolean;
      DisableTranslation?: boolean;
    };
  };
}

export interface operations {}
